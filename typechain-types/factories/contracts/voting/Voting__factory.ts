/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Voting, VotingInterface } from "../../../contracts/voting/Voting";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialQuorumPercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "removedNode",
        type: "address",
      },
    ],
    name: "NodeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "reporter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reportedNode",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReports",
        type: "uint256",
      },
    ],
    name: "NodeReported",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newThresholdPercent",
        type: "uint256",
      },
    ],
    name: "QuorumThresholdUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "nodeAdmin",
    outputs: [
      {
        internalType: "contract INodeAdmin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nodeStorage",
    outputs: [
      {
        internalType: "contract INodesStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumThresholdPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reportLogs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "reportNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "reportedNodes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nodeAdmin",
        type: "address",
      },
    ],
    name: "setNodeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nodeStorageAddress",
        type: "address",
      },
    ],
    name: "setNodesStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newNodeStorage",
        type: "address",
      },
    ],
    name: "updateNodeStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPercent",
        type: "uint256",
      },
    ],
    name: "updateQuorumThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b73380380610b7383398101604081905261002f916100e4565b61003833610094565b600081118015610049575060648111155b61008c5760405162461bcd60e51b815260206004820152601060248201526f496e76616c69642071756f72756d202560801b604482015260640160405180910390fd5b6003556100fd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100f657600080fd5b5051919050565b610a678061010c6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063dce806ba11610066578063dce806ba146101cd578063f2fde38b146101e0578063f36a6c02146101f3578063f482a53a1461020657600080fd5b8063715018a6146101945780638da5cb5b1461019c578063c3f37225146101ad57600080fd5b80631959a3e9146100d45780631b14ca9b146100e9578063210a5e871461011957806330034df11461012c5780633384d47d1461013f578063648a3a9214610156575b600080fd5b6100e76100e2366004610920565b610219565b005b6001546100fc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e7610127366004610942565b61029e565b6100e761013a366004610920565b610337565b61014860035481565b604051908152602001610110565b61018461016436600461095b565b600560209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610110565b6100e76106fd565b6000546001600160a01b03166100fc565b6101486101bb366004610920565b60046020526000908152604090205481565b6100e76101db366004610920565b610711565b6100e76101ee366004610920565b610791565b6100e7610201366004610920565b61080a565b6002546100fc906001600160a01b031681565b61022161085a565b6001600160a01b03811661027c5760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642073746f72616765206164647265737300000000000000000060448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6102a661085a565b6000811180156102b7575060648111155b6102fc5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081c5d5bdc9d5b481c195c98d95b9d60521b6044820152606401610273565b60038190556040518181527fbc589fccf641d342b7853c2c6faca39631d4d19efbe77e71e5611e31678c220e9060200160405180910390a150565b600154604051639ebd11ef60e01b81523360048201526001600160a01b0390911690639ebd11ef90602401602060405180830381865afa15801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a3919061098e565b6103e25760405162461bcd60e51b815260206004820152601060248201526f4e6f7420612076616c6964206e6f646560801b6044820152606401610273565b600154604051639ebd11ef60e01b81526001600160a01b03838116600483015290911690639ebd11ef90602401602060405180830381865afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610450919061098e565b61049c5760405162461bcd60e51b815260206004820152601a60248201527f546172676574206973206e6f7420612076616c6964206e6f64650000000000006044820152606401610273565b3360009081526005602090815260408083206001600160a01b038516845290915290205460ff16156105085760405162461bcd60e51b8152602060048201526015602482015274139bd91948185b1c9958591e481c995c1bdc9d1959605a1b6044820152606401610273565b3360009081526005602090815260408083206001600160a01b03851684528252808320805460ff19166001908117909155600490925282208054919290916105519084906109c6565b90915550506001600160a01b0381166000818152600460205260409081902054905133917f3bcb888c6c9a015b13b43cedd36d49ff05dd359a7bab4d5e4bfdfc4be3dd0b61916105a391815260200190565b60405180910390a3600154604080516382fc285760e01b815290516000926001600160a01b0316916382fc28579160048083019260209291908290030181865afa1580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061991906109df565b9050600060646003548361062d91906109f8565b6106389060636109c6565b6106429190610a0f565b6001600160a01b03841660009081526004602052604090205490915081116106f857600254604051631484968760e11b81526001600160a01b038581166004830152909116906329092d0e90602401600060405180830381600087803b1580156106ab57600080fd5b505af11580156106bf573d6000803e3d6000fd5b50506040516001600160a01b03861692507fcfc24166db4bb677e857cacabd1541fb2b30645021b27c5130419589b84db52b9150600090a25b505050565b61070561085a565b61070f60006108b4565b565b61071961085a565b6001600160a01b03811661076f5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206e6f64652061646d696e20616464726573730000000000006044820152606401610273565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61079961085a565b6001600160a01b0381166107fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610273565b610807816108b4565b50565b61081261085a565b6001600160a01b03811661027c5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610273565b6000546001600160a01b0316331461070f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610273565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461091b57600080fd5b919050565b60006020828403121561093257600080fd5b61093b82610904565b9392505050565b60006020828403121561095457600080fd5b5035919050565b6000806040838503121561096e57600080fd5b61097783610904565b915061098560208401610904565b90509250929050565b6000602082840312156109a057600080fd5b8151801515811461093b57600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109d9576109d96109b0565b92915050565b6000602082840312156109f157600080fd5b5051919050565b80820281158282048414176109d9576109d96109b0565b600082610a2c57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204ccef377cb95b773d9d2392ab8728b88b132d7a5e2e176fe8dbad12c4a569c0f64736f6c634300081c0033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialQuorumPercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_initialQuorumPercent, overrides || {});
  }
  override deploy(
    _initialQuorumPercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_initialQuorumPercent, overrides || {}) as Promise<
      Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Voting__factory {
    return super.connect(runner) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new Interface(_abi) as VotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Voting {
    return new Contract(address, _abi, runner) as unknown as Voting;
  }
}
