{"id":"a6dacfe162745c83410eacc6429d7402","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/AssetTransferAgent.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interfaces/IAssetTransferAgent.sol\";\n\ncontract AssetTransferAgent is IAssetTransferAgent, Ownable {\n    using SafeERC20 for IERC20;\n\n    address public marketplace;\n\n    modifier onlyMarketplace() {\n        require(msg.sender == marketplace, \"Only marketplace can call\");\n        _;\n    }\n\n    constructor() {}\n\n    function setMarketplace(address _marketplace) external onlyOwner {\n        require(_marketplace != address(0), \"Invalid marketplace address\");\n        marketplace = _marketplace;\n    }\n\n    function transferERC20(\n        address token,\n        address from,\n        address to,\n        uint256 amount\n    ) external override onlyMarketplace {\n        IERC20(token).safeTransferFrom(from, to, amount);\n        emit ERC20Transferred(token, from, to, amount);\n    }\n\n    function transferERC721(\n        address token,\n        address from,\n        address to,\n        uint256 tokenId\n    ) external override onlyMarketplace {\n        IERC721(token).safeTransferFrom(from, to, tokenId);\n        emit ERC721Transferred(token, from, to, tokenId);\n    }\n\n    function transferERC1155(\n        address token,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external override onlyMarketplace {\n        IERC1155(token).safeTransferFrom(from, to, id, amount, data);\n        emit ERC1155Transferred(token, from, to, id, amount);\n    }\n}\n"},"contracts/interfaces/IAssetTransferAgent.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ninterface IAssetTransferAgent {\n    event ERC20Transferred(address indexed token, address indexed from, address indexed to, uint256 amount);\n    event ERC721Transferred(address indexed token, address indexed from, address indexed to, uint256 tokenId);\n    event ERC1155Transferred(address indexed token, address indexed from, address indexed to, uint256 tokenId, uint256 amount);\n    event ERC1155BatchTransferred(address indexed token, address indexed from, address indexed to, uint256[] tokenIds, uint256[] amounts);\n\n    function transferERC20(address token, address from, address to, uint256 amount) external;\n\n    function transferERC721(address token, address from, address to, uint256 tokenId) external;\n\n    function transferERC1155(address token, address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n}\n"},"contracts/libraries/Hashes.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\npragma abicoder v2;\n\nlibrary Hashes {\n    /**\n     * @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n     *\n     * NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n     */\n    function commutativeKeccak256(bytes32 a, bytes32 b)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return a < b ? _efficientKeccak256(a, b) : _efficientKeccak256(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientKeccak256(bytes32 a, bytes32 b)\n        private\n        pure\n        returns (bytes32 value)\n    {\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"contracts/libraries/LibAsset.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nlibrary LibAsset {\n    enum AssetType {\n        NATIVE,\n        ERC20,\n        ERC1155,\n        ERC721\n    }\n\n    bytes32 private constant ASSET_TYPE_HASH =\n        keccak256(\n            \"Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\"\n        );\n\n    struct Asset {\n        AssetType assetType;\n        address contractAddress;\n        uint256 assetId;\n        uint256 assetAmount;\n    }\n\n    function hash(Asset memory asset) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    ASSET_TYPE_HASH,\n                    asset.assetType,\n                    asset.contractAddress,\n                    asset.assetId,\n                    asset.assetAmount\n                )\n            );\n    }\n\n    function validateCompatibleAsset(\n        Asset calldata requestedAsset,\n        Asset calldata offeredAsset\n    ) internal pure {\n        require(\n            requestedAsset.assetType == offeredAsset.assetType,\n            \"Asset type mismatch\"\n        );\n        require(\n            requestedAsset.contractAddress == offeredAsset.contractAddress,\n            \"Contract address mismatch\"\n        );\n        require(\n            requestedAsset.assetId == offeredAsset.assetId,\n            \"Asset ID mismatch\"\n        );\n        require(\n            offeredAsset.assetAmount <= requestedAsset.assetAmount,\n            \"Offered amount exceeds requested\"\n        );\n    }\n}\n"},"contracts/libraries/LibOrder.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"./LibAsset.sol\";\n\nlibrary LibOrder {\n    using ECDSA for bytes32;\n\n    bytes32 private constant ORDER_ITEM_TYPEHASH =\n        keccak256(\n            \"OrderItem(Asset makeAsset,Asset takeAsset,uint256 start,uint256 end)Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\"\n        );\n\n    bytes32 private constant ORDER_TYPEHASH =\n        keccak256(\n            \"Order(uint8 orderType,OrderItem[] items,address maker,address taker,bytes32 root,uint256 salt)OrderItem(Asset makeAsset,Asset takeAsset,uint256 start,uint256 end)Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\"\n        );\n\n    enum OrderType {\n        BID,\n        ASK,\n        BULK\n    }\n\n    struct OrderItem {\n        LibAsset.Asset makeAsset;\n        LibAsset.Asset takeAsset;\n        uint256 start;\n        uint256 end;\n    }\n\n    struct Order {\n        OrderType orderType;\n        OrderItem[] items;\n        address maker;\n        address taker;\n        bytes32 root;\n        uint256 salt;\n        bytes signature;\n    }\n\n    function hashOrderItem(\n        OrderItem calldata item\n    ) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    ORDER_ITEM_TYPEHASH,\n                    LibAsset.hash(item.makeAsset),\n                    LibAsset.hash(item.takeAsset),\n                    item.start,\n                    item.end\n                )\n            );\n    }\n\n    function hash(Order calldata order) internal pure returns (bytes32) {\n        bytes32[] memory itemHashes = new bytes32[](order.items.length);\n        for (uint256 i = 0; i < order.items.length; i++) {\n            itemHashes[i] = hashOrderItem(order.items[i]);\n        }\n\n        bytes32 itemsHash = keccak256(abi.encodePacked(itemHashes));\n\n        return\n            keccak256(\n                abi.encode(\n                    ORDER_TYPEHASH,\n                    order.orderType,\n                    itemsHash,\n                    order.maker,\n                    order.taker,\n                    order.root,\n                    order.salt\n                )\n            );\n    }\n\n    function recoverSigner(\n        bytes32 orderHash,\n        bytes memory signature\n    ) internal pure returns (address) {\n        return orderHash.toEthSignedMessageHash().recover(signature);\n    }\n\n    function isOrderExpired(\n        Order memory order,\n        uint256 orderItemIndex\n    ) internal view returns (bool) {\n        return block.timestamp > order.items[orderItemIndex].end;\n    }\n}\n"},"contracts/libraries/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\npragma abicoder v2;\n\nimport \"./Hashes.sol\"; \n\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with the default hashing function.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf)\n        internal\n        pure\n        returns (bytes32)\n    {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProof(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in memory with a custom hashing function.\n     */\n    function processProof(\n        bytes32[] memory proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with the default hashing function.\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf)\n        internal\n        pure\n        returns (bytes32)\n    {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = Hashes.commutativeKeccak256(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function verifyCalldata(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bool) {\n        return processProofCalldata(proof, leaf, hasher) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leaves & pre-images are assumed to be sorted.\n     *\n     * This version handles proofs in calldata with a custom hashing function.\n     */\n    function processProofCalldata(\n        bytes32[] calldata proof,\n        bytes32 leaf,\n        function(bytes32, bytes32) view returns (bytes32) hasher\n    ) internal view returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = hasher(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n}\n"},"contracts/Marketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./libraries/LibOrder.sol\";\nimport \"./libraries/LibAsset.sol\";\nimport \"./interfaces/IAssetTransferAgent.sol\";\nimport \"./OrderValidator.sol\";\n\ncontract Marketplace is ReentrancyGuard, Ownable, OrderValidator {\n    uint256 public constant MAX_FEE_BPS = 10000;\n    address public feeRecipient;\n    address public assetTransferAgent;\n    uint256 public feeBps;\n\n    mapping(bytes32 => mapping(uint256 => uint256)) public orderFillAmount;\n    mapping(bytes32 => mapping(uint256 => bool)) private cancelledOrders;\n\n    event CancelOrder(bytes32 indexed orderHash);\n    event OrderMatched(\n        bytes32 indexed orderHash,\n        address indexed maker,\n        address indexed taker,\n        uint256 fillAmount\n    );\n\n    constructor(\n        address _feeRecipient,\n        address _assetTransferAgent,\n        uint256 _feeBps\n    ) OrderValidator(\"LayerGMarketPlace\", \"1\") {\n        feeRecipient = _feeRecipient;\n        assetTransferAgent = _assetTransferAgent;\n        require(_feeBps >= 0 && _feeBps <= MAX_FEE_BPS, \"Invalid fee BPS\");\n        feeBps = _feeBps;\n    }\n\n    function isOrderFullyFilled(\n        LibOrder.Order calldata order,\n        uint256 orderItemIndex\n    ) public view returns (bool) {\n        return\n            orderFillAmount[LibOrder.hash(order)][orderItemIndex] >=\n            order.items[orderItemIndex].makeAsset.assetAmount;\n    }\n\n    function isOrderCancelled(\n        LibOrder.Order calldata order,\n        uint256 orderItemIndex\n    ) public view returns (bool) {\n        return cancelledOrders[LibOrder.hash(order)][orderItemIndex];\n    }\n\n    function setFeeRecipient(address _feeRecipient) external onlyOwner {\n        require(_feeRecipient != address(0), \"Invalid fee recipient\");\n        feeRecipient = _feeRecipient;\n    }\n\n    function setAssetTransferAgent(address _agent) external onlyOwner {\n        require(_agent != address(0), \"Invalid asset transfer agent\");\n        assetTransferAgent = _agent;\n    }\n\n    function setFeeBps(uint256 _feeBps) external onlyOwner {\n        require(_feeBps >= 0 && _feeBps <= MAX_FEE_BPS, \"Invalid fee BPS\");\n        feeBps = _feeBps;\n    }\n\n    function cancelOrder(\n        LibOrder.Order calldata order,\n        uint256 orderItemIndex\n    ) external nonReentrant {\n        bytes32 orderHash = hashOrder(order);\n        validateOrderSigner(order);\n        require(msg.sender == order.maker, \"Only maker can cancel\");\n        require(\n            !isOrderFullyFilled(order, orderItemIndex),\n            \"Order already filled\"\n        );\n        require(\n            !isOrderCancelled(order, orderItemIndex),\n            \"Order already cancelled\"\n        );\n\n        cancelledOrders[orderHash][orderItemIndex] = true;\n        emit CancelOrder(orderHash);\n    }\n\n    function matchOrders(\n        LibOrder.Order calldata makerOrder,\n        LibOrder.Order calldata takerOrder,\n        uint256 orderItemIndex,\n        bytes32[] calldata proof\n    ) external payable nonReentrant {\n        LibOrder.OrderItem calldata makerOrderItem = makerOrder.items[\n            orderItemIndex\n        ];\n        LibOrder.OrderItem calldata takerOrderItem = takerOrder.items[0];\n        _validate(makerOrder, takerOrder, orderItemIndex);\n        if (makerOrder.orderType == LibOrder.OrderType.BULK) {\n            validateBulkOrderItem(makerOrderItem, makerOrder.root, proof);\n        }\n\n        bytes32 makerOrderHash = LibOrder.hash(makerOrder);\n        uint256 fillAmount = takerOrderItem.takeAsset.assetAmount;\n\n        _fillOrder(\n            makerOrderHash,\n            fillAmount,\n            makerOrderItem.makeAsset.assetAmount,\n            orderItemIndex\n        );\n\n        address maker = makerOrder.maker;\n        address taker = takerOrder.maker;\n\n        LibAsset.Asset memory makeAsset = LibAsset.Asset(\n            makerOrderItem.makeAsset.assetType,\n            makerOrderItem.makeAsset.contractAddress,\n            makerOrderItem.makeAsset.assetId,\n            fillAmount\n        );\n\n        LibAsset.Asset memory takeAsset = LibAsset.Asset(\n            makerOrderItem.takeAsset.assetType,\n            makerOrderItem.takeAsset.contractAddress,\n            makerOrderItem.takeAsset.assetId,\n            fillAmount\n        );\n\n        _transferWithFee(taker, maker, takeAsset);\n        _transferWithFee(maker, taker, makeAsset);\n\n        emit OrderMatched(makerOrderHash, maker, taker, fillAmount);\n    }\n\n    function batchMatchOrders(\n        LibOrder.Order[] calldata makerOrders,\n        LibOrder.Order calldata takerOrder,\n        uint256[] calldata orderItemIndices,\n        bytes32[][] calldata proofs\n    ) external payable nonReentrant {\n        require(\n            makerOrders.length == orderItemIndices.length,\n            \"Length mismatch\"\n        );\n        require(makerOrders.length == proofs.length, \"Proofs length mismatch\");\n\n        uint256 totalNativeAmount = 0;\n\n        for (uint256 i = 0; i < makerOrders.length; i++) {\n            LibOrder.Order calldata makerOrder = makerOrders[i];\n            uint256 orderItemIndex = orderItemIndices[i];\n            bytes32[] calldata proof = proofs[i];\n\n            LibOrder.OrderItem calldata makerOrderItem = makerOrder.items[\n                orderItemIndex\n            ];\n            LibOrder.OrderItem calldata takerOrderItem = takerOrder.items[i];\n\n            _validate(makerOrder, takerOrder, orderItemIndex);\n            if (makerOrder.orderType == LibOrder.OrderType.BULK) {\n                validateBulkOrderItem(makerOrderItem, makerOrder.root, proof);\n            }\n\n            bytes32 makerOrderHash = LibOrder.hash(makerOrder);\n            uint256 fillAmount = takerOrderItem.takeAsset.assetAmount;\n\n            _fillOrder(\n                makerOrderHash,\n                fillAmount,\n                makerOrderItem.makeAsset.assetAmount,\n                orderItemIndex\n            );\n\n            address maker = makerOrder.maker;\n            address taker = takerOrder.maker;\n\n            LibAsset.Asset memory makeAsset = LibAsset.Asset(\n                makerOrderItem.makeAsset.assetType,\n                makerOrderItem.makeAsset.contractAddress,\n                makerOrderItem.makeAsset.assetId,\n                fillAmount\n            );\n\n            LibAsset.Asset memory takeAsset = LibAsset.Asset(\n                makerOrderItem.takeAsset.assetType,\n                makerOrderItem.takeAsset.contractAddress,\n                makerOrderItem.takeAsset.assetId,\n                fillAmount\n            );\n\n            // Accumulate native payment\n            if (takeAsset.assetType == LibAsset.AssetType.NATIVE) {\n                totalNativeAmount += takeAsset.assetAmount;\n            }\n\n            _transferWithFee(taker, maker, takeAsset);\n            _transferWithFee(maker, taker, makeAsset);\n\n            emit OrderMatched(makerOrderHash, maker, taker, fillAmount);\n        }\n\n        // Check that enough ETH was sent\n        if (totalNativeAmount > 0) {\n            require(\n                msg.value >= totalNativeAmount,\n                \"Insufficient total msg.value\"\n            );\n        }\n    }\n\n    function acceptBid(\n        LibOrder.Order calldata bidOrder,\n        uint256 orderItemIndex,\n        uint256 sellAmount\n    ) external payable nonReentrant {\n        require(\n            bidOrder.orderType == LibOrder.OrderType.BID,\n            \"Not a bid order\"\n        );\n\n        bytes32 orderHash = LibOrder.hash(bidOrder);\n        validateOrderSigner(bidOrder);\n\n        LibOrder.OrderItem memory bidOrderItem = bidOrder.items[orderItemIndex];\n        uint256 remaining = bidOrderItem.makeAsset.assetAmount -\n            orderFillAmount[orderHash][orderItemIndex];\n        require(\n            sellAmount > 0 && sellAmount <= remaining,\n            \"Invalid sell amount\"\n        );\n\n        orderFillAmount[orderHash][orderItemIndex] += sellAmount;\n\n        address bidder = bidOrder.maker;\n        address seller = msg.sender;\n\n        LibAsset.Asset memory makeAsset = LibAsset.Asset(\n            bidOrderItem.makeAsset.assetType,\n            bidOrderItem.makeAsset.contractAddress,\n            bidOrderItem.makeAsset.assetId,\n            sellAmount\n        );\n\n        LibAsset.Asset memory takeAsset = LibAsset.Asset(\n            bidOrderItem.takeAsset.assetType,\n            bidOrderItem.takeAsset.contractAddress,\n            bidOrderItem.takeAsset.assetId,\n            sellAmount\n        );\n\n        _transferWithFee(bidder, seller, makeAsset);\n        _transferWithFee(seller, bidder, takeAsset);\n\n        emit OrderMatched(orderHash, bidder, seller, sellAmount);\n    }\n\n    function _fillOrder(\n        bytes32 orderHash,\n        uint256 fillAmount,\n        uint256 totalAmount,\n        uint256 orderItemIndex\n    ) internal {\n        uint256 filled = orderFillAmount[orderHash][orderItemIndex];\n        require(\n            fillAmount > 0 && filled + fillAmount <= totalAmount,\n            \"Invalid fill\"\n        );\n        orderFillAmount[orderHash][orderItemIndex] = filled + fillAmount;\n    }\n\n    function _transferWithFee(\n        address from,\n        address to,\n        LibAsset.Asset memory asset\n    ) internal {\n        require(feeRecipient != address(0), \"Fee recipient not set\");\n        require(assetTransferAgent != address(0), \"Transfer agent not set\");\n        if (asset.assetType == LibAsset.AssetType.NATIVE) {\n            uint256 feeAmount = (asset.assetAmount * feeBps) / 10000;\n            uint256 amountAfterFee = asset.assetAmount - feeAmount;\n            require(msg.value >= asset.assetAmount, \"Insufficient msg.value\");\n            if (feeAmount > 0) {\n                (bool feeSent, ) = feeRecipient.call{value: feeAmount}(\"\");\n                require(feeSent, \"Fee transfer failed\");\n            }\n            (bool sent, ) = to.call{value: amountAfterFee}(\"\");\n            require(sent, \"Native transfer failed\");\n        } else if (asset.assetType == LibAsset.AssetType.ERC20) {\n            uint256 feeAmount = (asset.assetAmount * feeBps) / 10000;\n            uint256 amountAfterFee = asset.assetAmount - feeAmount;\n            if (feeAmount > 0) {\n                IAssetTransferAgent(assetTransferAgent).transferERC20(\n                    asset.contractAddress,\n                    from,\n                    feeRecipient,\n                    feeAmount\n                );\n            }\n            IAssetTransferAgent(assetTransferAgent).transferERC20(\n                asset.contractAddress,\n                from,\n                to,\n                amountAfterFee\n            );\n        } else if (asset.assetType == LibAsset.AssetType.ERC721) {\n            IAssetTransferAgent(assetTransferAgent).transferERC721(\n                asset.contractAddress,\n                from,\n                to,\n                asset.assetId\n            );\n        } else if (asset.assetType == LibAsset.AssetType.ERC1155) {\n            IAssetTransferAgent(assetTransferAgent).transferERC1155(\n                asset.contractAddress,\n                from,\n                to,\n                asset.assetId,\n                asset.assetAmount,\n                \"\"\n            );\n        } else {\n            revert(\"Unsupported asset type\");\n        }\n    }\n\n    function _validate(\n        LibOrder.Order calldata makerOrder,\n        LibOrder.Order calldata takerOrder,\n        uint256 orderItemIndex\n    ) internal view {\n        validateOrderSigner(makerOrder);\n        validateIfMatchedBothSide(makerOrder, takerOrder, orderItemIndex);\n        require(msg.sender == takerOrder.maker, \"Sender is not taker\");\n\n        // Validate if orders are fully filled\n        require(\n            !isOrderFullyFilled(makerOrder, orderItemIndex),\n            \"Maker order filled\"\n        );\n        // Validate if orders are cancelled\n        require(\n            !isOrderCancelled(makerOrder, orderItemIndex),\n            \"Maker order cancelled\"\n        );\n        // Validate if orders are expired\n        require(\n            !LibOrder.isOrderExpired(makerOrder, orderItemIndex),\n            \"Maker order expired\"\n        );\n    }\n}\n"},"contracts/OrderValidator.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"./libraries/LibOrder.sol\";\nimport \"./libraries/LibAsset.sol\";\nimport \"./libraries/MerkleProof.sol\";\n\nabstract contract OrderValidator is EIP712 {\n    using ECDSA for bytes32;\n\n    bytes4 internal constant MAGICVALUE = 0x1626ba7e;\n\n    constructor(\n        string memory name,\n        string memory version\n    ) EIP712(name, version) {}\n\n    function hashOrder(\n        LibOrder.Order calldata order\n    ) internal view returns (bytes32) {\n        bytes32 hash = _hashTypedDataV4(LibOrder.hash(order));\n        return hash;\n    }\n\n    function validateOrderSigner(LibOrder.Order calldata order) internal view {\n        address maker = order.maker;\n        bytes32 orderHash = hashOrder(order);\n        bytes calldata signature = order.signature;\n        if (maker.code.length > 0) {\n            require(\n                IERC1271(maker).isValidSignature(orderHash, signature) ==\n                    MAGICVALUE,\n                \"contract order signature verification error\"\n            );\n        } else {\n            address signer = LibOrder.recoverSigner(orderHash, signature);\n            require(\n                maker == signer,\n                \"Invalid signature. Maker is not the signer\"\n            );\n        }\n    }\n\n    function validateBulkOrderItem(\n        LibOrder.OrderItem calldata orderItem,\n        bytes32 root,\n        bytes32[] calldata proof\n    ) internal pure {\n        // Hash the entire maker order using LibOrder.hash() to generate the Merkle leaf\n        bytes32 leaf = LibOrder.hashOrderItem(orderItem);\n        // Verify the Merkle proof\n        require(verifyMerkleProof(proof, root, leaf), \"Invalid Merkle proof\");\n    }\n\n    function verifyMerkleProof(\n        bytes32[] calldata proof,\n        bytes32 root,\n        bytes32 leaf\n    ) public pure returns (bool) {\n        return MerkleProof.verify(proof, root, leaf);\n    }\n\n    function validateIfMatchedBothSide(\n        LibOrder.Order calldata makerOrder,\n        LibOrder.Order calldata takerOrder,\n        uint256 index\n    ) internal pure {\n        LibOrder.OrderItem calldata makerOrderItem = makerOrder.items[index];\n        LibOrder.OrderItem calldata takerOrderItem = takerOrder.items[0];\n\n        require(makerOrder.maker == takerOrder.taker, \"Taker must match maker\");\n        //Validate if taker makeAsset is same as maker takeAsset\n        LibAsset.validateCompatibleAsset(\n            makerOrderItem.takeAsset,\n            takerOrderItem.makeAsset\n        );\n        LibAsset.validateCompatibleAsset(\n            makerOrderItem.makeAsset,\n            takerOrderItem.takeAsset\n        );\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1304],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1305,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1304,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1304],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[],"usedEvents":[13]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[126]},"id":127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"117:189:1","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"},"fullyImplemented":false,"id":126,"linearizedBaseContracts":[126],"name":"IERC1271","nameLocation":"317:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"332:220:1","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":125,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"566:16:1","nodeType":"FunctionDefinition","parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"hash","nameLocation":"591:4:1","nodeType":"VariableDeclaration","scope":125,"src":"583:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"583:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":120,"mutability":"mutable","name":"signature","nameLocation":"610:9:1","nodeType":"VariableDeclaration","scope":125,"src":"597:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":119,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"582:38:1"},"returnParameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"magicValue","nameLocation":"651:10:1","nodeType":"VariableDeclaration","scope":125,"src":"644:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":122,"name":"bytes4","nodeType":"ElementaryTypeName","src":"644:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"643:19:1"},"scope":126,"src":"557:106:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":127,"src":"307:358:1","usedErrors":[],"usedEvents":[]}],"src":"92:574:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[151]},"id":152,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":128,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":151,"linearizedBaseContracts":[151],"name":"IERC5267","nameLocation":"142:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"157:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":131,"name":"EIP712DomainChanged","nameLocation":"252:19:2","nodeType":"EventDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[],"src":"271:2:2"},"src":"246:28:2"},{"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"280:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":150,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:2","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"446:2:2"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"fields","nameLocation":"516:6:2","nodeType":"VariableDeclaration","scope":150,"src":"509:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":134,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":137,"mutability":"mutable","name":"name","nameLocation":"550:4:2","nodeType":"VariableDeclaration","scope":150,"src":"536:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":136,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"version","nameLocation":"582:7:2","nodeType":"VariableDeclaration","scope":150,"src":"568:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":138,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"chainId","nameLocation":"611:7:2","nodeType":"VariableDeclaration","scope":150,"src":"603:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:2","nodeType":"VariableDeclaration","scope":150,"src":"632:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"salt","nameLocation":"679:4:2","nodeType":"VariableDeclaration","scope":150,"src":"671:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"extensions","nameLocation":"714:10:2","nodeType":"VariableDeclaration","scope":150,"src":"697:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":147,"nodeType":"ArrayTypeName","src":"697:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:2"},"scope":151,"src":"425:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":152,"src":"132:605:2","usedErrors":[],"usedEvents":[131]}],"src":"107:631:2"},"id":2},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[216]},"id":217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":153,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"137:750:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":216,"linearizedBaseContracts":[216],"name":"ReentrancyGuard","nameLocation":"906:15:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":157,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:3","nodeType":"VariableDeclaration","scope":216,"src":"1676:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":160,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:3","nodeType":"VariableDeclaration","scope":216,"src":"1723:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":162,"mutability":"mutable","name":"_status","nameLocation":"1783:7:3","nodeType":"VariableDeclaration","scope":216,"src":"1767:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":169,"nodeType":"Block","src":"1811:39:3","statements":[{"expression":{"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":165,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":166,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1831:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":168,"nodeType":"ExpressionStatement","src":"1821:22:3"}]},"id":170,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"1808:2:3"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[],"src":"1811:0:3"},"scope":216,"src":"1797:53:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":180,"nodeType":"Block","src":"2251:79:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"2261:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"2261:21:3"},{"id":176,"nodeType":"PlaceholderStatement","src":"2292:1:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":177,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"2303:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"2303:20:3"}]},"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1856:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":181,"name":"nonReentrant","nameLocation":"2236:12:3","nodeType":"ModifierDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"2248:2:3"},"src":"2227:103:3","virtual":false,"visibility":"internal"},{"body":{"id":195,"nodeType":"Block","src":"2375:248:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":185,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2468:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":186,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2479:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":184,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2460:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":190,"nodeType":"ExpressionStatement","src":"2460:63:3"},{"expression":{"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":191,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2598:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":192,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2608:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":194,"nodeType":"ExpressionStatement","src":"2598:18:3"}]},"id":196,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:3","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"2364:2:3"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"2375:0:3"},"scope":216,"src":"2336:287:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":203,"nodeType":"Block","src":"2667:171:3","statements":[{"expression":{"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":199,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":200,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2819:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":202,"nodeType":"ExpressionStatement","src":"2809:22:3"}]},"id":204,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:3","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"2656:2:3"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"2667:0:3"},"scope":216,"src":"2629:209:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":214,"nodeType":"Block","src":"3081:43:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3098:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":211,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3109:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":209,"id":213,"nodeType":"Return","src":"3091:26:3"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"2844:168:3","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:3","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"3049:2:3"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"3075:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":207,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:3"},"scope":216,"src":"3017:107:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":217,"src":"888:2238:3","usedErrors":[],"usedEvents":[]}],"src":"112:3015:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[338],"IERC165":[2441]},"id":339,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":218,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":339,"sourceUnit":2442,"src":"135:47:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":221,"name":"IERC165","nameLocations":["372:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2441,"src":"372:7:4"},"id":222,"nodeType":"InheritanceSpecifier","src":"372:7:4"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"184:165:4","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"id":338,"linearizedBaseContracts":[338,2441],"name":"IERC1155","nameLocation":"360:8:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"386:121:4","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":235,"name":"TransferSingle","nameLocation":"518:14:4","nodeType":"EventDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"549:8:4","nodeType":"VariableDeclaration","scope":235,"src":"533:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"533:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":227,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"575:4:4","nodeType":"VariableDeclaration","scope":235,"src":"559:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":229,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"597:2:4","nodeType":"VariableDeclaration","scope":235,"src":"581:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"609:2:4","nodeType":"VariableDeclaration","scope":235,"src":"601:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"621:5:4","nodeType":"VariableDeclaration","scope":235,"src":"613:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"532:95:4"},"src":"512:116:4"},{"anonymous":false,"documentation":{"id":236,"nodeType":"StructuredDocumentation","src":"634:144:4","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":250,"name":"TransferBatch","nameLocation":"789:13:4","nodeType":"EventDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"828:8:4","nodeType":"VariableDeclaration","scope":250,"src":"812:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"812:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":240,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"862:4:4","nodeType":"VariableDeclaration","scope":250,"src":"846:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"892:2:4","nodeType":"VariableDeclaration","scope":250,"src":"876:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"914:3:4","nodeType":"VariableDeclaration","scope":250,"src":"904:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":244,"nodeType":"ArrayTypeName","src":"904:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":248,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"937:6:4","nodeType":"VariableDeclaration","scope":250,"src":"927:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":247,"nodeType":"ArrayTypeName","src":"927:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"802:147:4"},"src":"783:167:4"},{"anonymous":false,"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"956:147:4","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":259,"name":"ApprovalForAll","nameLocation":"1114:14:4","nodeType":"EventDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1145:7:4","nodeType":"VariableDeclaration","scope":259,"src":"1129:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1170:8:4","nodeType":"VariableDeclaration","scope":259,"src":"1154:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":257,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1185:8:4","nodeType":"VariableDeclaration","scope":259,"src":"1180:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":256,"name":"bool","nodeType":"ElementaryTypeName","src":"1180:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1128:66:4"},"src":"1108:87:4"},{"anonymous":false,"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1201:343:4","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":266,"name":"URI","nameLocation":"1555:3:4","nodeType":"EventDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1566:5:4","nodeType":"VariableDeclaration","scope":266,"src":"1559:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":261,"name":"string","nodeType":"ElementaryTypeName","src":"1559:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":264,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1589:2:4","nodeType":"VariableDeclaration","scope":266,"src":"1573:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1573:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1558:34:4"},"src":"1549:44:4"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"1599:173:4","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":276,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1786:9:4","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"account","nameLocation":"1804:7:4","nodeType":"VariableDeclaration","scope":276,"src":"1796:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"id","nameLocation":"1821:2:4","nodeType":"VariableDeclaration","scope":276,"src":"1813:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1795:29:4"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"1848:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1847:9:4"},"scope":338,"src":"1777:80:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"1863:188:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":289,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2065:14:4","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"accounts","nameLocation":"2108:8:4","nodeType":"VariableDeclaration","scope":289,"src":"2089:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":279,"nodeType":"ArrayTypeName","src":"2089:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"ids","nameLocation":"2145:3:4","nodeType":"VariableDeclaration","scope":289,"src":"2126:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":282,"nodeType":"ArrayTypeName","src":"2126:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2079:75:4"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":289,"src":"2178:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":286,"nodeType":"ArrayTypeName","src":"2178:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2177:18:4"},"scope":338,"src":"2056:140:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"2202:248:4","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":297,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2464:17:4","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"operator","nameLocation":"2490:8:4","nodeType":"VariableDeclaration","scope":297,"src":"2482:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"approved","nameLocation":"2505:8:4","nodeType":"VariableDeclaration","scope":297,"src":"2500:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":293,"name":"bool","nodeType":"ElementaryTypeName","src":"2500:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2481:33:4"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"2523:0:4"},"scope":338,"src":"2455:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"2530:135:4","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":307,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2679:16:4","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"account","nameLocation":"2704:7:4","nodeType":"VariableDeclaration","scope":307,"src":"2696:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"2696:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"operator","nameLocation":"2721:8:4","nodeType":"VariableDeclaration","scope":307,"src":"2713:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2695:35:4"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":307,"src":"2754:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":304,"name":"bool","nodeType":"ElementaryTypeName","src":"2754:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2753:6:4"},"scope":338,"src":"2670:90:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"2766:556:4","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":321,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3336:16:4","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"from","nameLocation":"3361:4:4","nodeType":"VariableDeclaration","scope":321,"src":"3353:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"3353:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"to","nameLocation":"3375:2:4","nodeType":"VariableDeclaration","scope":321,"src":"3367:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3367:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"id","nameLocation":"3387:2:4","nodeType":"VariableDeclaration","scope":321,"src":"3379:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3379:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"amount","nameLocation":"3399:6:4","nodeType":"VariableDeclaration","scope":321,"src":"3391:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"3391:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"data","nameLocation":"3422:4:4","nodeType":"VariableDeclaration","scope":321,"src":"3407:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"3407:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3352:75:4"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[],"src":"3436:0:4"},"scope":338,"src":"3327:110:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"3443:390:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":337,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3847:21:4","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"from","nameLocation":"3886:4:4","nodeType":"VariableDeclaration","scope":337,"src":"3878:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":326,"mutability":"mutable","name":"to","nameLocation":"3908:2:4","nodeType":"VariableDeclaration","scope":337,"src":"3900:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"3900:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"ids","nameLocation":"3939:3:4","nodeType":"VariableDeclaration","scope":337,"src":"3920:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"3920:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":328,"nodeType":"ArrayTypeName","src":"3920:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"amounts","nameLocation":"3971:7:4","nodeType":"VariableDeclaration","scope":337,"src":"3952:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ArrayTypeName","src":"3952:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"data","nameLocation":"4003:4:4","nodeType":"VariableDeclaration","scope":337,"src":"3988:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":333,"name":"bytes","nodeType":"ElementaryTypeName","src":"3988:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3868:145:4"},"returnParameters":{"id":336,"nodeType":"ParameterList","parameters":[],"src":"4022:0:4"},"scope":338,"src":"3838:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":339,"src":"350:3675:4","usedErrors":[],"usedEvents":[235,250,259,266]}],"src":"110:3916:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[416]},"id":417,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":340,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"131:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":416,"linearizedBaseContracts":[416],"name":"IERC20","nameLocation":"212:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"225:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":350,"name":"Transfer","nameLocation":"394:8:5","nodeType":"EventDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:5","nodeType":"VariableDeclaration","scope":350,"src":"403:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:5","nodeType":"VariableDeclaration","scope":350,"src":"425:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:5","nodeType":"VariableDeclaration","scope":350,"src":"445:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:5"},"src":"388:72:5"},{"anonymous":false,"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"466:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":359,"name":"Approval","nameLocation":"625:8:5","nodeType":"EventDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:5","nodeType":"VariableDeclaration","scope":359,"src":"634:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":355,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:5","nodeType":"VariableDeclaration","scope":359,"src":"657:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":357,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:5","nodeType":"VariableDeclaration","scope":359,"src":"682:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:5"},"src":"619:78:5"},{"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"703:66:5","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":365,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":416,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"835:72:5","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":373,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:5","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"939:7:5","nodeType":"VariableDeclaration","scope":373,"src":"931:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:5"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"971:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:5"},"scope":416,"src":"912:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"986:202:5","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:5","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"to","nameLocation":"1219:2:5","nodeType":"VariableDeclaration","scope":383,"src":"1211:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"amount","nameLocation":"1231:6:5","nodeType":"VariableDeclaration","scope":383,"src":"1223:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:5"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"1257:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":380,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:5"},"scope":416,"src":"1193:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"1269:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":393,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:5","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"owner","nameLocation":"1565:5:5","nodeType":"VariableDeclaration","scope":393,"src":"1557:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"spender","nameLocation":"1580:7:5","nodeType":"VariableDeclaration","scope":393,"src":"1572:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:5"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":393,"src":"1612:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:5"},"scope":416,"src":"1538:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"1627:642:5","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":403,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:5","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"spender","nameLocation":"2299:7:5","nodeType":"VariableDeclaration","scope":403,"src":"2291:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"amount","nameLocation":"2316:6:5","nodeType":"VariableDeclaration","scope":403,"src":"2308:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:5"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":403,"src":"2342:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":400,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:5"},"scope":416,"src":"2274:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"2354:287:5","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":415,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:5","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"from","nameLocation":"2676:4:5","nodeType":"VariableDeclaration","scope":415,"src":"2668:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"to","nameLocation":"2690:2:5","nodeType":"VariableDeclaration","scope":415,"src":"2682:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"amount","nameLocation":"2702:6:5","nodeType":"VariableDeclaration","scope":415,"src":"2694:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:5"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":415,"src":"2728:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":412,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:5"},"scope":416,"src":"2646:88:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":417,"src":"202:2534:5","usedErrors":[],"usedEvents":[350,359]}],"src":"106:2631:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[452]},"id":453,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":418,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":419,"nodeType":"StructuredDocumentation","src":"148:1963:6","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":452,"linearizedBaseContracts":[452],"name":"IERC20Permit","nameLocation":"2122:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"2141:850:6","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":437,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3005:6:6","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"owner","nameLocation":"3029:5:6","nodeType":"VariableDeclaration","scope":437,"src":"3021:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"3021:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"spender","nameLocation":"3052:7:6","nodeType":"VariableDeclaration","scope":437,"src":"3044:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"3044:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":426,"mutability":"mutable","name":"value","nameLocation":"3077:5:6","nodeType":"VariableDeclaration","scope":437,"src":"3069:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"deadline","nameLocation":"3100:8:6","nodeType":"VariableDeclaration","scope":437,"src":"3092:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"3092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"v","nameLocation":"3124:1:6","nodeType":"VariableDeclaration","scope":437,"src":"3118:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":429,"name":"uint8","nodeType":"ElementaryTypeName","src":"3118:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"r","nameLocation":"3143:1:6","nodeType":"VariableDeclaration","scope":437,"src":"3135:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3135:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"s","nameLocation":"3162:1:6","nodeType":"VariableDeclaration","scope":437,"src":"3154:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3154:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3011:158:6"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[],"src":"3178:0:6"},"scope":452,"src":"2996:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"3185:294:6","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":445,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3493:6:6","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":440,"mutability":"mutable","name":"owner","nameLocation":"3508:5:6","nodeType":"VariableDeclaration","scope":445,"src":"3500:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"3500:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3499:15:6"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"3538:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"3538:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3537:9:6"},"scope":452,"src":"3484:63:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"3553:128:6","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":451,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3748:16:6","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"3764:2:6"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":451,"src":"3790:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3790:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3789:9:6"},"scope":452,"src":"3739:60:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":453,"src":"2112:1689:6","usedErrors":[],"usedEvents":[]}],"src":"123:3679:6"},"id":6},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[1274],"IERC20":[416],"IERC20Permit":[452],"SafeERC20":[828]},"id":829,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":454,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":829,"sourceUnit":417,"src":"140:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":829,"sourceUnit":453,"src":"164:40:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":829,"sourceUnit":1275,"src":"205:36:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"243:457:7","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":828,"linearizedBaseContracts":[828],"name":"SafeERC20","nameLocation":"709:9:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":461,"libraryName":{"id":459,"name":"Address","nameLocations":["731:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1274,"src":"731:7:7"},"nodeType":"UsingForDirective","src":"725:26:7","typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":484,"nodeType":"Block","src":"1013:103:7","statements":[{"expression":{"arguments":[{"id":473,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"1043:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":476,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"1073:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1079:8:7","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":383,"src":"1073:14:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1073:23:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"1098:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1102:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":474,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1050:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1054:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1050:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1050:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":472,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1023:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":483,"nodeType":"ExpressionStatement","src":"1023:86:7"}]},"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"757:179:7","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"950:12:7","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"token","nameLocation":"970:5:7","nodeType":"VariableDeclaration","scope":485,"src":"963:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},"typeName":{"id":464,"nodeType":"UserDefinedTypeName","pathNode":{"id":463,"name":"IERC20","nameLocations":["963:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"963:6:7"},"referencedDeclaration":416,"src":"963:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"to","nameLocation":"985:2:7","nodeType":"VariableDeclaration","scope":485,"src":"977:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":469,"mutability":"mutable","name":"value","nameLocation":"997:5:7","nodeType":"VariableDeclaration","scope":485,"src":"989:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"962:41:7"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[],"src":"1013:0:7"},"scope":828,"src":"941:175:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":511,"nodeType":"Block","src":"1445:113:7","statements":[{"expression":{"arguments":[{"id":499,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"1475:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"1505:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1511:12:7","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":415,"src":"1505:18:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1524:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1505:27:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":505,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1534:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"1540:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"1544:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":500,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1482:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1486:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1482:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1482:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":498,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"1455:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:96:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"ExpressionStatement","src":"1455:96:7"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"1122:228:7","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":512,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1364:16:7","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"token","nameLocation":"1388:5:7","nodeType":"VariableDeclaration","scope":512,"src":"1381:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},"typeName":{"id":488,"nodeType":"UserDefinedTypeName","pathNode":{"id":487,"name":"IERC20","nameLocations":["1381:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"1381:6:7"},"referencedDeclaration":416,"src":"1381:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"from","nameLocation":"1403:4:7","nodeType":"VariableDeclaration","scope":512,"src":"1395:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"to","nameLocation":"1417:2:7","nodeType":"VariableDeclaration","scope":512,"src":"1409:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"1409:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"value","nameLocation":"1429:5:7","nodeType":"VariableDeclaration","scope":512,"src":"1421:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:55:7"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"1445:0:7"},"scope":828,"src":"1355:203:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":555,"nodeType":"Block","src":"1894:497:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2143:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2143:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2142:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":532,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2183:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$828","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$828","typeString":"library SafeERC20"}],"id":531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:7","typeDescriptions":{}}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2190:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":528,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2159:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":393,"src":"2159:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2159:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2202:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2159:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2158:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2142:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2218:56:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2121:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:163:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"2121:163:7"},{"expression":{"arguments":[{"id":544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2314:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"2344:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2350:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":403,"src":"2344:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:8:7","memberName":"selector","nodeType":"MemberAccess","src":"2344:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":550,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2368:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2377:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":545,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2321:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2325:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2321:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":543,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2294:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"2294:90:7"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"1564:249:7","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":556,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"token","nameLocation":"1846:5:7","nodeType":"VariableDeclaration","scope":556,"src":"1839:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},"typeName":{"id":515,"nodeType":"UserDefinedTypeName","pathNode":{"id":514,"name":"IERC20","nameLocations":["1839:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"1839:6:7"},"referencedDeclaration":416,"src":"1839:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"spender","nameLocation":"1861:7:7","nodeType":"VariableDeclaration","scope":556,"src":"1853:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"value","nameLocation":"1878:5:7","nodeType":"VariableDeclaration","scope":556,"src":"1870:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:46:7"},"returnParameters":{"id":522,"nodeType":"ParameterList","parameters":[],"src":"1894:0:7"},"scope":828,"src":"1818:573:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":592,"nodeType":"Block","src":"2668:194:7","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"oldAllowance","nameLocation":"2686:12:7","nodeType":"VariableDeclaration","scope":592,"src":"2678:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":577,"initialValue":{"arguments":[{"arguments":[{"id":573,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2725:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$828","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$828","typeString":"library SafeERC20"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2717:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:7","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2732:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":569,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"2701:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2707:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":393,"src":"2701:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2701:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2678:62:7"},{"expression":{"arguments":[{"id":579,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"2770:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":582,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"2800:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":403,"src":"2800:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2814:8:7","memberName":"selector","nodeType":"MemberAccess","src":"2800:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":585,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2824:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":586,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"2833:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2848:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":580,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2777:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2781:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2777:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":578,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"2750:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2750:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"2750:105:7"}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"2397:180:7","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":593,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2591:21:7","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"token","nameLocation":"2620:5:7","nodeType":"VariableDeclaration","scope":593,"src":"2613:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},"typeName":{"id":559,"nodeType":"UserDefinedTypeName","pathNode":{"id":558,"name":"IERC20","nameLocations":["2613:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"2613:6:7"},"referencedDeclaration":416,"src":"2613:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"spender","nameLocation":"2635:7:7","nodeType":"VariableDeclaration","scope":593,"src":"2627:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"value","nameLocation":"2652:5:7","nodeType":"VariableDeclaration","scope":593,"src":"2644:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"2644:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:46:7"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"2668:0:7"},"scope":828,"src":"2582:280:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":637,"nodeType":"Block","src":"3139:321:7","statements":[{"id":636,"nodeType":"UncheckedBlock","src":"3149:305:7","statements":[{"assignments":[605],"declarations":[{"constant":false,"id":605,"mutability":"mutable","name":"oldAllowance","nameLocation":"3181:12:7","nodeType":"VariableDeclaration","scope":636,"src":"3173:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":614,"initialValue":{"arguments":[{"arguments":[{"id":610,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3220:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$828","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$828","typeString":"library SafeERC20"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:7","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":612,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"3227:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":606,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3196:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:9:7","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":393,"src":"3196:15:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3196:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:62:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"3257:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"3273:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3257:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3280:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3249:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3249:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"3249:75:7"},{"expression":{"arguments":[{"id":623,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3358:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":626,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"3388:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3394:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":403,"src":"3388:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3402:8:7","memberName":"selector","nodeType":"MemberAccess","src":"3388:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":629,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"3412:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":630,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"3421:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"3436:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":624,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3365:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3369:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3365:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:77:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":622,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"3338:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3338:105:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":635,"nodeType":"ExpressionStatement","src":"3338:105:7"}]}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"2868:180:7","text":" @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":638,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3062:21:7","nodeType":"FunctionDefinition","parameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"token","nameLocation":"3091:5:7","nodeType":"VariableDeclaration","scope":638,"src":"3084:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},"typeName":{"id":596,"nodeType":"UserDefinedTypeName","pathNode":{"id":595,"name":"IERC20","nameLocations":["3084:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"3084:6:7"},"referencedDeclaration":416,"src":"3084:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"spender","nameLocation":"3106:7:7","nodeType":"VariableDeclaration","scope":638,"src":"3098:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"3098:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"value","nameLocation":"3123:5:7","nodeType":"VariableDeclaration","scope":638,"src":"3115:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:46:7"},"returnParameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"3139:0:7"},"scope":828,"src":"3053:407:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":684,"nodeType":"Block","src":"3856:333:7","statements":[{"assignments":[650],"declarations":[{"constant":false,"id":650,"mutability":"mutable","name":"approvalCall","nameLocation":"3879:12:7","nodeType":"VariableDeclaration","scope":684,"src":"3866:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":649,"name":"bytes","nodeType":"ElementaryTypeName","src":"3866:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":659,"initialValue":{"arguments":[{"expression":{"expression":{"id":653,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"3917:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":403,"src":"3917:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:8:7","memberName":"selector","nodeType":"MemberAccess","src":"3917:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":656,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3941:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"3950:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":651,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3894:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3898:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3894:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3866:90:7"},{"condition":{"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3971:45:7","subExpression":{"arguments":[{"id":661,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"3996:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},{"id":662,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4003:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":660,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"3972:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3972:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":683,"nodeType":"IfStatement","src":"3967:216:7","trueBody":{"id":682,"nodeType":"Block","src":"4018:165:7","statements":[{"expression":{"arguments":[{"id":666,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4052:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":669,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4082:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4088:7:7","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":403,"src":"4082:13:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:8:7","memberName":"selector","nodeType":"MemberAccess","src":"4082:22:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":672,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4106:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4115:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":667,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4059:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4063:18:7","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4059:22:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":665,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"4032:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:86:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"4032:86:7"},{"expression":{"arguments":[{"id":678,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4152:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},{"id":679,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4159:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":677,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"4132:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4132:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"ExpressionStatement","src":"4132:40:7"}]}}]},"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"3466:308:7","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":685,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3788:12:7","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"token","nameLocation":"3808:5:7","nodeType":"VariableDeclaration","scope":685,"src":"3801:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},"typeName":{"id":641,"nodeType":"UserDefinedTypeName","pathNode":{"id":640,"name":"IERC20","nameLocations":["3801:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"3801:6:7"},"referencedDeclaration":416,"src":"3801:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"3823:7:7","nodeType":"VariableDeclaration","scope":685,"src":"3815:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"3815:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"value","nameLocation":"3840:5:7","nodeType":"VariableDeclaration","scope":685,"src":"3832:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3832:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:46:7"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"3856:0:7"},"scope":828,"src":"3779:410:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":741,"nodeType":"Block","src":"4556:257:7","statements":[{"assignments":[707],"declarations":[{"constant":false,"id":707,"mutability":"mutable","name":"nonceBefore","nameLocation":"4574:11:7","nodeType":"VariableDeclaration","scope":741,"src":"4566:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"4566:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[{"id":710,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4601:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":708,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"4588:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$452","typeString":"contract IERC20Permit"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4594:6:7","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":445,"src":"4588:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4588:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4566:41:7"},{"expression":{"arguments":[{"id":716,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4630:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"4637:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4646:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":719,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"4653:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":720,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"4663:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":721,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4666:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":722,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4669:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":713,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"4617:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$452","typeString":"contract IERC20Permit"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:7","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":437,"src":"4617:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"4617:54:7"},{"assignments":[726],"declarations":[{"constant":false,"id":726,"mutability":"mutable","name":"nonceAfter","nameLocation":"4689:10:7","nodeType":"VariableDeclaration","scope":741,"src":"4681:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4681:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":731,"initialValue":{"arguments":[{"id":729,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"4715:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":727,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"4702:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$452","typeString":"contract IERC20Permit"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4708:6:7","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":445,"src":"4702:12:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4702:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4681:40:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":733,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"4739:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":734,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4753:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4767:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4753:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4739:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4731:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"4731:75:7"}]},"documentation":{"id":686,"nodeType":"StructuredDocumentation","src":"4195:141:7","text":" @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."},"id":742,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"4350:10:7","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"token","nameLocation":"4383:5:7","nodeType":"VariableDeclaration","scope":742,"src":"4370:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$452","typeString":"contract IERC20Permit"},"typeName":{"id":688,"nodeType":"UserDefinedTypeName","pathNode":{"id":687,"name":"IERC20Permit","nameLocations":["4370:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":452,"src":"4370:12:7"},"referencedDeclaration":452,"src":"4370:12:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$452","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"owner","nameLocation":"4406:5:7","nodeType":"VariableDeclaration","scope":742,"src":"4398:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"spender","nameLocation":"4429:7:7","nodeType":"VariableDeclaration","scope":742,"src":"4421:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"value","nameLocation":"4454:5:7","nodeType":"VariableDeclaration","scope":742,"src":"4446:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"4446:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"deadline","nameLocation":"4477:8:7","nodeType":"VariableDeclaration","scope":742,"src":"4469:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4469:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"v","nameLocation":"4501:1:7","nodeType":"VariableDeclaration","scope":742,"src":"4495:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":698,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"r","nameLocation":"4520:1:7","nodeType":"VariableDeclaration","scope":742,"src":"4512:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4512:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"s","nameLocation":"4539:1:7","nodeType":"VariableDeclaration","scope":742,"src":"4531:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4531:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4360:186:7"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"4556:0:7"},"scope":828,"src":"4341:472:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"5266:572:7","statements":[{"assignments":[752],"declarations":[{"constant":false,"id":752,"mutability":"mutable","name":"returndata","nameLocation":"5628:10:7","nodeType":"VariableDeclaration","scope":778,"src":"5615:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":751,"name":"bytes","nodeType":"ElementaryTypeName","src":"5615:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":761,"initialValue":{"arguments":[{"id":758,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"5669:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5675:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":755,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"5649:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5641:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"5641:7:7","typeDescriptions":{}}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5656:12:7","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1034,"src":"5641:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5615:95:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":763,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5728:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5739:6:7","memberName":"length","nodeType":"MemberAccess","src":"5728:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5749:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5728:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":769,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"5765:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5778:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":770,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:7","typeDescriptions":{}}}],"id":772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5777:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":767,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5754:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5758:6:7","memberName":"decode","nodeType":"MemberAccess","src":"5754:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5754:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5728:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5786:44:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5720:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5720:111:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"ExpressionStatement","src":"5720:111:7"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"4819:372:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"5205:19:7","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"token","nameLocation":"5232:5:7","nodeType":"VariableDeclaration","scope":779,"src":"5225:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},"typeName":{"id":745,"nodeType":"UserDefinedTypeName","pathNode":{"id":744,"name":"IERC20","nameLocations":["5225:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"5225:6:7"},"referencedDeclaration":416,"src":"5225:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"data","nameLocation":"5252:4:7","nodeType":"VariableDeclaration","scope":779,"src":"5239:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":747,"name":"bytes","nodeType":"ElementaryTypeName","src":"5239:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5224:33:7"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"5266:0:7"},"scope":828,"src":"5196:642:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":826,"nodeType":"Block","src":"6428:505:7","statements":[{"assignments":[791,793],"declarations":[{"constant":false,"id":791,"mutability":"mutable","name":"success","nameLocation":"6729:7:7","nodeType":"VariableDeclaration","scope":826,"src":"6724:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":790,"name":"bool","nodeType":"ElementaryTypeName","src":"6724:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"returndata","nameLocation":"6751:10:7","nodeType":"VariableDeclaration","scope":826,"src":"6738:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":792,"name":"bytes","nodeType":"ElementaryTypeName","src":"6738:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"id":799,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"6785:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":796,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"6773:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6765:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:7","typeDescriptions":{}}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6780:4:7","memberName":"call","nodeType":"MemberAccess","src":"6765:19:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6765:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6723:67:7"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":802,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"6819:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":803,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6831:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6842:6:7","memberName":"length","nodeType":"MemberAccess","src":"6831:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6831:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":809,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"6868:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6881:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":810,"name":"bool","nodeType":"ElementaryTypeName","src":"6881:4:7","typeDescriptions":{}}}],"id":812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6880:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":807,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6857:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6861:6:7","memberName":"decode","nodeType":"MemberAccess","src":"6857:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6831:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6830:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"arguments":[{"id":821,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"6919:5:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}],"id":820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6911:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"6911:7:7","typeDescriptions":{}}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6911:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":817,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"6892:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1274_$","typeString":"type(library Address)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6900:10:7","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":962,"src":"6892:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6892:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6819:107:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":789,"id":825,"nodeType":"Return","src":"6800:126:7"}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"5844:490:7","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"6348:23:7","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"token","nameLocation":"6379:5:7","nodeType":"VariableDeclaration","scope":827,"src":"6372:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"},"typeName":{"id":782,"nodeType":"UserDefinedTypeName","pathNode":{"id":781,"name":"IERC20","nameLocations":["6372:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"6372:6:7"},"referencedDeclaration":416,"src":"6372:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"data","nameLocation":"6399:4:7","nodeType":"VariableDeclaration","scope":827,"src":"6386:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":784,"name":"bytes","nodeType":"ElementaryTypeName","src":"6386:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6371:33:7"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"6422:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":787,"name":"bool","nodeType":"ElementaryTypeName","src":"6422:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6421:6:7"},"scope":828,"src":"6339:594:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":829,"src":"701:6234:7","usedErrors":[],"usedEvents":[]}],"src":"115:6821:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2441],"IERC721":[944]},"id":945,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":830,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":945,"sourceUnit":2442,"src":"133:47:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":833,"name":"IERC165","nameLocations":["271:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2441,"src":"271:7:8"},"id":834,"nodeType":"InheritanceSpecifier","src":"271:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"182:67:8","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":944,"linearizedBaseContracts":[944,2441],"name":"IERC721","nameLocation":"260:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"285:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":843,"name":"Transfer","nameLocation":"384:8:8","nodeType":"EventDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:8","nodeType":"VariableDeclaration","scope":843,"src":"393:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:8","nodeType":"VariableDeclaration","scope":843,"src":"415:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:8","nodeType":"VariableDeclaration","scope":843,"src":"435:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:8"},"src":"378:82:8"},{"anonymous":false,"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"466:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":852,"name":"Approval","nameLocation":"571:8:8","nodeType":"EventDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:8","nodeType":"VariableDeclaration","scope":852,"src":"580:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:8","nodeType":"VariableDeclaration","scope":852,"src":"603:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:8","nodeType":"VariableDeclaration","scope":852,"src":"629:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:8"},"src":"565:89:8"},{"anonymous":false,"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"660:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":861,"name":"ApprovalForAll","nameLocation":"788:14:8","nodeType":"EventDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:8","nodeType":"VariableDeclaration","scope":861,"src":"803:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:8","nodeType":"VariableDeclaration","scope":861,"src":"826:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:8","nodeType":"VariableDeclaration","scope":861,"src":"852:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:8"},"src":"782:85:8"},{"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"873:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":869,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:8","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"owner","nameLocation":"981:5:8","nodeType":"VariableDeclaration","scope":869,"src":"973:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:8"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"balance","nameLocation":"1019:7:8","nodeType":"VariableDeclaration","scope":869,"src":"1011:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:8"},"scope":944,"src":"954:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1034:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":877,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:8","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:8","nodeType":"VariableDeclaration","scope":877,"src":"1187:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:8"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"owner","nameLocation":"1235:5:8","nodeType":"VariableDeclaration","scope":877,"src":"1227:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:8"},"scope":944,"src":"1170:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"1248:556:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:8","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"from","nameLocation":"1843:4:8","nodeType":"VariableDeclaration","scope":889,"src":"1835:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"to","nameLocation":"1857:2:8","nodeType":"VariableDeclaration","scope":889,"src":"1849:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:8","nodeType":"VariableDeclaration","scope":889,"src":"1861:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"data","nameLocation":"1893:4:8","nodeType":"VariableDeclaration","scope":889,"src":"1878:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":885,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:8"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"1907:0:8"},"scope":944,"src":"1809:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"1914:687:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":899,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:8","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"from","nameLocation":"2640:4:8","nodeType":"VariableDeclaration","scope":899,"src":"2632:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"to","nameLocation":"2654:2:8","nodeType":"VariableDeclaration","scope":899,"src":"2646:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:8","nodeType":"VariableDeclaration","scope":899,"src":"2658:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:8"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"2683:0:8"},"scope":944,"src":"2606:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"2690:732:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":909,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:8","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"from","nameLocation":"3457:4:8","nodeType":"VariableDeclaration","scope":909,"src":"3449:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"to","nameLocation":"3471:2:8","nodeType":"VariableDeclaration","scope":909,"src":"3463:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:8","nodeType":"VariableDeclaration","scope":909,"src":"3475:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:8"},"returnParameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"3500:0:8"},"scope":944,"src":"3427:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"3507:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":917,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:8","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"3989:2:8","nodeType":"VariableDeclaration","scope":917,"src":"3981:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:8","nodeType":"VariableDeclaration","scope":917,"src":"3993:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:8"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"4018:0:8"},"scope":944,"src":"3964:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"4025:309:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":925,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:8","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"operator","nameLocation":"4374:8:8","nodeType":"VariableDeclaration","scope":925,"src":"4366:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"approved","nameLocation":"4389:8:8","nodeType":"VariableDeclaration","scope":925,"src":"4384:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":921,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:8"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[],"src":"4407:0:8"},"scope":944,"src":"4339:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"4414:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":933,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:8","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:8","nodeType":"VariableDeclaration","scope":933,"src":"4579:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:8"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"operator","nameLocation":"4627:8:8","nodeType":"VariableDeclaration","scope":933,"src":"4619:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:8"},"scope":944,"src":"4558:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"4643:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":943,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:8","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"owner","nameLocation":"4820:5:8","nodeType":"VariableDeclaration","scope":943,"src":"4812:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"operator","nameLocation":"4835:8:8","nodeType":"VariableDeclaration","scope":943,"src":"4827:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:8"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"4868:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":940,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:8"},"scope":944,"src":"4786:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":945,"src":"250:4626:8","usedErrors":[],"usedEvents":[843,852,861]}],"src":"108:4769:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1274]},"id":1275,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":946,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1274,"linearizedBaseContracts":[1274],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":961,"nodeType":"Block","src":"1478:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":955,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"1702:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:9","memberName":"code","nodeType":"MemberAccess","src":"1702:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:9","memberName":"length","nodeType":"MemberAccess","src":"1702:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"1695:30:9"}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"216:1191:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:9","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"account","nameLocation":"1440:7:9","nodeType":"VariableDeclaration","scope":962,"src":"1432:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:9"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"1472:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":952,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:9"},"scope":1274,"src":"1412:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":995,"nodeType":"Block","src":"2718:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":973,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1274","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1274","typeString":"library Address"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:9","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":976,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"2761:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2728:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"ExpressionStatement","src":"2728:73:9"},{"assignments":[982,null],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"success","nameLocation":"2818:7:9","nodeType":"VariableDeclaration","scope":995,"src":"2813:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":981,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":989,"initialValue":{"arguments":[{"hexValue":"","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":983,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"2831:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:9","memberName":"call","nodeType":"MemberAccess","src":"2831:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":985,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"2853:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:9"},{"expression":{"arguments":[{"id":991,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2882:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2874:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"2874:78:9"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"1738:904:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:9","nodeType":"VariableDeclaration","scope":996,"src":"2666:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"amount","nameLocation":"2701:6:9","nodeType":"VariableDeclaration","scope":996,"src":"2693:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:9"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"2718:0:9"},"scope":1274,"src":"2647:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"3790:96:9","statements":[{"expression":{"arguments":[{"id":1007,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"3829:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"3837:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1006,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1054,1098],"referencedDeclaration":1098,"src":"3807:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1005,"id":1012,"nodeType":"Return","src":"3800:79:9"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"2965:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:9","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"target","nameLocation":"3731:6:9","nodeType":"VariableDeclaration","scope":1014,"src":"3723:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"data","nameLocation":"3752:4:9","nodeType":"VariableDeclaration","scope":1014,"src":"3739:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1000,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:9"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1014,"src":"3776:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1003,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:9"},"scope":1274,"src":"3701:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"4255:76:9","statements":[{"expression":{"arguments":[{"id":1027,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"4294:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1028,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"4302:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1030,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4311:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1026,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1054,1098],"referencedDeclaration":1098,"src":"4272:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1025,"id":1032,"nodeType":"Return","src":"4265:59:9"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"3892:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:9","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"target","nameLocation":"4147:6:9","nodeType":"VariableDeclaration","scope":1034,"src":"4139:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"data","nameLocation":"4176:4:9","nodeType":"VariableDeclaration","scope":1034,"src":"4163:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1018,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:9","nodeType":"VariableDeclaration","scope":1034,"src":"4190:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1020,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:9"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1034,"src":"4241:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1023,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:9"},"scope":1274,"src":"4108:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"4806:111:9","statements":[{"expression":{"arguments":[{"id":1047,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4845:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"4853:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"4859:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1046,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1054,1098],"referencedDeclaration":1098,"src":"4823:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1045,"id":1052,"nodeType":"Return","src":"4816:94:9"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"4337:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:9","nodeType":"FunctionDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"target","nameLocation":"4732:6:9","nodeType":"VariableDeclaration","scope":1054,"src":"4724:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"data","nameLocation":"4753:4:9","nodeType":"VariableDeclaration","scope":1054,"src":"4740:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1038,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"value","nameLocation":"4767:5:9","nodeType":"VariableDeclaration","scope":1054,"src":"4759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:9"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1054,"src":"4792:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1043,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:9"},"scope":1274,"src":"4693:224:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1097,"nodeType":"Block","src":"5344:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1071,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1274","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1274","typeString":"library Address"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:9","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:9","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"5387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5354:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"5354:81:9"},{"assignments":[1080,1082],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"success","nameLocation":"5451:7:9","nodeType":"VariableDeclaration","scope":1097,"src":"5446:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:9","nodeType":"VariableDeclaration","scope":1097,"src":"5460:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1081,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1089,"initialValue":{"arguments":[{"id":1087,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"5513:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1083,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5487:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:9","memberName":"call","nodeType":"MemberAccess","src":"5487:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"5506:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:9"},{"expression":{"arguments":[{"id":1091,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5562:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1092,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"5570:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1093,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"5579:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1094,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5591:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1090,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"5535:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1067,"id":1096,"nodeType":"Return","src":"5528:76:9"}]},"documentation":{"id":1055,"nodeType":"StructuredDocumentation","src":"4923:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:9","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"target","nameLocation":"5213:6:9","nodeType":"VariableDeclaration","scope":1098,"src":"5205:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"data","nameLocation":"5242:4:9","nodeType":"VariableDeclaration","scope":1098,"src":"5229:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1058,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"value","nameLocation":"5264:5:9","nodeType":"VariableDeclaration","scope":1098,"src":"5256:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:9","nodeType":"VariableDeclaration","scope":1098,"src":"5279:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1062,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:9"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1098,"src":"5330:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1065,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:9"},"scope":1274,"src":"5165:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1114,"nodeType":"Block","src":"5888:97:9","statements":[{"expression":{"arguments":[{"id":1109,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"5924:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1110,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"5932:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1108,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1115,1144],"referencedDeclaration":1144,"src":"5905:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1107,"id":1113,"nodeType":"Return","src":"5898:80:9"}]},"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"5617:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1115,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:9","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"target","nameLocation":"5824:6:9","nodeType":"VariableDeclaration","scope":1115,"src":"5816:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"data","nameLocation":"5845:4:9","nodeType":"VariableDeclaration","scope":1115,"src":"5832:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1102,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:9"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"5874:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1105,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:9"},"scope":1274,"src":"5788:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"6327:168:9","statements":[{"assignments":[1128,1130],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"success","nameLocation":"6343:7:9","nodeType":"VariableDeclaration","scope":1143,"src":"6338:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1127,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:9","nodeType":"VariableDeclaration","scope":1143,"src":"6352:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1129,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1135,"initialValue":{"arguments":[{"id":1133,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6397:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1131,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"6379:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:9"},{"expression":{"arguments":[{"id":1137,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"6446:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6454:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1139,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6463:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1140,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"6475:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1136,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"6419:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1126,"id":1142,"nodeType":"Return","src":"6412:76:9"}]},"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"5991:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:9","nodeType":"FunctionDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"target","nameLocation":"6214:6:9","nodeType":"VariableDeclaration","scope":1144,"src":"6206:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"data","nameLocation":"6243:4:9","nodeType":"VariableDeclaration","scope":1144,"src":"6230:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1119,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:9","nodeType":"VariableDeclaration","scope":1144,"src":"6257:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1121,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:9"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1144,"src":"6313:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1124,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:9"},"scope":1274,"src":"6169:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1160,"nodeType":"Block","src":"6771:101:9","statements":[{"expression":{"arguments":[{"id":1155,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"6809:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"6817:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1154,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1161,1190],"referencedDeclaration":1190,"src":"6788:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1153,"id":1159,"nodeType":"Return","src":"6781:84:9"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"6501:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1161,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:9","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"target","nameLocation":"6712:6:9","nodeType":"VariableDeclaration","scope":1161,"src":"6704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"data","nameLocation":"6733:4:9","nodeType":"VariableDeclaration","scope":1161,"src":"6720:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1148,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:9"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1161,"src":"6757:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1151,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:9"},"scope":1274,"src":"6674:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1189,"nodeType":"Block","src":"7213:170:9","statements":[{"assignments":[1174,1176],"declarations":[{"constant":false,"id":1174,"mutability":"mutable","name":"success","nameLocation":"7229:7:9","nodeType":"VariableDeclaration","scope":1189,"src":"7224:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:9","nodeType":"VariableDeclaration","scope":1189,"src":"7238:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1181,"initialValue":{"arguments":[{"id":1179,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"7285:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1177,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7265:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:9"},{"expression":{"arguments":[{"id":1183,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7334:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"7342:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1185,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"7351:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1186,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7363:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1182,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"7307:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1172,"id":1188,"nodeType":"Return","src":"7300:76:9"}]},"documentation":{"id":1162,"nodeType":"StructuredDocumentation","src":"6878:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1190,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:9","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1164,"mutability":"mutable","name":"target","nameLocation":"7105:6:9","nodeType":"VariableDeclaration","scope":1190,"src":"7097:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"data","nameLocation":"7134:4:9","nodeType":"VariableDeclaration","scope":1190,"src":"7121:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1165,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:9","nodeType":"VariableDeclaration","scope":1190,"src":"7148:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1167,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:9"},"returnParameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"7199:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1170,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:9"},"scope":1274,"src":"7058:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1228,"nodeType":"Block","src":"7865:434:9","statements":[{"condition":{"id":1204,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"7879:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1226,"nodeType":"Block","src":"8235:58:9","statements":[{"expression":{"arguments":[{"id":1222,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"8257:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1223,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"8269:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1221,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8249:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1225,"nodeType":"ExpressionStatement","src":"8249:33:9"}]},"id":1227,"nodeType":"IfStatement","src":"7875:418:9","trueBody":{"id":1220,"nodeType":"Block","src":"7888:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1205,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"7906:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:9","memberName":"length","nodeType":"MemberAccess","src":"7906:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1217,"nodeType":"IfStatement","src":"7902:286:9","trueBody":{"id":1216,"nodeType":"Block","src":"7930:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1211,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"8132:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"8121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8113:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1215,"nodeType":"ExpressionStatement","src":"8113:60:9"}]}},{"expression":{"id":1218,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"8208:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1203,"id":1219,"nodeType":"Return","src":"8201:17:9"}]}}]},"documentation":{"id":1191,"nodeType":"StructuredDocumentation","src":"7389:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:9","nodeType":"FunctionDefinition","parameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"target","nameLocation":"7724:6:9","nodeType":"VariableDeclaration","scope":1229,"src":"7716:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"success","nameLocation":"7745:7:9","nodeType":"VariableDeclaration","scope":1229,"src":"7740:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1194,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:9","nodeType":"VariableDeclaration","scope":1229,"src":"7762:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:9","nodeType":"VariableDeclaration","scope":1229,"src":"7795:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1198,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:9"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"7851:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1201,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:9"},"scope":1274,"src":"7671:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1252,"nodeType":"Block","src":"8680:135:9","statements":[{"condition":{"id":1241,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"8694:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1250,"nodeType":"Block","src":"8751:58:9","statements":[{"expression":{"arguments":[{"id":1246,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"8773:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1247,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"8785:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1245,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8765:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1249,"nodeType":"ExpressionStatement","src":"8765:33:9"}]},"id":1251,"nodeType":"IfStatement","src":"8690:119:9","trueBody":{"id":1244,"nodeType":"Block","src":"8703:42:9","statements":[{"expression":{"id":1242,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"8724:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1240,"id":1243,"nodeType":"Return","src":"8717:17:9"}]}}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"8305:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1253,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:9","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"success","nameLocation":"8560:7:9","nodeType":"VariableDeclaration","scope":1253,"src":"8555:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1231,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:9","nodeType":"VariableDeclaration","scope":1253,"src":"8577:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1233,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:9","nodeType":"VariableDeclaration","scope":1253,"src":"8610:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1235,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:9"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1253,"src":"8666:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1238,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:9"},"scope":1274,"src":"8520:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1272,"nodeType":"Block","src":"8904:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1260,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"8980:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:9","memberName":"length","nodeType":"MemberAccess","src":"8980:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1270,"nodeType":"Block","src":"9310:45:9","statements":[{"expression":{"arguments":[{"id":1267,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9331:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1266,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1269,"nodeType":"ExpressionStatement","src":"9324:20:9"}]},"id":1271,"nodeType":"IfStatement","src":"8976:379:9","trueBody":{"id":1265,"nodeType":"Block","src":"9003:301:9","statements":[{"AST":{"nativeSrc":"9161:133:9","nodeType":"YulBlock","src":"9161:133:9","statements":[{"nativeSrc":"9179:40:9","nodeType":"YulVariableDeclaration","src":"9179:40:9","value":{"arguments":[{"name":"returndata","nativeSrc":"9208:10:9","nodeType":"YulIdentifier","src":"9208:10:9"}],"functionName":{"name":"mload","nativeSrc":"9202:5:9","nodeType":"YulIdentifier","src":"9202:5:9"},"nativeSrc":"9202:17:9","nodeType":"YulFunctionCall","src":"9202:17:9"},"variables":[{"name":"returndata_size","nativeSrc":"9183:15:9","nodeType":"YulTypedName","src":"9183:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9247:2:9","nodeType":"YulLiteral","src":"9247:2:9","type":"","value":"32"},{"name":"returndata","nativeSrc":"9251:10:9","nodeType":"YulIdentifier","src":"9251:10:9"}],"functionName":{"name":"add","nativeSrc":"9243:3:9","nodeType":"YulIdentifier","src":"9243:3:9"},"nativeSrc":"9243:19:9","nodeType":"YulFunctionCall","src":"9243:19:9"},{"name":"returndata_size","nativeSrc":"9264:15:9","nodeType":"YulIdentifier","src":"9264:15:9"}],"functionName":{"name":"revert","nativeSrc":"9236:6:9","nodeType":"YulIdentifier","src":"9236:6:9"},"nativeSrc":"9236:44:9","nodeType":"YulFunctionCall","src":"9236:44:9"},"nativeSrc":"9236:44:9","nodeType":"YulExpressionStatement","src":"9236:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1255,"isOffset":false,"isSlot":false,"src":"9208:10:9","valueSize":1},{"declaration":1255,"isOffset":false,"isSlot":false,"src":"9251:10:9","valueSize":1}],"id":1264,"nodeType":"InlineAssembly","src":"9152:142:9"}]}}]},"id":1273,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:9","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:9","nodeType":"VariableDeclaration","scope":1273,"src":"8838:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1254,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:9","nodeType":"VariableDeclaration","scope":1273,"src":"8863:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1256,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:9"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"8904:0:9"},"scope":1274,"src":"8821:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1275,"src":"194:9169:9","usedErrors":[],"usedEvents":[]}],"src":"101:9263:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1304]},"id":1305,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1276,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"126:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1304,"linearizedBaseContracts":[1304],"name":"Context","nameLocation":"641:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1285,"nodeType":"Block","src":"717:34:10","statements":[{"expression":{"expression":{"id":1282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:10","memberName":"sender","nodeType":"MemberAccess","src":"734:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1281,"id":1284,"nodeType":"Return","src":"727:17:10"}]},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:10","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"674:2:10"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1286,"src":"708:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:10"},"scope":1304,"src":"655:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"824:32:10","statements":[{"expression":{"expression":{"id":1291,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:10","memberName":"data","nodeType":"MemberAccess","src":"841:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1290,"id":1293,"nodeType":"Return","src":"834:15:10"}]},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:10","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[],"src":"774:2:10"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"808:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1288,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:10"},"scope":1304,"src":"757:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1302,"nodeType":"Block","src":"934:25:10","statements":[{"expression":{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1299,"id":1301,"nodeType":"Return","src":"944:8:10"}]},"id":1303,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:10","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"891:2:10"},"returnParameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1303,"src":"925:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:10"},"scope":1304,"src":"862:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1305,"src":"623:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:861:10"},"id":10},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1309],"ShortStrings":[1520],"StorageSlot":[1630]},"id":1521,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1306,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1521,"sourceUnit":1631,"src":"131:27:11","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":1309,"name":"ShortString","nameLocation":"333:11:11","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:11","underlyingType":{"id":1308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"358:876:11","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1520,"linearizedBaseContracts":[1520],"name":"ShortStrings","nameLocation":"1243:12:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1313,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:11","nodeType":"VariableDeclaration","scope":1520,"src":"1325:112:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1317,"name":"StringTooLong","nameLocation":"1450:13:11","nodeType":"ErrorDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"str","nameLocation":"1471:3:11","nodeType":"VariableDeclaration","scope":1317,"src":"1464:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1314,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:11"},"src":"1444:32:11"},{"errorSelector":"b3512b0c","id":1319,"name":"InvalidShortString","nameLocation":"1487:18:11","nodeType":"ErrorDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[],"src":"1505:2:11"},"src":"1481:27:11"},{"body":{"id":1362,"nodeType":"Block","src":"1767:208:11","statements":[{"assignments":[1329],"declarations":[{"constant":false,"id":1329,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:11","nodeType":"VariableDeclaration","scope":1362,"src":"1777:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1328,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1334,"initialValue":{"arguments":[{"id":1332,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"1803:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1330,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:11","typeDescriptions":{}}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1335,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1821:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:11","memberName":"length","nodeType":"MemberAccess","src":"1821:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:11","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1344,"nodeType":"IfStatement","src":"1817:72:11","trueBody":{"id":1343,"nodeType":"Block","src":"1839:50:11","statements":[{"errorCall":{"arguments":[{"id":1340,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"1874:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1339,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"1860:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1342,"nodeType":"RevertStatement","src":"1853:25:11"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1353,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1946:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:11","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:11","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1356,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1955:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:11","memberName":"length","nodeType":"MemberAccess","src":"1955:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:11","typeDescriptions":{}}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1345,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"1905:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"type(ShortString)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:11","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:11","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"functionReturnParameters":1327,"id":1361,"nodeType":"Return","src":"1898:70:11"}]},"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"1514:170:11","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1363,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:11","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"mutability":"mutable","name":"str","nameLocation":"1726:3:11","nodeType":"VariableDeclaration","scope":1363,"src":"1712:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1321,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:11"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1363,"src":"1754:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"},"typeName":{"id":1325,"nodeType":"UserDefinedTypeName","pathNode":{"id":1324,"name":"ShortString","nameLocations":["1754:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"1754:11:11"},"referencedDeclaration":1309,"src":"1754:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:11"},"scope":1520,"src":"1689:286:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1388,"nodeType":"Block","src":"2133:331:11","statements":[{"assignments":[1373],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"len","nameLocation":"2151:3:11","nodeType":"VariableDeclaration","scope":1388,"src":"2143:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1377,"initialValue":{"arguments":[{"id":1375,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"2168:4:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}],"id":1374,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"2157:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1309_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:11"},{"assignments":[1379],"declarations":[{"constant":false,"id":1379,"mutability":"mutable","name":"str","nameLocation":"2275:3:11","nodeType":"VariableDeclaration","scope":1388,"src":"2261:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1378,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1384,"initialValue":{"arguments":[{"hexValue":"3332","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:11"},{"AST":{"nativeSrc":"2357:81:11","nodeType":"YulBlock","src":"2357:81:11","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2378:3:11","nodeType":"YulIdentifier","src":"2378:3:11"},{"name":"len","nativeSrc":"2383:3:11","nodeType":"YulIdentifier","src":"2383:3:11"}],"functionName":{"name":"mstore","nativeSrc":"2371:6:11","nodeType":"YulIdentifier","src":"2371:6:11"},"nativeSrc":"2371:16:11","nodeType":"YulFunctionCall","src":"2371:16:11"},"nativeSrc":"2371:16:11","nodeType":"YulExpressionStatement","src":"2371:16:11"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2411:3:11","nodeType":"YulIdentifier","src":"2411:3:11"},{"kind":"number","nativeSrc":"2416:4:11","nodeType":"YulLiteral","src":"2416:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2407:3:11","nodeType":"YulIdentifier","src":"2407:3:11"},"nativeSrc":"2407:14:11","nodeType":"YulFunctionCall","src":"2407:14:11"},{"name":"sstr","nativeSrc":"2423:4:11","nodeType":"YulIdentifier","src":"2423:4:11"}],"functionName":{"name":"mstore","nativeSrc":"2400:6:11","nodeType":"YulIdentifier","src":"2400:6:11"},"nativeSrc":"2400:28:11","nodeType":"YulFunctionCall","src":"2400:28:11"},"nativeSrc":"2400:28:11","nodeType":"YulExpressionStatement","src":"2400:28:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1373,"isOffset":false,"isSlot":false,"src":"2383:3:11","valueSize":1},{"declaration":1367,"isOffset":false,"isSlot":false,"src":"2423:4:11","valueSize":1},{"declaration":1379,"isOffset":false,"isSlot":false,"src":"2378:3:11","valueSize":1},{"declaration":1379,"isOffset":false,"isSlot":false,"src":"2411:3:11","valueSize":1}],"id":1385,"nodeType":"InlineAssembly","src":"2348:90:11"},{"expression":{"id":1386,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"2454:3:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1371,"id":1387,"nodeType":"Return","src":"2447:10:11"}]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"1981:73:11","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:11","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:11","nodeType":"VariableDeclaration","scope":1389,"src":"2077:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"},"typeName":{"id":1366,"nodeType":"UserDefinedTypeName","pathNode":{"id":1365,"name":"ShortString","nameLocations":["2077:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"2077:11:11"},"referencedDeclaration":1309,"src":"2077:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:11"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"2118:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1369,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:11"},"scope":1520,"src":"2059:405:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1420,"nodeType":"Block","src":"2606:175:11","statements":[{"assignments":[1399],"declarations":[{"constant":false,"id":1399,"mutability":"mutable","name":"result","nameLocation":"2624:6:11","nodeType":"VariableDeclaration","scope":1420,"src":"2616:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1409,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1404,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"2660:4:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}],"expression":{"id":1402,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"2641:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"type(ShortString)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1309_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:11","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2687:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:11","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1417,"nodeType":"IfStatement","src":"2683:69:11","trueBody":{"id":1416,"nodeType":"Block","src":"2700:52:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1413,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"2721:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1415,"nodeType":"RevertStatement","src":"2714:27:11"}]}},{"expression":{"id":1418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2768:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1397,"id":1419,"nodeType":"Return","src":"2761:13:11"}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"2470:61:11","text":" @dev Return the length of a `ShortString`."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:11","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:11","nodeType":"VariableDeclaration","scope":1421,"src":"2556:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"},"typeName":{"id":1392,"nodeType":"UserDefinedTypeName","pathNode":{"id":1391,"name":"ShortString","nameLocations":["2556:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"2556:11:11"},"referencedDeclaration":1309,"src":"2556:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:11"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"2597:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:11"},"scope":1520,"src":"2536:245:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"3004:232:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3024:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1432,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:11","typeDescriptions":{}}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:11","memberName":"length","nodeType":"MemberAccess","src":"3018:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1458,"nodeType":"Block","src":"3102:128:11","statements":[{"expression":{"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1447,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3142:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1444,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"3116:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1630_$","typeString":"type(library StorageSlot)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:11","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"3116:25:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1538_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1538_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1449,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"3116:38:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3157:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1452,"nodeType":"ExpressionStatement","src":"3116:46:11"},{"expression":{"arguments":[{"id":1455,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"3200:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1453,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"3183:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"type(ShortString)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:11","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:11","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"functionReturnParameters":1431,"id":1457,"nodeType":"Return","src":"3176:43:11"}]},"id":1459,"nodeType":"IfStatement","src":"3014:216:11","trueBody":{"id":1443,"nodeType":"Block","src":"3044:52:11","statements":[{"expression":{"arguments":[{"id":1440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"3079:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1439,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"3065:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"functionReturnParameters":1431,"id":1442,"nodeType":"Return","src":"3058:27:11"}]}}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"2787:103:11","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:11","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"value","nameLocation":"2944:5:11","nodeType":"VariableDeclaration","scope":1461,"src":"2930:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1423,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"store","nameLocation":"2966:5:11","nodeType":"VariableDeclaration","scope":1461,"src":"2951:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1425,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:11"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1461,"src":"2991:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"},"typeName":{"id":1429,"nodeType":"UserDefinedTypeName","pathNode":{"id":1428,"name":"ShortString","nameLocations":["2991:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"2991:11:11"},"referencedDeclaration":1309,"src":"2991:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:11"},"scope":1520,"src":"2895:341:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1487,"nodeType":"Block","src":"3476:159:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"3509:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}],"expression":{"id":1472,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"3490:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"type(ShortString)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1309_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1476,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"3519:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1485,"nodeType":"Block","src":"3592:37:11","statements":[{"expression":{"id":1483,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"3613:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1471,"id":1484,"nodeType":"Return","src":"3606:12:11"}]},"id":1486,"nodeType":"IfStatement","src":"3486:143:11","trueBody":{"id":1482,"nodeType":"Block","src":"3539:47:11","statements":[{"expression":{"arguments":[{"id":1479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"3569:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}],"id":1478,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"3560:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1309_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1471,"id":1481,"nodeType":"Return","src":"3553:22:11"}]}}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"3242:120:11","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":1488,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:11","nodeType":"FunctionDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"value","nameLocation":"3409:5:11","nodeType":"VariableDeclaration","scope":1488,"src":"3397:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"},"typeName":{"id":1464,"nodeType":"UserDefinedTypeName","pathNode":{"id":1463,"name":"ShortString","nameLocations":["3397:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"3397:11:11"},"referencedDeclaration":1309,"src":"3397:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"store","nameLocation":"3431:5:11","nodeType":"VariableDeclaration","scope":1488,"src":"3416:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1466,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:11"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1488,"src":"3461:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1469,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:11"},"scope":1520,"src":"3367:268:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1518,"nodeType":"Block","src":"4108:175:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"4141:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}],"expression":{"id":1499,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"4122:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"type(ShortString)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:11","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:11","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1309_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1503,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"4151:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1516,"nodeType":"Block","src":"4226:51:11","statements":[{"expression":{"expression":{"arguments":[{"id":1512,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4253:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1510,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:11","typeDescriptions":{}}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:11","memberName":"length","nodeType":"MemberAccess","src":"4247:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1498,"id":1515,"nodeType":"Return","src":"4240:26:11"}]},"id":1517,"nodeType":"IfStatement","src":"4118:159:11","trueBody":{"id":1509,"nodeType":"Block","src":"4171:49:11","statements":[{"expression":{"arguments":[{"id":1506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"4203:5:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}],"id":1505,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"4192:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1309_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1498,"id":1508,"nodeType":"Return","src":"4185:24:11"}]}}]},"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"3641:357:11","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1519,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:11","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"value","nameLocation":"4047:5:11","nodeType":"VariableDeclaration","scope":1519,"src":"4035:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"},"typeName":{"id":1491,"nodeType":"UserDefinedTypeName","pathNode":{"id":1490,"name":"ShortString","nameLocations":["4035:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"4035:11:11"},"referencedDeclaration":1309,"src":"4035:11:11","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"store","nameLocation":"4069:5:11","nodeType":"VariableDeclaration","scope":1519,"src":"4054:20:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1493,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:11"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1519,"src":"4099:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:11"},"scope":1520,"src":"4003:280:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1521,"src":"1235:3050:11","usedErrors":[1317,1319],"usedEvents":[]}],"src":"106:4180:11"},"id":11},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1630]},"id":1631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1522,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"218:1201:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1630,"linearizedBaseContracts":[1630],"name":"StorageSlot","nameLocation":"1428:11:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1526,"members":[{"constant":false,"id":1525,"mutability":"mutable","name":"value","nameLocation":"1483:5:12","nodeType":"VariableDeclaration","scope":1526,"src":"1475:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:12","nodeType":"StructDefinition","scope":1630,"src":"1446:49:12","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1529,"members":[{"constant":false,"id":1528,"mutability":"mutable","name":"value","nameLocation":"1535:5:12","nodeType":"VariableDeclaration","scope":1529,"src":"1530:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1527,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:12","nodeType":"StructDefinition","scope":1630,"src":"1501:46:12","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1532,"members":[{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"1590:5:12","nodeType":"VariableDeclaration","scope":1532,"src":"1582:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:12","nodeType":"StructDefinition","scope":1630,"src":"1553:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1535,"members":[{"constant":false,"id":1534,"mutability":"mutable","name":"value","nameLocation":"1645:5:12","nodeType":"VariableDeclaration","scope":1535,"src":"1637:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:12","nodeType":"StructDefinition","scope":1630,"src":"1608:49:12","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1538,"members":[{"constant":false,"id":1537,"mutability":"mutable","name":"value","nameLocation":"1698:5:12","nodeType":"VariableDeclaration","scope":1538,"src":"1691:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1536,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:12","nodeType":"StructDefinition","scope":1630,"src":"1663:47:12","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1541,"members":[{"constant":false,"id":1540,"mutability":"mutable","name":"value","nameLocation":"1749:5:12","nodeType":"VariableDeclaration","scope":1541,"src":"1743:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1539,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:12","nodeType":"StructDefinition","scope":1630,"src":"1716:45:12","visibility":"public"},{"body":{"id":1551,"nodeType":"Block","src":"1943:106:12","statements":[{"AST":{"nativeSrc":"2005:38:12","nodeType":"YulBlock","src":"2005:38:12","statements":[{"nativeSrc":"2019:14:12","nodeType":"YulAssignment","src":"2019:14:12","value":{"name":"slot","nativeSrc":"2029:4:12","nodeType":"YulIdentifier","src":"2029:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2019:6:12","nodeType":"YulIdentifier","src":"2019:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1548,"isOffset":false,"isSlot":true,"src":"2019:6:12","suffix":"slot","valueSize":1},{"declaration":1544,"isOffset":false,"isSlot":false,"src":"2029:4:12","valueSize":1}],"id":1550,"nodeType":"InlineAssembly","src":"1996:47:12"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"1767:87:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1552,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:12","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"slot","nameLocation":"1891:4:12","nodeType":"VariableDeclaration","scope":1552,"src":"1883:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:12"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"r","nameLocation":"1940:1:12","nodeType":"VariableDeclaration","scope":1552,"src":"1920:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1526_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1547,"nodeType":"UserDefinedTypeName","pathNode":{"id":1546,"name":"AddressSlot","nameLocations":["1920:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1526,"src":"1920:11:12"},"referencedDeclaration":1526,"src":"1920:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1526_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:12"},"scope":1630,"src":"1859:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1562,"nodeType":"Block","src":"2231:106:12","statements":[{"AST":{"nativeSrc":"2293:38:12","nodeType":"YulBlock","src":"2293:38:12","statements":[{"nativeSrc":"2307:14:12","nodeType":"YulAssignment","src":"2307:14:12","value":{"name":"slot","nativeSrc":"2317:4:12","nodeType":"YulIdentifier","src":"2317:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2307:6:12","nodeType":"YulIdentifier","src":"2307:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1559,"isOffset":false,"isSlot":true,"src":"2307:6:12","suffix":"slot","valueSize":1},{"declaration":1555,"isOffset":false,"isSlot":false,"src":"2317:4:12","valueSize":1}],"id":1561,"nodeType":"InlineAssembly","src":"2284:47:12"}]},"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"2055:87:12","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:12","nodeType":"FunctionDefinition","parameters":{"id":1556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1555,"mutability":"mutable","name":"slot","nameLocation":"2179:4:12","nodeType":"VariableDeclaration","scope":1563,"src":"2171:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:12"},"returnParameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"r","nameLocation":"2228:1:12","nodeType":"VariableDeclaration","scope":1563,"src":"2208:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1529_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1558,"nodeType":"UserDefinedTypeName","pathNode":{"id":1557,"name":"BooleanSlot","nameLocations":["2208:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1529,"src":"2208:11:12"},"referencedDeclaration":1529,"src":"2208:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1529_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:12"},"scope":1630,"src":"2147:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"2519:106:12","statements":[{"AST":{"nativeSrc":"2581:38:12","nodeType":"YulBlock","src":"2581:38:12","statements":[{"nativeSrc":"2595:14:12","nodeType":"YulAssignment","src":"2595:14:12","value":{"name":"slot","nativeSrc":"2605:4:12","nodeType":"YulIdentifier","src":"2605:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2595:6:12","nodeType":"YulIdentifier","src":"2595:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1570,"isOffset":false,"isSlot":true,"src":"2595:6:12","suffix":"slot","valueSize":1},{"declaration":1566,"isOffset":false,"isSlot":false,"src":"2605:4:12","valueSize":1}],"id":1572,"nodeType":"InlineAssembly","src":"2572:47:12"}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"2343:87:12","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:12","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"slot","nameLocation":"2467:4:12","nodeType":"VariableDeclaration","scope":1574,"src":"2459:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:12"},"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"r","nameLocation":"2516:1:12","nodeType":"VariableDeclaration","scope":1574,"src":"2496:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1532_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1569,"nodeType":"UserDefinedTypeName","pathNode":{"id":1568,"name":"Bytes32Slot","nameLocations":["2496:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"2496:11:12"},"referencedDeclaration":1532,"src":"2496:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1532_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:12"},"scope":1630,"src":"2435:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1584,"nodeType":"Block","src":"2807:106:12","statements":[{"AST":{"nativeSrc":"2869:38:12","nodeType":"YulBlock","src":"2869:38:12","statements":[{"nativeSrc":"2883:14:12","nodeType":"YulAssignment","src":"2883:14:12","value":{"name":"slot","nativeSrc":"2893:4:12","nodeType":"YulIdentifier","src":"2893:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2883:6:12","nodeType":"YulIdentifier","src":"2883:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1581,"isOffset":false,"isSlot":true,"src":"2883:6:12","suffix":"slot","valueSize":1},{"declaration":1577,"isOffset":false,"isSlot":false,"src":"2893:4:12","valueSize":1}],"id":1583,"nodeType":"InlineAssembly","src":"2860:47:12"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"2631:87:12","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1585,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:12","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"slot","nameLocation":"2755:4:12","nodeType":"VariableDeclaration","scope":1585,"src":"2747:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:12"},"returnParameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"r","nameLocation":"2804:1:12","nodeType":"VariableDeclaration","scope":1585,"src":"2784:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1535_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1580,"nodeType":"UserDefinedTypeName","pathNode":{"id":1579,"name":"Uint256Slot","nameLocations":["2784:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1535,"src":"2784:11:12"},"referencedDeclaration":1535,"src":"2784:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1535_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:12"},"scope":1630,"src":"2723:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1595,"nodeType":"Block","src":"3092:106:12","statements":[{"AST":{"nativeSrc":"3154:38:12","nodeType":"YulBlock","src":"3154:38:12","statements":[{"nativeSrc":"3168:14:12","nodeType":"YulAssignment","src":"3168:14:12","value":{"name":"slot","nativeSrc":"3178:4:12","nodeType":"YulIdentifier","src":"3178:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3168:6:12","nodeType":"YulIdentifier","src":"3168:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1592,"isOffset":false,"isSlot":true,"src":"3168:6:12","suffix":"slot","valueSize":1},{"declaration":1588,"isOffset":false,"isSlot":false,"src":"3178:4:12","valueSize":1}],"id":1594,"nodeType":"InlineAssembly","src":"3145:47:12"}]},"documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"2919:86:12","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1596,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:12","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"slot","nameLocation":"3041:4:12","nodeType":"VariableDeclaration","scope":1596,"src":"3033:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:12"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"r","nameLocation":"3089:1:12","nodeType":"VariableDeclaration","scope":1596,"src":"3070:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1538_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1591,"nodeType":"UserDefinedTypeName","pathNode":{"id":1590,"name":"StringSlot","nameLocations":["3070:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1538,"src":"3070:10:12"},"referencedDeclaration":1538,"src":"3070:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1538_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:12"},"scope":1630,"src":"3010:188:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1606,"nodeType":"Block","src":"3400:112:12","statements":[{"AST":{"nativeSrc":"3462:44:12","nodeType":"YulBlock","src":"3462:44:12","statements":[{"nativeSrc":"3476:20:12","nodeType":"YulAssignment","src":"3476:20:12","value":{"name":"store.slot","nativeSrc":"3486:10:12","nodeType":"YulIdentifier","src":"3486:10:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3476:6:12","nodeType":"YulIdentifier","src":"3476:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1603,"isOffset":false,"isSlot":true,"src":"3476:6:12","suffix":"slot","valueSize":1},{"declaration":1599,"isOffset":false,"isSlot":true,"src":"3486:10:12","suffix":"slot","valueSize":1}],"id":1605,"nodeType":"InlineAssembly","src":"3453:53:12"}]},"documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"3204:101:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1607,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:12","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"store","nameLocation":"3348:5:12","nodeType":"VariableDeclaration","scope":1607,"src":"3333:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1598,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:12"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"r","nameLocation":"3397:1:12","nodeType":"VariableDeclaration","scope":1607,"src":"3378:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1538_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1602,"nodeType":"UserDefinedTypeName","pathNode":{"id":1601,"name":"StringSlot","nameLocations":["3378:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1538,"src":"3378:10:12"},"referencedDeclaration":1538,"src":"3378:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1538_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:12"},"scope":1630,"src":"3310:202:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1617,"nodeType":"Block","src":"3688:106:12","statements":[{"AST":{"nativeSrc":"3750:38:12","nodeType":"YulBlock","src":"3750:38:12","statements":[{"nativeSrc":"3764:14:12","nodeType":"YulAssignment","src":"3764:14:12","value":{"name":"slot","nativeSrc":"3774:4:12","nodeType":"YulIdentifier","src":"3774:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3764:6:12","nodeType":"YulIdentifier","src":"3764:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1614,"isOffset":false,"isSlot":true,"src":"3764:6:12","suffix":"slot","valueSize":1},{"declaration":1610,"isOffset":false,"isSlot":false,"src":"3774:4:12","valueSize":1}],"id":1616,"nodeType":"InlineAssembly","src":"3741:47:12"}]},"documentation":{"id":1608,"nodeType":"StructuredDocumentation","src":"3518:85:12","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1618,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:12","nodeType":"FunctionDefinition","parameters":{"id":1611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1610,"mutability":"mutable","name":"slot","nameLocation":"3638:4:12","nodeType":"VariableDeclaration","scope":1618,"src":"3630:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:12"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"r","nameLocation":"3685:1:12","nodeType":"VariableDeclaration","scope":1618,"src":"3667:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1541_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1613,"nodeType":"UserDefinedTypeName","pathNode":{"id":1612,"name":"BytesSlot","nameLocations":["3667:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1541,"src":"3667:9:12"},"referencedDeclaration":1541,"src":"3667:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1541_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:12"},"scope":1630,"src":"3608:186:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1628,"nodeType":"Block","src":"3991:112:12","statements":[{"AST":{"nativeSrc":"4053:44:12","nodeType":"YulBlock","src":"4053:44:12","statements":[{"nativeSrc":"4067:20:12","nodeType":"YulAssignment","src":"4067:20:12","value":{"name":"store.slot","nativeSrc":"4077:10:12","nodeType":"YulIdentifier","src":"4077:10:12"},"variableNames":[{"name":"r.slot","nativeSrc":"4067:6:12","nodeType":"YulIdentifier","src":"4067:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1625,"isOffset":false,"isSlot":true,"src":"4067:6:12","suffix":"slot","valueSize":1},{"declaration":1621,"isOffset":false,"isSlot":true,"src":"4077:10:12","suffix":"slot","valueSize":1}],"id":1627,"nodeType":"InlineAssembly","src":"4044:53:12"}]},"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"3800:99:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1629,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:12","nodeType":"FunctionDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"store","nameLocation":"3940:5:12","nodeType":"VariableDeclaration","scope":1629,"src":"3926:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1620,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:12"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"r","nameLocation":"3988:1:12","nodeType":"VariableDeclaration","scope":1629,"src":"3970:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1541_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1624,"nodeType":"UserDefinedTypeName","pathNode":{"id":1623,"name":"BytesSlot","nameLocations":["3970:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":1541,"src":"3970:9:12"},"referencedDeclaration":1541,"src":"3970:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1541_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:12"},"scope":1630,"src":"3904:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1631,"src":"1420:2685:12","usedErrors":[],"usedEvents":[]}],"src":"193:3913:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3307],"SignedMath":[3412],"Strings":[1859]},"id":1860,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1632,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1860,"sourceUnit":3308,"src":"126:25:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1860,"sourceUnit":3413,"src":"152:31:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"185:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":1859,"linearizedBaseContracts":[1859],"name":"Strings","nameLocation":"228:7:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1638,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:13","nodeType":"VariableDeclaration","scope":1859,"src":"242:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1636,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1641,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:13","nodeType":"VariableDeclaration","scope":1859,"src":"302:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1639,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1688,"nodeType":"Block","src":"518:625:13","statements":[{"id":1687,"nodeType":"UncheckedBlock","src":"528:609:13","statements":[{"assignments":[1650],"declarations":[{"constant":false,"id":1650,"mutability":"mutable","name":"length","nameLocation":"560:6:13","nodeType":"VariableDeclaration","scope":1687,"src":"552:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1657,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"580:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1651,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"569:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3307_$","typeString":"type(library Math)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:13","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"569:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:13"},{"assignments":[1659],"declarations":[{"constant":false,"id":1659,"mutability":"mutable","name":"buffer","nameLocation":"618:6:13","nodeType":"VariableDeclaration","scope":1687,"src":"604:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1664,"initialValue":{"arguments":[{"id":1662,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"638:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1660,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:13"},{"assignments":[1666],"declarations":[{"constant":false,"id":1666,"mutability":"mutable","name":"ptr","nameLocation":"667:3:13","nodeType":"VariableDeclaration","scope":1687,"src":"659:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1667,"nodeType":"VariableDeclarationStatement","src":"659:11:13"},{"AST":{"nativeSrc":"740:67:13","nodeType":"YulBlock","src":"740:67:13","statements":[{"nativeSrc":"758:35:13","nodeType":"YulAssignment","src":"758:35:13","value":{"arguments":[{"name":"buffer","nativeSrc":"769:6:13","nodeType":"YulIdentifier","src":"769:6:13"},{"arguments":[{"kind":"number","nativeSrc":"781:2:13","nodeType":"YulLiteral","src":"781:2:13","type":"","value":"32"},{"name":"length","nativeSrc":"785:6:13","nodeType":"YulIdentifier","src":"785:6:13"}],"functionName":{"name":"add","nativeSrc":"777:3:13","nodeType":"YulIdentifier","src":"777:3:13"},"nativeSrc":"777:15:13","nodeType":"YulFunctionCall","src":"777:15:13"}],"functionName":{"name":"add","nativeSrc":"765:3:13","nodeType":"YulIdentifier","src":"765:3:13"},"nativeSrc":"765:28:13","nodeType":"YulFunctionCall","src":"765:28:13"},"variableNames":[{"name":"ptr","nativeSrc":"758:3:13","nodeType":"YulIdentifier","src":"758:3:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1659,"isOffset":false,"isSlot":false,"src":"769:6:13","valueSize":1},{"declaration":1650,"isOffset":false,"isSlot":false,"src":"785:6:13","valueSize":1},{"declaration":1666,"isOffset":false,"isSlot":false,"src":"758:3:13","valueSize":1}],"id":1668,"nodeType":"InlineAssembly","src":"731:76:13"},{"body":{"id":1683,"nodeType":"Block","src":"833:267:13","statements":[{"expression":{"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:13","subExpression":{"id":1670,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"851:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1672,"nodeType":"ExpressionStatement","src":"851:5:13"},{"AST":{"nativeSrc":"934:84:13","nodeType":"YulBlock","src":"934:84:13","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"964:3:13","nodeType":"YulIdentifier","src":"964:3:13"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"978:5:13","nodeType":"YulIdentifier","src":"978:5:13"},{"kind":"number","nativeSrc":"985:2:13","nodeType":"YulLiteral","src":"985:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"974:3:13","nodeType":"YulIdentifier","src":"974:3:13"},"nativeSrc":"974:14:13","nodeType":"YulFunctionCall","src":"974:14:13"},{"name":"_SYMBOLS","nativeSrc":"990:8:13","nodeType":"YulIdentifier","src":"990:8:13"}],"functionName":{"name":"byte","nativeSrc":"969:4:13","nodeType":"YulIdentifier","src":"969:4:13"},"nativeSrc":"969:30:13","nodeType":"YulFunctionCall","src":"969:30:13"}],"functionName":{"name":"mstore8","nativeSrc":"956:7:13","nodeType":"YulIdentifier","src":"956:7:13"},"nativeSrc":"956:44:13","nodeType":"YulFunctionCall","src":"956:44:13"},"nativeSrc":"956:44:13","nodeType":"YulExpressionStatement","src":"956:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1638,"isOffset":false,"isSlot":false,"src":"990:8:13","valueSize":1},{"declaration":1666,"isOffset":false,"isSlot":false,"src":"964:3:13","valueSize":1},{"declaration":1644,"isOffset":false,"isSlot":false,"src":"978:5:13","valueSize":1}],"id":1673,"nodeType":"InlineAssembly","src":"925:93:13"},{"expression":{"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1035:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1677,"nodeType":"ExpressionStatement","src":"1035:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"1068:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1682,"nodeType":"IfStatement","src":"1064:21:13","trueBody":{"id":1681,"nodeType":"Break","src":"1080:5:13"}}]},"condition":{"hexValue":"74727565","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1684,"nodeType":"WhileStatement","src":"820:280:13"},{"expression":{"id":1685,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"1120:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1648,"id":1686,"nodeType":"Return","src":"1113:13:13"}]}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"352:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:13","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"value","nameLocation":"473:5:13","nodeType":"VariableDeclaration","scope":1689,"src":"465:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:13"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"503:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1646,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:13"},"scope":1859,"src":"447:696:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1716,"nodeType":"Block","src":"1313:103:13","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1354:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:13","trueExpression":{"hexValue":"2d","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1400:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1708,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"1385:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3412_$","typeString":"type(library SignedMath)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:13","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3411,"src":"1385:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1707,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1689,1717],"referencedDeclaration":1689,"src":"1376:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1699,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1697,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:13","typeDescriptions":{}}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1696,"id":1715,"nodeType":"Return","src":"1323:86:13"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"1149:89:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1717,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:13","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"value","nameLocation":"1268:5:13","nodeType":"VariableDeclaration","scope":1717,"src":"1261:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1691,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:13"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1717,"src":"1298:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1694,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:13"},"scope":1859,"src":"1243:173:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1736,"nodeType":"Block","src":"1595:100:13","statements":[{"id":1735,"nodeType":"UncheckedBlock","src":"1605:84:13","statements":[{"expression":{"arguments":[{"id":1726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"1648:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"1667:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1727,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"1655:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3307_$","typeString":"type(library Math)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:13","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3267,"src":"1655:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1725,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1737,1813,1833],"referencedDeclaration":1813,"src":"1636:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1724,"id":1734,"nodeType":"Return","src":"1629:49:13"}]}]},"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"1422:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:13","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"value","nameLocation":"1550:5:13","nodeType":"VariableDeclaration","scope":1737,"src":"1542:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:13"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1737,"src":"1580:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1722,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:13"},"scope":1859,"src":"1521:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"1908:347:13","statements":[{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:13","nodeType":"VariableDeclaration","scope":1812,"src":"1918:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1757,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1752,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"1954:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1749,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:13"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1758,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"1975:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1760,"indexExpression":{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1763,"nodeType":"ExpressionStatement","src":"1975:15:13"},{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1764,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2000:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1766,"indexExpression":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1769,"nodeType":"ExpressionStatement","src":"2000:15:13"},{"body":{"id":1798,"nodeType":"Block","src":"2070:83:13","statements":[{"expression":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1784,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2084:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1786,"indexExpression":{"id":1785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2091:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1787,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"2096:8:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1791,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2105:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1793,"nodeType":"ExpressionStatement","src":"2084:33:13"},{"expression":{"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2131:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1797,"nodeType":"ExpressionStatement","src":"2131:11:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2058:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"initializationExpression":{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"i","nameLocation":"2038:1:13","nodeType":"VariableDeclaration","scope":1799,"src":"2030:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1773,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"2046:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:13","subExpression":{"id":1781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2067:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"2065:3:13"},"nodeType":"ForStatement","src":"2025:128:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2170:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1800,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2162:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"ExpressionStatement","src":"2162:55:13"},{"expression":{"arguments":[{"id":1809,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2241:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1807,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:13","typeDescriptions":{}}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1746,"id":1811,"nodeType":"Return","src":"2227:21:13"}]},"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"1701:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:13","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"value","nameLocation":"1847:5:13","nodeType":"VariableDeclaration","scope":1813,"src":"1839:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"length","nameLocation":"1862:6:13","nodeType":"VariableDeclaration","scope":1813,"src":"1854:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:13"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1813,"src":"1893:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1744,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:13"},"scope":1859,"src":"1818:437:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1832,"nodeType":"Block","src":"2480:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1826,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2525:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1824,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:13","typeDescriptions":{}}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:13","typeDescriptions":{}}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1829,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"2533:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1821,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1737,1813,1833],"referencedDeclaration":1813,"src":"2497:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1820,"id":1831,"nodeType":"Return","src":"2490:59:13"}]},"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"2261:141:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:13","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"addr","nameLocation":"2436:4:13","nodeType":"VariableDeclaration","scope":1833,"src":"2428:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:13"},"returnParameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1833,"src":"2465:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1818,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:13"},"scope":1859,"src":"2407:149:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"2711:66:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2744:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1844,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:13","typeDescriptions":{}}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1843,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1852,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2767:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1850,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:13","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1849,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1842,"id":1856,"nodeType":"Return","src":"2721:49:13"}]},"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"2562:66:13","text":" @dev Returns true if the two strings are equal."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:13","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"a","nameLocation":"2662:1:13","nodeType":"VariableDeclaration","scope":1858,"src":"2648:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1835,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"b","nameLocation":"2679:1:13","nodeType":"VariableDeclaration","scope":1858,"src":"2665:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1837,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:13"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"2705:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1840,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:13"},"scope":1859,"src":"2633:144:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1860,"src":"220:2559:13","usedErrors":[],"usedEvents":[]}],"src":"101:2679:13"},"id":13},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2225],"Math":[3307],"SignedMath":[3412],"Strings":[1859]},"id":2226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1861,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":1860,"src":"137:24:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"163:205:14","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2225,"linearizedBaseContracts":[2225],"name":"ECDSA","nameLocation":"377:5:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1869,"members":[{"id":1864,"name":"NoError","nameLocation":"417:7:14","nodeType":"EnumValue","src":"417:7:14"},{"id":1865,"name":"InvalidSignature","nameLocation":"434:16:14","nodeType":"EnumValue","src":"434:16:14"},{"id":1866,"name":"InvalidSignatureLength","nameLocation":"460:22:14","nodeType":"EnumValue","src":"460:22:14"},{"id":1867,"name":"InvalidSignatureS","nameLocation":"492:17:14","nodeType":"EnumValue","src":"492:17:14"},{"id":1868,"name":"InvalidSignatureV","nameLocation":"519:17:14","nodeType":"EnumValue","src":"519:17:14"}],"name":"RecoverError","nameLocation":"394:12:14","nodeType":"EnumDefinition","src":"389:175:14"},{"body":{"id":1912,"nodeType":"Block","src":"624:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"638:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1876,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"647:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1869_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"647:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"734:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1882,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"743:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1869_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"743:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"843:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1891,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"852:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1869_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"852:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"965:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1900,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"974:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1869_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"974:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1908,"nodeType":"IfStatement","src":"961:114:14","trueBody":{"id":1907,"nodeType":"Block","src":"1006:69:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":1903,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1906,"nodeType":"ExpressionStatement","src":"1020:44:14"}]}},"id":1909,"nodeType":"IfStatement","src":"839:236:14","trueBody":{"id":1898,"nodeType":"Block","src":"889:66:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":1894,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1897,"nodeType":"ExpressionStatement","src":"903:41:14"}]}},"id":1910,"nodeType":"IfStatement","src":"730:345:14","trueBody":{"id":1889,"nodeType":"Block","src":"774:59:14","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":1885,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1888,"nodeType":"ExpressionStatement","src":"788:34:14"}]}},"id":1911,"nodeType":"IfStatement","src":"634:441:14","trueBody":{"id":1880,"nodeType":"Block","src":"669:55:14","statements":[{"functionReturnParameters":1874,"id":1879,"nodeType":"Return","src":"683:7:14"}]}}]},"id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:14","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"error","nameLocation":"604:5:14","nodeType":"VariableDeclaration","scope":1913,"src":"591:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1871,"nodeType":"UserDefinedTypeName","pathNode":{"id":1870,"name":"RecoverError","nameLocations":["591:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"591:12:14"},"referencedDeclaration":1869,"src":"591:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:14"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"624:0:14"},"scope":2225,"src":"570:511:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1958,"nodeType":"Block","src":"2249:626:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1926,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"2263:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:14","memberName":"length","nodeType":"MemberAccess","src":"2263:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1956,"nodeType":"Block","src":"2788:81:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:14","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1952,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"2822:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1869_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:14","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"2822:35:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}}],"id":1954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1925,"id":1955,"nodeType":"Return","src":"2802:56:14"}]},"id":1957,"nodeType":"IfStatement","src":"2259:610:14","trueBody":{"id":1947,"nodeType":"Block","src":"2287:495:14","statements":[{"assignments":[1931],"declarations":[{"constant":false,"id":1931,"mutability":"mutable","name":"r","nameLocation":"2309:1:14","nodeType":"VariableDeclaration","scope":1947,"src":"2301:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1932,"nodeType":"VariableDeclarationStatement","src":"2301:9:14"},{"assignments":[1934],"declarations":[{"constant":false,"id":1934,"mutability":"mutable","name":"s","nameLocation":"2332:1:14","nodeType":"VariableDeclaration","scope":1947,"src":"2324:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1935,"nodeType":"VariableDeclarationStatement","src":"2324:9:14"},{"assignments":[1937],"declarations":[{"constant":false,"id":1937,"mutability":"mutable","name":"v","nameLocation":"2353:1:14","nodeType":"VariableDeclaration","scope":1947,"src":"2347:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1936,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1938,"nodeType":"VariableDeclarationStatement","src":"2347:7:14"},{"AST":{"nativeSrc":"2555:171:14","nodeType":"YulBlock","src":"2555:171:14","statements":[{"nativeSrc":"2573:32:14","nodeType":"YulAssignment","src":"2573:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2588:9:14","nodeType":"YulIdentifier","src":"2588:9:14"},{"kind":"number","nativeSrc":"2599:4:14","nodeType":"YulLiteral","src":"2599:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2584:3:14","nodeType":"YulIdentifier","src":"2584:3:14"},"nativeSrc":"2584:20:14","nodeType":"YulFunctionCall","src":"2584:20:14"}],"functionName":{"name":"mload","nativeSrc":"2578:5:14","nodeType":"YulIdentifier","src":"2578:5:14"},"nativeSrc":"2578:27:14","nodeType":"YulFunctionCall","src":"2578:27:14"},"variableNames":[{"name":"r","nativeSrc":"2573:1:14","nodeType":"YulIdentifier","src":"2573:1:14"}]},{"nativeSrc":"2622:32:14","nodeType":"YulAssignment","src":"2622:32:14","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2637:9:14","nodeType":"YulIdentifier","src":"2637:9:14"},{"kind":"number","nativeSrc":"2648:4:14","nodeType":"YulLiteral","src":"2648:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2633:3:14","nodeType":"YulIdentifier","src":"2633:3:14"},"nativeSrc":"2633:20:14","nodeType":"YulFunctionCall","src":"2633:20:14"}],"functionName":{"name":"mload","nativeSrc":"2627:5:14","nodeType":"YulIdentifier","src":"2627:5:14"},"nativeSrc":"2627:27:14","nodeType":"YulFunctionCall","src":"2627:27:14"},"variableNames":[{"name":"s","nativeSrc":"2622:1:14","nodeType":"YulIdentifier","src":"2622:1:14"}]},{"nativeSrc":"2671:41:14","nodeType":"YulAssignment","src":"2671:41:14","value":{"arguments":[{"kind":"number","nativeSrc":"2681:1:14","nodeType":"YulLiteral","src":"2681:1:14","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2694:9:14","nodeType":"YulIdentifier","src":"2694:9:14"},{"kind":"number","nativeSrc":"2705:4:14","nodeType":"YulLiteral","src":"2705:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2690:3:14","nodeType":"YulIdentifier","src":"2690:3:14"},"nativeSrc":"2690:20:14","nodeType":"YulFunctionCall","src":"2690:20:14"}],"functionName":{"name":"mload","nativeSrc":"2684:5:14","nodeType":"YulIdentifier","src":"2684:5:14"},"nativeSrc":"2684:27:14","nodeType":"YulFunctionCall","src":"2684:27:14"}],"functionName":{"name":"byte","nativeSrc":"2676:4:14","nodeType":"YulIdentifier","src":"2676:4:14"},"nativeSrc":"2676:36:14","nodeType":"YulFunctionCall","src":"2676:36:14"},"variableNames":[{"name":"v","nativeSrc":"2671:1:14","nodeType":"YulIdentifier","src":"2671:1:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1931,"isOffset":false,"isSlot":false,"src":"2573:1:14","valueSize":1},{"declaration":1934,"isOffset":false,"isSlot":false,"src":"2622:1:14","valueSize":1},{"declaration":1918,"isOffset":false,"isSlot":false,"src":"2588:9:14","valueSize":1},{"declaration":1918,"isOffset":false,"isSlot":false,"src":"2637:9:14","valueSize":1},{"declaration":1918,"isOffset":false,"isSlot":false,"src":"2694:9:14","valueSize":1},{"declaration":1937,"isOffset":false,"isSlot":false,"src":"2671:1:14","valueSize":1}],"id":1939,"nodeType":"InlineAssembly","src":"2546:180:14"},{"expression":{"arguments":[{"id":1941,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2757:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1942,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"2763:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1943,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2766:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1944,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2769:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1940,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1959,2033,2127],"referencedDeclaration":2127,"src":"2746:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":1925,"id":1946,"nodeType":"Return","src":"2739:32:14"}]}}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"1087:1053:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":1959,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:14","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"hash","nameLocation":"2173:4:14","nodeType":"VariableDeclaration","scope":1959,"src":"2165:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"signature","nameLocation":"2192:9:14","nodeType":"VariableDeclaration","scope":1959,"src":"2179:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1917,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:14"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"2226:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"2235:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1923,"nodeType":"UserDefinedTypeName","pathNode":{"id":1922,"name":"RecoverError","nameLocations":["2235:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"2235:12:14"},"referencedDeclaration":1869,"src":"2235:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:14"},"scope":2225,"src":"2145:730:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1985,"nodeType":"Block","src":"3748:140:14","statements":[{"assignments":[1970,1973],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:14","nodeType":"VariableDeclaration","scope":1985,"src":"3759:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1969,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"error","nameLocation":"3791:5:14","nodeType":"VariableDeclaration","scope":1985,"src":"3778:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1972,"nodeType":"UserDefinedTypeName","pathNode":{"id":1971,"name":"RecoverError","nameLocations":["3778:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"3778:12:14"},"referencedDeclaration":1869,"src":"3778:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":1978,"initialValue":{"arguments":[{"id":1975,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"3811:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1976,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"3817:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1974,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1959,2033,2127],"referencedDeclaration":1959,"src":"3800:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:14"},{"expression":{"arguments":[{"id":1980,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"3849:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}],"id":1979,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"3837:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1869_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"3837:18:14"},{"expression":{"id":1983,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"3872:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1968,"id":1984,"nodeType":"Return","src":"3865:16:14"}]},"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"2881:775:14","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:14","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"hash","nameLocation":"3686:4:14","nodeType":"VariableDeclaration","scope":1986,"src":"3678:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"signature","nameLocation":"3705:9:14","nodeType":"VariableDeclaration","scope":1986,"src":"3692:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1963,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:14"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1986,"src":"3739:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1966,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:14"},"scope":2225,"src":"3661:227:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2032,"nodeType":"Block","src":"4245:203:14","statements":[{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"s","nameLocation":"4263:1:14","nodeType":"VariableDeclaration","scope":2032,"src":"4255:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2009,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2003,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"4267:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:14","typeDescriptions":{}}},"id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:14"},{"assignments":[2011],"declarations":[{"constant":false,"id":2011,"mutability":"mutable","name":"v","nameLocation":"4363:1:14","nodeType":"VariableDeclaration","scope":2032,"src":"4357:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2010,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2024,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2016,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"4382:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2014,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:14","typeDescriptions":{}}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:14","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2012,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:14","typeDescriptions":{}}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:14"},{"expression":{"arguments":[{"id":2026,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4427:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2027,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"4433:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2028,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"4436:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2029,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4439:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2025,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1959,2033,2127],"referencedDeclaration":2127,"src":"4416:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2000,"id":2031,"nodeType":"Return","src":"4409:32:14"}]},"documentation":{"id":1987,"nodeType":"StructuredDocumentation","src":"3894:243:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:14","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"hash","nameLocation":"4170:4:14","nodeType":"VariableDeclaration","scope":2033,"src":"4162:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"r","nameLocation":"4184:1:14","nodeType":"VariableDeclaration","scope":2033,"src":"4176:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"vs","nameLocation":"4195:2:14","nodeType":"VariableDeclaration","scope":2033,"src":"4187:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:14"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"4222:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"4231:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1998,"nodeType":"UserDefinedTypeName","pathNode":{"id":1997,"name":"RecoverError","nameLocations":["4231:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"4231:12:14"},"referencedDeclaration":1869,"src":"4231:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:14"},"scope":2225,"src":"4142:306:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2062,"nodeType":"Block","src":"4699:136:14","statements":[{"assignments":[2046,2049],"declarations":[{"constant":false,"id":2046,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:14","nodeType":"VariableDeclaration","scope":2062,"src":"4710:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"mutable","name":"error","nameLocation":"4742:5:14","nodeType":"VariableDeclaration","scope":2062,"src":"4729:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2048,"nodeType":"UserDefinedTypeName","pathNode":{"id":2047,"name":"RecoverError","nameLocations":["4729:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"4729:12:14"},"referencedDeclaration":1869,"src":"4729:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"id":2051,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"4762:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2052,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"4768:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2053,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"4771:2:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2050,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1959,2033,2127],"referencedDeclaration":2033,"src":"4751:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:14"},{"expression":{"arguments":[{"id":2057,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4796:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}],"id":2056,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"4784:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1869_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2059,"nodeType":"ExpressionStatement","src":"4784:18:14"},{"expression":{"id":2060,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"4819:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2044,"id":2061,"nodeType":"Return","src":"4812:16:14"}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"4454:154:14","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2063,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:14","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"hash","nameLocation":"4638:4:14","nodeType":"VariableDeclaration","scope":2063,"src":"4630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"r","nameLocation":"4652:1:14","nodeType":"VariableDeclaration","scope":2063,"src":"4644:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"vs","nameLocation":"4663:2:14","nodeType":"VariableDeclaration","scope":2063,"src":"4655:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:14"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2063,"src":"4690:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:14"},"scope":2225,"src":"4613:222:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2126,"nodeType":"Block","src":"5120:1345:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2082,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6016:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:14","typeDescriptions":{}}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:14","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2095,"nodeType":"IfStatement","src":"6004:161:14","trueBody":{"id":2094,"nodeType":"Block","src":"6089:76:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:14","typeDescriptions":{}}},"id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2090,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"6123:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1869_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:14","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"6123:30:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}}],"id":2092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2079,"id":2093,"nodeType":"Return","src":"6103:51:14"}]}},{"assignments":[2097],"declarations":[{"constant":false,"id":2097,"mutability":"mutable","name":"signer","nameLocation":"6267:6:14","nodeType":"VariableDeclaration","scope":2126,"src":"6259:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2104,"initialValue":{"arguments":[{"id":2099,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"6286:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2100,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6292:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2101,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"6295:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2102,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6298:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2098,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:14","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6314:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:14","typeDescriptions":{}}},"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"6310:101:14","trueBody":{"id":2119,"nodeType":"Block","src":"6336:75:14","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:14","typeDescriptions":{}}},"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2115,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"6370:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1869_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:14","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"6370:29:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}}],"id":2117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2079,"id":2118,"nodeType":"Return","src":"6350:50:14"}]}},{"expression":{"components":[{"id":2121,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6429:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2122,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"6437:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1869_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:14","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"6437:20:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}}],"id":2124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2079,"id":2125,"nodeType":"Return","src":"6421:37:14"}]},"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"4841:163:14","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:14","nodeType":"FunctionDefinition","parameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"hash","nameLocation":"5037:4:14","nodeType":"VariableDeclaration","scope":2127,"src":"5029:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"v","nameLocation":"5049:1:14","nodeType":"VariableDeclaration","scope":2127,"src":"5043:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2067,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"r","nameLocation":"5060:1:14","nodeType":"VariableDeclaration","scope":2127,"src":"5052:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2072,"mutability":"mutable","name":"s","nameLocation":"5071:1:14","nodeType":"VariableDeclaration","scope":2127,"src":"5063:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:14"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2127,"src":"5097:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2127,"src":"5106:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2077,"nodeType":"UserDefinedTypeName","pathNode":{"id":2076,"name":"RecoverError","nameLocations":["5106:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"5106:12:14"},"referencedDeclaration":1869,"src":"5106:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:14"},"scope":2225,"src":"5009:1456:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"6692:138:14","statements":[{"assignments":[2142,2145],"declarations":[{"constant":false,"id":2142,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:14","nodeType":"VariableDeclaration","scope":2159,"src":"6703:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"error","nameLocation":"6735:5:14","nodeType":"VariableDeclaration","scope":2159,"src":"6722:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2144,"nodeType":"UserDefinedTypeName","pathNode":{"id":2143,"name":"RecoverError","nameLocations":["6722:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"6722:12:14"},"referencedDeclaration":1869,"src":"6722:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2152,"initialValue":{"arguments":[{"id":2147,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"6755:4:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2148,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"6761:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2149,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"6764:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2150,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6767:1:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2146,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1959,2033,2127],"referencedDeclaration":2127,"src":"6744:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1869_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:14"},{"expression":{"arguments":[{"id":2154,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"6791:5:14","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1869","typeString":"enum ECDSA.RecoverError"}],"id":2153,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"6779:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1869_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2156,"nodeType":"ExpressionStatement","src":"6779:18:14"},{"expression":{"id":2157,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"6814:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2140,"id":2158,"nodeType":"Return","src":"6807:16:14"}]},"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"6471:122:14","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:14","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"hash","nameLocation":"6623:4:14","nodeType":"VariableDeclaration","scope":2160,"src":"6615:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"v","nameLocation":"6635:1:14","nodeType":"VariableDeclaration","scope":2160,"src":"6629:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2131,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"r","nameLocation":"6646:1:14","nodeType":"VariableDeclaration","scope":2160,"src":"6638:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2136,"mutability":"mutable","name":"s","nameLocation":"6657:1:14","nodeType":"VariableDeclaration","scope":2160,"src":"6649:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:14"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"6683:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:14"},"scope":2225,"src":"6598:232:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2169,"nodeType":"Block","src":"7206:310:14","statements":[{"AST":{"nativeSrc":"7362:148:14","nodeType":"YulBlock","src":"7362:148:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7383:4:14","nodeType":"YulLiteral","src":"7383:4:14","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"7389:34:14","nodeType":"YulLiteral","src":"7389:34:14","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"7376:6:14","nodeType":"YulIdentifier","src":"7376:6:14"},"nativeSrc":"7376:48:14","nodeType":"YulFunctionCall","src":"7376:48:14"},"nativeSrc":"7376:48:14","nodeType":"YulExpressionStatement","src":"7376:48:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7444:4:14","nodeType":"YulLiteral","src":"7444:4:14","type":"","value":"0x1c"},{"name":"hash","nativeSrc":"7450:4:14","nodeType":"YulIdentifier","src":"7450:4:14"}],"functionName":{"name":"mstore","nativeSrc":"7437:6:14","nodeType":"YulIdentifier","src":"7437:6:14"},"nativeSrc":"7437:18:14","nodeType":"YulFunctionCall","src":"7437:18:14"},"nativeSrc":"7437:18:14","nodeType":"YulExpressionStatement","src":"7437:18:14"},{"nativeSrc":"7468:32:14","nodeType":"YulAssignment","src":"7468:32:14","value":{"arguments":[{"kind":"number","nativeSrc":"7489:4:14","nodeType":"YulLiteral","src":"7489:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"7495:4:14","nodeType":"YulLiteral","src":"7495:4:14","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"7479:9:14","nodeType":"YulIdentifier","src":"7479:9:14"},"nativeSrc":"7479:21:14","nodeType":"YulFunctionCall","src":"7479:21:14"},"variableNames":[{"name":"message","nativeSrc":"7468:7:14","nodeType":"YulIdentifier","src":"7468:7:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2163,"isOffset":false,"isSlot":false,"src":"7450:4:14","valueSize":1},{"declaration":2166,"isOffset":false,"isSlot":false,"src":"7468:7:14","valueSize":1}],"id":2168,"nodeType":"InlineAssembly","src":"7353:157:14"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"6836:279:14","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2170,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:14","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"hash","nameLocation":"7160:4:14","nodeType":"VariableDeclaration","scope":2170,"src":"7152:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:14"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"message","nameLocation":"7197:7:14","nodeType":"VariableDeclaration","scope":2170,"src":"7189:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:14"},"scope":2225,"src":"7120:396:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"7881:116:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2184,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"7976:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:14","memberName":"length","nodeType":"MemberAccess","src":"7976:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2182,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"7959:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1859_$","typeString":"type(library Strings)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:14","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1689,"src":"7959:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2187,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2173,"src":"7987:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2179,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2178,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2177,"id":2190,"nodeType":"Return","src":"7891:99:14"}]},"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"7522:274:14","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:14","nodeType":"FunctionDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"s","nameLocation":"7846:1:14","nodeType":"VariableDeclaration","scope":2192,"src":"7833:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2172,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:14"},"returnParameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2192,"src":"7872:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:14"},"scope":2225,"src":"7801:196:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2203,"nodeType":"Block","src":"8443:290:14","statements":[{"AST":{"nativeSrc":"8505:222:14","nodeType":"YulBlock","src":"8505:222:14","statements":[{"nativeSrc":"8519:22:14","nodeType":"YulVariableDeclaration","src":"8519:22:14","value":{"arguments":[{"kind":"number","nativeSrc":"8536:4:14","nodeType":"YulLiteral","src":"8536:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8530:5:14","nodeType":"YulIdentifier","src":"8530:5:14"},"nativeSrc":"8530:11:14","nodeType":"YulFunctionCall","src":"8530:11:14"},"variables":[{"name":"ptr","nativeSrc":"8523:3:14","nodeType":"YulTypedName","src":"8523:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8561:3:14","nodeType":"YulIdentifier","src":"8561:3:14"},{"hexValue":"1901","kind":"string","nativeSrc":"8566:10:14","nodeType":"YulLiteral","src":"8566:10:14","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"8554:6:14","nodeType":"YulIdentifier","src":"8554:6:14"},"nativeSrc":"8554:23:14","nodeType":"YulFunctionCall","src":"8554:23:14"},"nativeSrc":"8554:23:14","nodeType":"YulExpressionStatement","src":"8554:23:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8601:3:14","nodeType":"YulIdentifier","src":"8601:3:14"},{"kind":"number","nativeSrc":"8606:4:14","nodeType":"YulLiteral","src":"8606:4:14","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"8597:3:14","nodeType":"YulIdentifier","src":"8597:3:14"},"nativeSrc":"8597:14:14","nodeType":"YulFunctionCall","src":"8597:14:14"},{"name":"domainSeparator","nativeSrc":"8613:15:14","nodeType":"YulIdentifier","src":"8613:15:14"}],"functionName":{"name":"mstore","nativeSrc":"8590:6:14","nodeType":"YulIdentifier","src":"8590:6:14"},"nativeSrc":"8590:39:14","nodeType":"YulFunctionCall","src":"8590:39:14"},"nativeSrc":"8590:39:14","nodeType":"YulExpressionStatement","src":"8590:39:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8653:3:14","nodeType":"YulIdentifier","src":"8653:3:14"},{"kind":"number","nativeSrc":"8658:4:14","nodeType":"YulLiteral","src":"8658:4:14","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"8649:3:14","nodeType":"YulIdentifier","src":"8649:3:14"},"nativeSrc":"8649:14:14","nodeType":"YulFunctionCall","src":"8649:14:14"},{"name":"structHash","nativeSrc":"8665:10:14","nodeType":"YulIdentifier","src":"8665:10:14"}],"functionName":{"name":"mstore","nativeSrc":"8642:6:14","nodeType":"YulIdentifier","src":"8642:6:14"},"nativeSrc":"8642:34:14","nodeType":"YulFunctionCall","src":"8642:34:14"},"nativeSrc":"8642:34:14","nodeType":"YulExpressionStatement","src":"8642:34:14"},{"nativeSrc":"8689:28:14","nodeType":"YulAssignment","src":"8689:28:14","value":{"arguments":[{"name":"ptr","nativeSrc":"8707:3:14","nodeType":"YulIdentifier","src":"8707:3:14"},{"kind":"number","nativeSrc":"8712:4:14","nodeType":"YulLiteral","src":"8712:4:14","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"8697:9:14","nodeType":"YulIdentifier","src":"8697:9:14"},"nativeSrc":"8697:20:14","nodeType":"YulFunctionCall","src":"8697:20:14"},"variableNames":[{"name":"data","nativeSrc":"8689:4:14","nodeType":"YulIdentifier","src":"8689:4:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2200,"isOffset":false,"isSlot":false,"src":"8689:4:14","valueSize":1},{"declaration":2195,"isOffset":false,"isSlot":false,"src":"8613:15:14","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"8665:10:14","valueSize":1}],"id":2202,"nodeType":"InlineAssembly","src":"8496:231:14"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"8003:328:14","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:14","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:14","nodeType":"VariableDeclaration","scope":2204,"src":"8361:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:14","nodeType":"VariableDeclaration","scope":2204,"src":"8386:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:14"},"returnParameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"data","nameLocation":"8437:4:14","nodeType":"VariableDeclaration","scope":2204,"src":"8429:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:14"},"scope":2225,"src":"8336:397:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2223,"nodeType":"Block","src":"9048:80:14","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2218,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"9104:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2219,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"9115:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2215,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2214,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2213,"id":2222,"nodeType":"Return","src":"9058:63:14"}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"8739:193:14","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:14","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"validator","nameLocation":"8986:9:14","nodeType":"VariableDeclaration","scope":2224,"src":"8978:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2206,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"data","nameLocation":"9010:4:14","nodeType":"VariableDeclaration","scope":2224,"src":"8997:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2208,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:14"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2224,"src":"9039:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:14"},"scope":2225,"src":"8937:191:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2226,"src":"369:8761:14","usedErrors":[],"usedEvents":[]}],"src":"112:9019:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[2225],"EIP712":[2429],"IERC5267":[151],"Math":[3307],"ShortString":[1309],"ShortStrings":[1520],"SignedMath":[3412],"StorageSlot":[1630],"Strings":[1859]},"id":2430,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2227,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":2228,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2430,"sourceUnit":2226,"src":"138:21:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2430,"sourceUnit":1521,"src":"160:29:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2430,"sourceUnit":152,"src":"190:39:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2232,"name":"IERC5267","nameLocations":["1837:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":151,"src":"1837:8:15"},"id":2233,"nodeType":"InheritanceSpecifier","src":"1837:8:15"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"231:1577:15","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":2429,"linearizedBaseContracts":[2429,151],"name":"EIP712","nameLocation":"1827:6:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2235,"libraryName":{"id":2234,"name":"ShortStrings","nameLocations":["1858:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"1858:12:15"},"nodeType":"UsingForDirective","src":"1852:25:15"},{"constant":true,"id":2240,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:15","nodeType":"VariableDeclaration","scope":2429,"src":"1883:141:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2237,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2242,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:15","nodeType":"VariableDeclaration","scope":2429,"src":"2223:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2244,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:15","nodeType":"VariableDeclaration","scope":2429,"src":"2277:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2246,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:15","nodeType":"VariableDeclaration","scope":2429,"src":"2323:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2248,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:15","nodeType":"VariableDeclaration","scope":2429,"src":"2367:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2250,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:15","nodeType":"VariableDeclaration","scope":2429,"src":"2410:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2253,"mutability":"immutable","name":"_name","nameLocation":"2487:5:15","nodeType":"VariableDeclaration","scope":2429,"src":"2457:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"},"typeName":{"id":2252,"nodeType":"UserDefinedTypeName","pathNode":{"id":2251,"name":"ShortString","nameLocations":["2457:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"2457:11:15"},"referencedDeclaration":1309,"src":"2457:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2256,"mutability":"immutable","name":"_version","nameLocation":"2528:8:15","nodeType":"VariableDeclaration","scope":2429,"src":"2498:38:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"},"typeName":{"id":2255,"nodeType":"UserDefinedTypeName","pathNode":{"id":2254,"name":"ShortString","nameLocations":["2498:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"2498:11:15"},"referencedDeclaration":1309,"src":"2498:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2258,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:15","nodeType":"VariableDeclaration","scope":2429,"src":"2542:28:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2257,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2260,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:15","nodeType":"VariableDeclaration","scope":2429,"src":"2576:31:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2259,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2317,"nodeType":"Block","src":"3233:376:15","statements":[{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2268,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3243:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2271,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"3282:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2269,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"3251:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:15","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"3251:30:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1309_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"src":"3243:53:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"id":2274,"nodeType":"ExpressionStatement","src":"3243:53:15"},{"expression":{"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2275,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"3306:8:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2278,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"3351:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2276,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"3317:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:15","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"3317:33:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1309_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"src":"3306:62:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"id":2281,"nodeType":"ExpressionStatement","src":"3306:62:15"},{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2282,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"3378:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2286,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"3408:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2284,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:15","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2283,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2290,"nodeType":"ExpressionStatement","src":"3378:36:15"},{"expression":{"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2291,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"3424:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2295,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"3457:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2293,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:15","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2292,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2299,"nodeType":"ExpressionStatement","src":"3424:42:15"},{"expression":{"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2300,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3477:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2301,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2304,"nodeType":"ExpressionStatement","src":"3477:30:15"},{"expression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2305,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"3517:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2306,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3542:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2309,"nodeType":"ExpressionStatement","src":"3517:48:15"},{"expression":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2310,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"3575:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2313,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2429","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2429","typeString":"contract EIP712"}],"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2311,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:15","typeDescriptions":{}}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2316,"nodeType":"ExpressionStatement","src":"3575:27:15"}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"2614:559:15","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2318,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"name","nameLocation":"3204:4:15","nodeType":"VariableDeclaration","scope":2318,"src":"3190:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2262,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"version","nameLocation":"3224:7:15","nodeType":"VariableDeclaration","scope":2318,"src":"3210:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2264,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:15"},"returnParameters":{"id":2267,"nodeType":"ParameterList","parameters":[],"src":"3233:0:15"},"scope":2429,"src":"3178:431:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2343,"nodeType":"Block","src":"3757:200:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2326,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2429","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2429","typeString":"contract EIP712"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:15","typeDescriptions":{}}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2328,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"3788:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2330,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2332,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"3820:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2341,"nodeType":"Block","src":"3896:55:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2338,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3917:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2323,"id":2340,"nodeType":"Return","src":"3910:30:15"}]},"id":2342,"nodeType":"IfStatement","src":"3767:184:15","trueBody":{"id":2337,"nodeType":"Block","src":"3836:54:15","statements":[{"expression":{"id":2335,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"3857:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2323,"id":2336,"nodeType":"Return","src":"3850:29:15"}]}}]},"documentation":{"id":2319,"nodeType":"StructuredDocumentation","src":"3615:75:15","text":" @dev Returns the domain separator for the current chain."},"id":2344,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:15","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[],"src":"3722:2:15"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2344,"src":"3748:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:15"},"scope":2429,"src":"3695:262:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"4027:116:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2352,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4065:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2353,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"4077:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2354,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4090:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2355,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2359,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2429","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2429","typeString":"contract EIP712"}],"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2357,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:15","typeDescriptions":{}}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2350,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:15","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2349,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2348,"id":2363,"nodeType":"Return","src":"4037:99:15"}]},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:15","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[],"src":"3993:2:15"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"4018:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:15"},"scope":2429,"src":"3963:180:15","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2380,"nodeType":"Block","src":"4854:79:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2375,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"4893:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2377,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"4915:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2373,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4871:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2225_$","typeString":"type(library ECDSA)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:15","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"4871:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2372,"id":2379,"nodeType":"Return","src":"4864:62:15"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"4149:614:15","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:15","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:15","nodeType":"VariableDeclaration","scope":2381,"src":"4794:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:15"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"4845:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:15"},"scope":2429,"src":"4768:165:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[150],"body":{"id":2427,"nodeType":"Block","src":"5366:288:15","statements":[{"expression":{"components":[{"hexValue":"0f","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":2404,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"5454:13:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2402,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"5427:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:15","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1488,"src":"5427:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1309_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":2408,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"5512:16:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2406,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"5482:8:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1309","typeString":"ShortString"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:15","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1488,"src":"5482:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1309_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1309_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2410,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2414,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2429","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2429","typeString":"contract EIP712"}],"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:15","typeDescriptions":{}}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:15","typeDescriptions":{}}},"id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ArrayTypeName","src":"5625:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2425,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2400,"id":2426,"nodeType":"Return","src":"5376:271:15"}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"4939:77:15","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":2428,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:15","nodeType":"FunctionDefinition","overrides":{"id":2384,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:15"},"parameters":{"id":2383,"nodeType":"ParameterList","parameters":[],"src":"5042:2:15"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"fields","nameLocation":"5143:6:15","nodeType":"VariableDeclaration","scope":2428,"src":"5136:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2385,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"name","nameLocation":"5177:4:15","nodeType":"VariableDeclaration","scope":2428,"src":"5163:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2387,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"version","nameLocation":"5209:7:15","nodeType":"VariableDeclaration","scope":2428,"src":"5195:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2389,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2392,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:15","nodeType":"VariableDeclaration","scope":2428,"src":"5230:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2394,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:15","nodeType":"VariableDeclaration","scope":2428,"src":"5259:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"salt","nameLocation":"5306:4:15","nodeType":"VariableDeclaration","scope":2428,"src":"5298:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:15","nodeType":"VariableDeclaration","scope":2428,"src":"5324:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2398,"nodeType":"ArrayTypeName","src":"5324:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:15"},"scope":2429,"src":"5021:633:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2430,"src":"1809:3847:15","usedErrors":[1317,1319],"usedEvents":[131]}],"src":"113:5544:15"},"id":15},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2441]},"id":2442,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2431,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2432,"nodeType":"StructuredDocumentation","src":"125:279:16","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2441,"linearizedBaseContracts":[2441],"name":"IERC165","nameLocation":"415:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"429:340:16","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2440,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:16","nodeType":"FunctionDefinition","parameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:16","nodeType":"VariableDeclaration","scope":2440,"src":"801:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2434,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:16"},"returnParameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2440,"src":"844:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2437,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:16"},"scope":2441,"src":"774:76:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2442,"src":"405:447:16","usedErrors":[],"usedEvents":[]}],"src":"100:753:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3307]},"id":3308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2443,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"128:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3307,"linearizedBaseContracts":[3307],"name":"Math","nameLocation":"210:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2448,"members":[{"id":2445,"name":"Down","nameLocation":"245:4:17","nodeType":"EnumValue","src":"245:4:17"},{"id":2446,"name":"Up","nameLocation":"287:2:17","nodeType":"EnumValue","src":"287:2:17"},{"id":2447,"name":"Zero","nameLocation":"318:4:17","nodeType":"EnumValue","src":"318:4:17"}],"name":"Rounding","nameLocation":"226:8:17","nodeType":"EnumDefinition","src":"221:122:17"},{"body":{"id":2465,"nodeType":"Block","src":"480:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"497:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"501:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2462,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"509:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:17","trueExpression":{"id":2461,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"505:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2457,"id":2464,"nodeType":"Return","src":"490:20:17"}]},"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"349:59:17","text":" @dev Returns the largest of two numbers."},"id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:17","nodeType":"FunctionDefinition","parameters":{"id":2454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"a","nameLocation":"434:1:17","nodeType":"VariableDeclaration","scope":2466,"src":"426:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"b","nameLocation":"445:1:17","nodeType":"VariableDeclaration","scope":2466,"src":"437:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:17"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"471:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:17"},"scope":3307,"src":"413:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2483,"nodeType":"Block","src":"655:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"672:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"676:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"684:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:17","trueExpression":{"id":2479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"680:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2475,"id":2482,"nodeType":"Return","src":"665:20:17"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"523:60:17","text":" @dev Returns the smallest of two numbers."},"id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:17","nodeType":"FunctionDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"a","nameLocation":"609:1:17","nodeType":"VariableDeclaration","scope":2484,"src":"601:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"b","nameLocation":"620:1:17","nodeType":"VariableDeclaration","scope":2484,"src":"612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:17"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2484,"src":"646:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:17"},"scope":3307,"src":"588:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2506,"nodeType":"Block","src":"876:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"931:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"935:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"941:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2499,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2489,"src":"945:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2493,"id":2505,"nodeType":"Return","src":"923:28:17"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"698:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:17","nodeType":"FunctionDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"a","nameLocation":"830:1:17","nodeType":"VariableDeclaration","scope":2507,"src":"822:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"b","nameLocation":"841:1:17","nodeType":"VariableDeclaration","scope":2507,"src":"833:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:17"},"returnParameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2507,"src":"867:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:17"},"scope":3307,"src":"805:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2531,"nodeType":"Block","src":"1228:123:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"1316:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"1330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1339:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:17","trueExpression":{"hexValue":"30","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2516,"id":2530,"nodeType":"Return","src":"1309:35:17"}]},"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"964:188:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2532,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:17","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"a","nameLocation":"1182:1:17","nodeType":"VariableDeclaration","scope":2532,"src":"1174:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"b","nameLocation":"1193:1:17","nodeType":"VariableDeclaration","scope":2532,"src":"1185:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:17"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2532,"src":"1219:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:17"},"scope":3307,"src":"1157:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2654,"nodeType":"Block","src":"1765:4115:17","statements":[{"id":2653,"nodeType":"UncheckedBlock","src":"1775:4099:17","statements":[{"assignments":[2545],"declarations":[{"constant":false,"id":2545,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:17","nodeType":"VariableDeclaration","scope":2653,"src":"2096:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2546,"nodeType":"VariableDeclarationStatement","src":"2096:13:17"},{"assignments":[2548],"declarations":[{"constant":false,"id":2548,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:17","nodeType":"VariableDeclaration","scope":2653,"src":"2168:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2549,"nodeType":"VariableDeclarationStatement","src":"2168:13:17"},{"AST":{"nativeSrc":"2248:157:17","nodeType":"YulBlock","src":"2248:157:17","statements":[{"nativeSrc":"2266:30:17","nodeType":"YulVariableDeclaration","src":"2266:30:17","value":{"arguments":[{"name":"x","nativeSrc":"2283:1:17","nodeType":"YulIdentifier","src":"2283:1:17"},{"name":"y","nativeSrc":"2286:1:17","nodeType":"YulIdentifier","src":"2286:1:17"},{"arguments":[{"kind":"number","nativeSrc":"2293:1:17","nodeType":"YulLiteral","src":"2293:1:17","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2289:3:17","nodeType":"YulIdentifier","src":"2289:3:17"},"nativeSrc":"2289:6:17","nodeType":"YulFunctionCall","src":"2289:6:17"}],"functionName":{"name":"mulmod","nativeSrc":"2276:6:17","nodeType":"YulIdentifier","src":"2276:6:17"},"nativeSrc":"2276:20:17","nodeType":"YulFunctionCall","src":"2276:20:17"},"variables":[{"name":"mm","nativeSrc":"2270:2:17","nodeType":"YulTypedName","src":"2270:2:17","type":""}]},{"nativeSrc":"2313:18:17","nodeType":"YulAssignment","src":"2313:18:17","value":{"arguments":[{"name":"x","nativeSrc":"2326:1:17","nodeType":"YulIdentifier","src":"2326:1:17"},{"name":"y","nativeSrc":"2329:1:17","nodeType":"YulIdentifier","src":"2329:1:17"}],"functionName":{"name":"mul","nativeSrc":"2322:3:17","nodeType":"YulIdentifier","src":"2322:3:17"},"nativeSrc":"2322:9:17","nodeType":"YulFunctionCall","src":"2322:9:17"},"variableNames":[{"name":"prod0","nativeSrc":"2313:5:17","nodeType":"YulIdentifier","src":"2313:5:17"}]},{"nativeSrc":"2348:43:17","nodeType":"YulAssignment","src":"2348:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"2365:2:17","nodeType":"YulIdentifier","src":"2365:2:17"},{"name":"prod0","nativeSrc":"2369:5:17","nodeType":"YulIdentifier","src":"2369:5:17"}],"functionName":{"name":"sub","nativeSrc":"2361:3:17","nodeType":"YulIdentifier","src":"2361:3:17"},"nativeSrc":"2361:14:17","nodeType":"YulFunctionCall","src":"2361:14:17"},{"arguments":[{"name":"mm","nativeSrc":"2380:2:17","nodeType":"YulIdentifier","src":"2380:2:17"},{"name":"prod0","nativeSrc":"2384:5:17","nodeType":"YulIdentifier","src":"2384:5:17"}],"functionName":{"name":"lt","nativeSrc":"2377:2:17","nodeType":"YulIdentifier","src":"2377:2:17"},"nativeSrc":"2377:13:17","nodeType":"YulFunctionCall","src":"2377:13:17"}],"functionName":{"name":"sub","nativeSrc":"2357:3:17","nodeType":"YulIdentifier","src":"2357:3:17"},"nativeSrc":"2357:34:17","nodeType":"YulFunctionCall","src":"2357:34:17"},"variableNames":[{"name":"prod1","nativeSrc":"2348:5:17","nodeType":"YulIdentifier","src":"2348:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2545,"isOffset":false,"isSlot":false,"src":"2313:5:17","valueSize":1},{"declaration":2545,"isOffset":false,"isSlot":false,"src":"2369:5:17","valueSize":1},{"declaration":2545,"isOffset":false,"isSlot":false,"src":"2384:5:17","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"2348:5:17","valueSize":1},{"declaration":2535,"isOffset":false,"isSlot":false,"src":"2283:1:17","valueSize":1},{"declaration":2535,"isOffset":false,"isSlot":false,"src":"2326:1:17","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"2286:1:17","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"2329:1:17","valueSize":1}],"id":2550,"nodeType":"InlineAssembly","src":"2239:166:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"2486:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2559,"nodeType":"IfStatement","src":"2482:368:17","trueBody":{"id":2558,"nodeType":"Block","src":"2498:352:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2554,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2816:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2555,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2824:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2543,"id":2557,"nodeType":"Return","src":"2809:26:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2561,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"2960:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2562,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"2974:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2560,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2952:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2566,"nodeType":"ExpressionStatement","src":"2952:53:17"},{"assignments":[2568],"declarations":[{"constant":false,"id":2568,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:17","nodeType":"VariableDeclaration","scope":2653,"src":"3261:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2569,"nodeType":"VariableDeclarationStatement","src":"3261:17:17"},{"AST":{"nativeSrc":"3301:291:17","nodeType":"YulBlock","src":"3301:291:17","statements":[{"nativeSrc":"3370:38:17","nodeType":"YulAssignment","src":"3370:38:17","value":{"arguments":[{"name":"x","nativeSrc":"3390:1:17","nodeType":"YulIdentifier","src":"3390:1:17"},{"name":"y","nativeSrc":"3393:1:17","nodeType":"YulIdentifier","src":"3393:1:17"},{"name":"denominator","nativeSrc":"3396:11:17","nodeType":"YulIdentifier","src":"3396:11:17"}],"functionName":{"name":"mulmod","nativeSrc":"3383:6:17","nodeType":"YulIdentifier","src":"3383:6:17"},"nativeSrc":"3383:25:17","nodeType":"YulFunctionCall","src":"3383:25:17"},"variableNames":[{"name":"remainder","nativeSrc":"3370:9:17","nodeType":"YulIdentifier","src":"3370:9:17"}]},{"nativeSrc":"3490:41:17","nodeType":"YulAssignment","src":"3490:41:17","value":{"arguments":[{"name":"prod1","nativeSrc":"3503:5:17","nodeType":"YulIdentifier","src":"3503:5:17"},{"arguments":[{"name":"remainder","nativeSrc":"3513:9:17","nodeType":"YulIdentifier","src":"3513:9:17"},{"name":"prod0","nativeSrc":"3524:5:17","nodeType":"YulIdentifier","src":"3524:5:17"}],"functionName":{"name":"gt","nativeSrc":"3510:2:17","nodeType":"YulIdentifier","src":"3510:2:17"},"nativeSrc":"3510:20:17","nodeType":"YulFunctionCall","src":"3510:20:17"}],"functionName":{"name":"sub","nativeSrc":"3499:3:17","nodeType":"YulIdentifier","src":"3499:3:17"},"nativeSrc":"3499:32:17","nodeType":"YulFunctionCall","src":"3499:32:17"},"variableNames":[{"name":"prod1","nativeSrc":"3490:5:17","nodeType":"YulIdentifier","src":"3490:5:17"}]},{"nativeSrc":"3548:30:17","nodeType":"YulAssignment","src":"3548:30:17","value":{"arguments":[{"name":"prod0","nativeSrc":"3561:5:17","nodeType":"YulIdentifier","src":"3561:5:17"},{"name":"remainder","nativeSrc":"3568:9:17","nodeType":"YulIdentifier","src":"3568:9:17"}],"functionName":{"name":"sub","nativeSrc":"3557:3:17","nodeType":"YulIdentifier","src":"3557:3:17"},"nativeSrc":"3557:21:17","nodeType":"YulFunctionCall","src":"3557:21:17"},"variableNames":[{"name":"prod0","nativeSrc":"3548:5:17","nodeType":"YulIdentifier","src":"3548:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2539,"isOffset":false,"isSlot":false,"src":"3396:11:17","valueSize":1},{"declaration":2545,"isOffset":false,"isSlot":false,"src":"3524:5:17","valueSize":1},{"declaration":2545,"isOffset":false,"isSlot":false,"src":"3548:5:17","valueSize":1},{"declaration":2545,"isOffset":false,"isSlot":false,"src":"3561:5:17","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"3490:5:17","valueSize":1},{"declaration":2548,"isOffset":false,"isSlot":false,"src":"3503:5:17","valueSize":1},{"declaration":2568,"isOffset":false,"isSlot":false,"src":"3370:9:17","valueSize":1},{"declaration":2568,"isOffset":false,"isSlot":false,"src":"3513:9:17","valueSize":1},{"declaration":2568,"isOffset":false,"isSlot":false,"src":"3568:9:17","valueSize":1},{"declaration":2535,"isOffset":false,"isSlot":false,"src":"3390:1:17","valueSize":1},{"declaration":2537,"isOffset":false,"isSlot":false,"src":"3393:1:17","valueSize":1}],"id":2570,"nodeType":"InlineAssembly","src":"3292:300:17"},{"assignments":[2572],"declarations":[{"constant":false,"id":2572,"mutability":"mutable","name":"twos","nameLocation":"3907:4:17","nodeType":"VariableDeclaration","scope":2653,"src":"3899:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2580,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"3914:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:17","subExpression":{"id":2574,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"3930:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:17"},{"AST":{"nativeSrc":"3969:362:17","nodeType":"YulBlock","src":"3969:362:17","statements":[{"nativeSrc":"4034:37:17","nodeType":"YulAssignment","src":"4034:37:17","value":{"arguments":[{"name":"denominator","nativeSrc":"4053:11:17","nodeType":"YulIdentifier","src":"4053:11:17"},{"name":"twos","nativeSrc":"4066:4:17","nodeType":"YulIdentifier","src":"4066:4:17"}],"functionName":{"name":"div","nativeSrc":"4049:3:17","nodeType":"YulIdentifier","src":"4049:3:17"},"nativeSrc":"4049:22:17","nodeType":"YulFunctionCall","src":"4049:22:17"},"variableNames":[{"name":"denominator","nativeSrc":"4034:11:17","nodeType":"YulIdentifier","src":"4034:11:17"}]},{"nativeSrc":"4138:25:17","nodeType":"YulAssignment","src":"4138:25:17","value":{"arguments":[{"name":"prod0","nativeSrc":"4151:5:17","nodeType":"YulIdentifier","src":"4151:5:17"},{"name":"twos","nativeSrc":"4158:4:17","nodeType":"YulIdentifier","src":"4158:4:17"}],"functionName":{"name":"div","nativeSrc":"4147:3:17","nodeType":"YulIdentifier","src":"4147:3:17"},"nativeSrc":"4147:16:17","nodeType":"YulFunctionCall","src":"4147:16:17"},"variableNames":[{"name":"prod0","nativeSrc":"4138:5:17","nodeType":"YulIdentifier","src":"4138:5:17"}]},{"nativeSrc":"4278:39:17","nodeType":"YulAssignment","src":"4278:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4298:1:17","nodeType":"YulLiteral","src":"4298:1:17","type":"","value":"0"},{"name":"twos","nativeSrc":"4301:4:17","nodeType":"YulIdentifier","src":"4301:4:17"}],"functionName":{"name":"sub","nativeSrc":"4294:3:17","nodeType":"YulIdentifier","src":"4294:3:17"},"nativeSrc":"4294:12:17","nodeType":"YulFunctionCall","src":"4294:12:17"},{"name":"twos","nativeSrc":"4308:4:17","nodeType":"YulIdentifier","src":"4308:4:17"}],"functionName":{"name":"div","nativeSrc":"4290:3:17","nodeType":"YulIdentifier","src":"4290:3:17"},"nativeSrc":"4290:23:17","nodeType":"YulFunctionCall","src":"4290:23:17"},{"kind":"number","nativeSrc":"4315:1:17","nodeType":"YulLiteral","src":"4315:1:17","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4286:3:17","nodeType":"YulIdentifier","src":"4286:3:17"},"nativeSrc":"4286:31:17","nodeType":"YulFunctionCall","src":"4286:31:17"},"variableNames":[{"name":"twos","nativeSrc":"4278:4:17","nodeType":"YulIdentifier","src":"4278:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2539,"isOffset":false,"isSlot":false,"src":"4034:11:17","valueSize":1},{"declaration":2539,"isOffset":false,"isSlot":false,"src":"4053:11:17","valueSize":1},{"declaration":2545,"isOffset":false,"isSlot":false,"src":"4138:5:17","valueSize":1},{"declaration":2545,"isOffset":false,"isSlot":false,"src":"4151:5:17","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"4066:4:17","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"4158:4:17","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"4278:4:17","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"4301:4:17","valueSize":1},{"declaration":2572,"isOffset":false,"isSlot":false,"src":"4308:4:17","valueSize":1}],"id":2581,"nodeType":"InlineAssembly","src":"3960:371:17"},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2582,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"4397:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"4406:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2584,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"4414:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"4397:21:17"},{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:17","nodeType":"VariableDeclaration","scope":2653,"src":"4736:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2596,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2591,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"4759:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:17"},{"expression":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2597,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"4992:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2599,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"5007:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2600,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5021:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2604,"nodeType":"ExpressionStatement","src":"4992:36:17"},{"expression":{"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2605,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5061:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"5076:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2608,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5090:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2612,"nodeType":"ExpressionStatement","src":"5061:36:17"},{"expression":{"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2613,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5131:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2615,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"5146:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2616,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5160:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2620,"nodeType":"ExpressionStatement","src":"5131:36:17"},{"expression":{"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5201:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2623,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"5216:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2624,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2628,"nodeType":"ExpressionStatement","src":"5201:36:17"},{"expression":{"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"5286:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2632,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5300:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2636,"nodeType":"ExpressionStatement","src":"5271:36:17"},{"expression":{"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2637,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5342:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2539,"src":"5357:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2640,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5371:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2644,"nodeType":"ExpressionStatement","src":"5342:36:17"},{"expression":{"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"5812:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"5821:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5829:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2650,"nodeType":"ExpressionStatement","src":"5812:24:17"},{"expression":{"id":2651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"5857:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2543,"id":2652,"nodeType":"Return","src":"5850:13:17"}]}]},"documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"1357:305:17","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2655,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:17","nodeType":"FunctionDefinition","parameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"x","nameLocation":"1691:1:17","nodeType":"VariableDeclaration","scope":2655,"src":"1683:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2537,"mutability":"mutable","name":"y","nameLocation":"1702:1:17","nodeType":"VariableDeclaration","scope":2655,"src":"1694:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2539,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:17","nodeType":"VariableDeclaration","scope":2655,"src":"1705:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:17"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2542,"mutability":"mutable","name":"result","nameLocation":"1757:6:17","nodeType":"VariableDeclaration","scope":2655,"src":"1749:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:17"},"scope":3307,"src":"1667:4213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2698,"nodeType":"Block","src":"6122:189:17","statements":[{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"result","nameLocation":"6140:6:17","nodeType":"VariableDeclaration","scope":2698,"src":"6132:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2677,"initialValue":{"arguments":[{"id":2673,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"6156:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2674,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"6159:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2675,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"6162:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2672,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2655,2699],"referencedDeclaration":2655,"src":"6149:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"6188:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2679,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"6200:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2448_$","typeString":"type(enum Math.Rounding)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"6200:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"src":"6188:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2683,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"6222:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2684,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"6225:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2685,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"6228:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2682,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2695,"nodeType":"IfStatement","src":"6184:98:17","trueBody":{"id":2694,"nodeType":"Block","src":"6246:36:17","statements":[{"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6260:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2693,"nodeType":"ExpressionStatement","src":"6260:11:17"}]}},{"expression":{"id":2696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"6298:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2669,"id":2697,"nodeType":"Return","src":"6291:13:17"}]},"documentation":{"id":2656,"nodeType":"StructuredDocumentation","src":"5886:121:17","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2699,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:17","nodeType":"FunctionDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2658,"mutability":"mutable","name":"x","nameLocation":"6036:1:17","nodeType":"VariableDeclaration","scope":2699,"src":"6028:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2657,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2660,"mutability":"mutable","name":"y","nameLocation":"6047:1:17","nodeType":"VariableDeclaration","scope":2699,"src":"6039:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2662,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:17","nodeType":"VariableDeclaration","scope":2699,"src":"6050:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:17","nodeType":"VariableDeclaration","scope":2699,"src":"6071:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"typeName":{"id":2664,"nodeType":"UserDefinedTypeName","pathNode":{"id":2663,"name":"Rounding","nameLocations":["6071:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2448,"src":"6071:8:17"},"referencedDeclaration":2448,"src":"6071:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:17"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2699,"src":"6113:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:17"},"scope":3307,"src":"6012:299:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2810,"nodeType":"Block","src":"6587:1585:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"6601:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2713,"nodeType":"IfStatement","src":"6597:45:17","trueBody":{"id":2712,"nodeType":"Block","src":"6609:33:17","statements":[{"expression":{"hexValue":"30","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2706,"id":2711,"nodeType":"Return","src":"6623:8:17"}]}},{"assignments":[2715],"declarations":[{"constant":false,"id":2715,"mutability":"mutable","name":"result","nameLocation":"7329:6:17","nodeType":"VariableDeclaration","scope":2810,"src":"7321:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2724,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7349:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2979,3015],"referencedDeclaration":2979,"src":"7344:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:17"},{"id":2809,"nodeType":"UncheckedBlock","src":"7758:408:17","statements":[{"expression":{"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7782:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7792:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7801:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7805:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2735,"nodeType":"ExpressionStatement","src":"7782:35:17"},{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7831:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7841:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7850:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7854:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ExpressionStatement","src":"7831:35:17"},{"expression":{"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7880:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7890:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7899:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7903:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2757,"nodeType":"ExpressionStatement","src":"7880:35:17"},{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7929:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7939:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7948:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7952:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"7929:35:17"},{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7978:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7988:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7997:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2772,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8001:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"7978:35:17"},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8027:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8037:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"8046:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8050:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"8027:35:17"},{"expression":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8076:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8086:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"8095:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8099:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2801,"nodeType":"ExpressionStatement","src":"8076:35:17"},{"expression":{"arguments":[{"id":2803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8136:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"8144:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8148:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2802,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"8132:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2706,"id":2808,"nodeType":"Return","src":"8125:30:17"}]}]},"documentation":{"id":2700,"nodeType":"StructuredDocumentation","src":"6317:208:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2811,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:17","nodeType":"FunctionDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"a","nameLocation":"6552:1:17","nodeType":"VariableDeclaration","scope":2811,"src":"6544:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:17"},"returnParameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2811,"src":"6578:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:17"},"scope":3307,"src":"6530:1642:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2846,"nodeType":"Block","src":"8348:161:17","statements":[{"id":2845,"nodeType":"UncheckedBlock","src":"8358:145:17","statements":[{"assignments":[2823],"declarations":[{"constant":false,"id":2823,"mutability":"mutable","name":"result","nameLocation":"8390:6:17","nodeType":"VariableDeclaration","scope":2845,"src":"8382:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2827,"initialValue":{"arguments":[{"id":2825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"8404:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2824,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2811,2847],"referencedDeclaration":2811,"src":"8399:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"8427:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"8437:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2830,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"8449:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2448_$","typeString":"type(enum Math.Rounding)"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"8449:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"src":"8437:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"8464:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"8473:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"8482:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:17","trueExpression":{"hexValue":"31","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2821,"id":2844,"nodeType":"Return","src":"8420:72:17"}]}]},"documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"8178:89:17","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:17","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"a","nameLocation":"8294:1:17","nodeType":"VariableDeclaration","scope":2847,"src":"8286:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:17","nodeType":"VariableDeclaration","scope":2847,"src":"8297:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"typeName":{"id":2816,"nodeType":"UserDefinedTypeName","pathNode":{"id":2815,"name":"Rounding","nameLocations":["8297:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2448,"src":"8297:8:17"},"referencedDeclaration":2448,"src":"8297:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:17"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2847,"src":"8339:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:17"},"scope":3307,"src":"8272:237:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2978,"nodeType":"Block","src":"8694:922:17","statements":[{"assignments":[2856],"declarations":[{"constant":false,"id":2856,"mutability":"mutable","name":"result","nameLocation":"8712:6:17","nodeType":"VariableDeclaration","scope":2978,"src":"8704:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2858,"initialValue":{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:17"},{"id":2975,"nodeType":"UncheckedBlock","src":"8732:855:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"8760:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2873,"nodeType":"IfStatement","src":"8756:99:17","trueBody":{"id":2872,"nodeType":"Block","src":"8778:77:17","statements":[{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"8796:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"8796:13:17"},{"expression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"8827:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2871,"nodeType":"ExpressionStatement","src":"8827:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"8872:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2888,"nodeType":"IfStatement","src":"8868:96:17","trueBody":{"id":2887,"nodeType":"Block","src":"8889:75:17","statements":[{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"8907:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2882,"nodeType":"ExpressionStatement","src":"8907:12:17"},{"expression":{"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"8937:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2886,"nodeType":"ExpressionStatement","src":"8937:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"8981:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2903,"nodeType":"IfStatement","src":"8977:96:17","trueBody":{"id":2902,"nodeType":"Block","src":"8998:75:17","statements":[{"expression":{"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9016:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2897,"nodeType":"ExpressionStatement","src":"9016:12:17"},{"expression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9046:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2901,"nodeType":"ExpressionStatement","src":"9046:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9090:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2918,"nodeType":"IfStatement","src":"9086:96:17","trueBody":{"id":2917,"nodeType":"Block","src":"9107:75:17","statements":[{"expression":{"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9125:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2912,"nodeType":"ExpressionStatement","src":"9125:12:17"},{"expression":{"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2913,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9155:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2916,"nodeType":"ExpressionStatement","src":"9155:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9199:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2933,"nodeType":"IfStatement","src":"9195:93:17","trueBody":{"id":2932,"nodeType":"Block","src":"9215:73:17","statements":[{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9233:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"nodeType":"ExpressionStatement","src":"9233:11:17"},{"expression":{"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9262:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2931,"nodeType":"ExpressionStatement","src":"9262:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9305:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2948,"nodeType":"IfStatement","src":"9301:93:17","trueBody":{"id":2947,"nodeType":"Block","src":"9321:73:17","statements":[{"expression":{"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9339:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2942,"nodeType":"ExpressionStatement","src":"9339:11:17"},{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9368:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2946,"nodeType":"ExpressionStatement","src":"9368:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9411:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2963,"nodeType":"IfStatement","src":"9407:93:17","trueBody":{"id":2962,"nodeType":"Block","src":"9427:73:17","statements":[{"expression":{"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9445:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2957,"nodeType":"ExpressionStatement","src":"9445:11:17"},{"expression":{"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9474:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2961,"nodeType":"ExpressionStatement","src":"9474:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"9517:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"IfStatement","src":"9513:64:17","trueBody":{"id":2973,"nodeType":"Block","src":"9533:44:17","statements":[{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9551:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"9551:11:17"}]}}]},{"expression":{"id":2976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9603:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2854,"id":2977,"nodeType":"Return","src":"9596:13:17"}]},"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"8515:113:17","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2979,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:17","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"value","nameLocation":"8655:5:17","nodeType":"VariableDeclaration","scope":2979,"src":"8647:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:17"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2979,"src":"8685:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:17"},"scope":3307,"src":"8633:983:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3014,"nodeType":"Block","src":"9849:165:17","statements":[{"id":3013,"nodeType":"UncheckedBlock","src":"9859:149:17","statements":[{"assignments":[2991],"declarations":[{"constant":false,"id":2991,"mutability":"mutable","name":"result","nameLocation":"9891:6:17","nodeType":"VariableDeclaration","scope":3013,"src":"9883:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2995,"initialValue":{"arguments":[{"id":2993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"9905:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2992,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2979,3015],"referencedDeclaration":2979,"src":"9900:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"9932:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"9942:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2998,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"9954:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2448_$","typeString":"type(enum Math.Rounding)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"9954:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"src":"9942:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"9974:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"9983:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:17","trueExpression":{"hexValue":"31","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2989,"id":3012,"nodeType":"Return","src":"9925:72:17"}]}]},"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"9622:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3015,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:17","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"value","nameLocation":"9791:5:17","nodeType":"VariableDeclaration","scope":3015,"src":"9783:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:17","nodeType":"VariableDeclaration","scope":3015,"src":"9798:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"typeName":{"id":2984,"nodeType":"UserDefinedTypeName","pathNode":{"id":2983,"name":"Rounding","nameLocations":["9798:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2448,"src":"9798:8:17"},"referencedDeclaration":2448,"src":"9798:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:17"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3015,"src":"9840:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:17"},"scope":3307,"src":"9769:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3143,"nodeType":"Block","src":"10201:854:17","statements":[{"assignments":[3024],"declarations":[{"constant":false,"id":3024,"mutability":"mutable","name":"result","nameLocation":"10219:6:17","nodeType":"VariableDeclaration","scope":3143,"src":"10211:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3026,"initialValue":{"hexValue":"30","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:17"},{"id":3140,"nodeType":"UncheckedBlock","src":"10239:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10267:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3043,"nodeType":"IfStatement","src":"10263:103:17","trueBody":{"id":3042,"nodeType":"Block","src":"10286:80:17","statements":[{"expression":{"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10304:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3037,"nodeType":"ExpressionStatement","src":"10304:17:17"},{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10339:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3041,"nodeType":"ExpressionStatement","src":"10339:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10383:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"10379:103:17","trueBody":{"id":3059,"nodeType":"Block","src":"10402:80:17","statements":[{"expression":{"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10420:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3054,"nodeType":"ExpressionStatement","src":"10420:17:17"},{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10455:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3058,"nodeType":"ExpressionStatement","src":"10455:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10499:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"nodeType":"IfStatement","src":"10495:103:17","trueBody":{"id":3076,"nodeType":"Block","src":"10518:80:17","statements":[{"expression":{"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10536:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3071,"nodeType":"ExpressionStatement","src":"10536:17:17"},{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10571:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"10571:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10615:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3094,"nodeType":"IfStatement","src":"10611:100:17","trueBody":{"id":3093,"nodeType":"Block","src":"10633:78:17","statements":[{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10651:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3088,"nodeType":"ExpressionStatement","src":"10651:16:17"},{"expression":{"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10685:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3092,"nodeType":"ExpressionStatement","src":"10685:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10728:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3111,"nodeType":"IfStatement","src":"10724:100:17","trueBody":{"id":3110,"nodeType":"Block","src":"10746:78:17","statements":[{"expression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10764:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3105,"nodeType":"ExpressionStatement","src":"10764:16:17"},{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10798:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"nodeType":"ExpressionStatement","src":"10798:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10841:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3128,"nodeType":"IfStatement","src":"10837:100:17","trueBody":{"id":3127,"nodeType":"Block","src":"10859:78:17","statements":[{"expression":{"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10877:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3122,"nodeType":"ExpressionStatement","src":"10877:16:17"},{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10911:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3126,"nodeType":"ExpressionStatement","src":"10911:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"10954:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3139,"nodeType":"IfStatement","src":"10950:66:17","trueBody":{"id":3138,"nodeType":"Block","src":"10972:44:17","statements":[{"expression":{"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"10990:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3137,"nodeType":"ExpressionStatement","src":"10990:11:17"}]}}]},{"expression":{"id":3141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"11042:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3022,"id":3142,"nodeType":"Return","src":"11035:13:17"}]},"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"10020:114:17","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3144,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:17","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"value","nameLocation":"10162:5:17","nodeType":"VariableDeclaration","scope":3144,"src":"10154:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:17"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3144,"src":"10192:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:17"},"scope":3307,"src":"10139:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3179,"nodeType":"Block","src":"11290:167:17","statements":[{"id":3178,"nodeType":"UncheckedBlock","src":"11300:151:17","statements":[{"assignments":[3156],"declarations":[{"constant":false,"id":3156,"mutability":"mutable","name":"result","nameLocation":"11332:6:17","nodeType":"VariableDeclaration","scope":3178,"src":"11324:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3160,"initialValue":{"arguments":[{"id":3158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"11347:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3157,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3144,3180],"referencedDeclaration":3144,"src":"11341:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"11374:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3162,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"11384:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3163,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"11396:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2448_$","typeString":"type(enum Math.Rounding)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"11396:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"src":"11384:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"11417:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"11426:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:17","trueExpression":{"hexValue":"31","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3175,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3154,"id":3177,"nodeType":"Return","src":"11367:73:17"}]}]},"documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"11061:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3180,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:17","nodeType":"FunctionDefinition","parameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"value","nameLocation":"11232:5:17","nodeType":"VariableDeclaration","scope":3180,"src":"11224:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:17","nodeType":"VariableDeclaration","scope":3180,"src":"11239:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"typeName":{"id":3149,"nodeType":"UserDefinedTypeName","pathNode":{"id":3148,"name":"Rounding","nameLocations":["11239:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2448,"src":"11239:8:17"},"referencedDeclaration":2448,"src":"11239:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:17"},"returnParameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3180,"src":"11281:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:17"},"scope":3307,"src":"11209:248:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3266,"nodeType":"Block","src":"11771:600:17","statements":[{"assignments":[3189],"declarations":[{"constant":false,"id":3189,"mutability":"mutable","name":"result","nameLocation":"11789:6:17","nodeType":"VariableDeclaration","scope":3266,"src":"11781:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3191,"initialValue":{"hexValue":"30","id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:17"},{"id":3263,"nodeType":"UncheckedBlock","src":"11809:533:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"11837:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"IfStatement","src":"11833:98:17","trueBody":{"id":3205,"nodeType":"Block","src":"11855:76:17","statements":[{"expression":{"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"11873:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3200,"nodeType":"ExpressionStatement","src":"11873:13:17"},{"expression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"11904:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3204,"nodeType":"ExpressionStatement","src":"11904:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"11948:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3221,"nodeType":"IfStatement","src":"11944:95:17","trueBody":{"id":3220,"nodeType":"Block","src":"11965:74:17","statements":[{"expression":{"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"11983:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3215,"nodeType":"ExpressionStatement","src":"11983:12:17"},{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"12013:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"12013:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"12056:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"12052:95:17","trueBody":{"id":3235,"nodeType":"Block","src":"12073:74:17","statements":[{"expression":{"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"12091:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3230,"nodeType":"ExpressionStatement","src":"12091:12:17"},{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"12121:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3234,"nodeType":"ExpressionStatement","src":"12121:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"12164:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3251,"nodeType":"IfStatement","src":"12160:95:17","trueBody":{"id":3250,"nodeType":"Block","src":"12181:74:17","statements":[{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"12199:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3245,"nodeType":"ExpressionStatement","src":"12199:12:17"},{"expression":{"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"12229:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3249,"nodeType":"ExpressionStatement","src":"12229:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"12272:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3262,"nodeType":"IfStatement","src":"12268:64:17","trueBody":{"id":3261,"nodeType":"Block","src":"12288:44:17","statements":[{"expression":{"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"12306:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3260,"nodeType":"ExpressionStatement","src":"12306:11:17"}]}}]},{"expression":{"id":3264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"12358:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3187,"id":3265,"nodeType":"Return","src":"12351:13:17"}]},"documentation":{"id":3181,"nodeType":"StructuredDocumentation","src":"11463:240:17","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3267,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:17","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"value","nameLocation":"11732:5:17","nodeType":"VariableDeclaration","scope":3267,"src":"11724:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:17"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3267,"src":"11762:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:17"},"scope":3307,"src":"11708:663:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3305,"nodeType":"Block","src":"12608:174:17","statements":[{"id":3304,"nodeType":"UncheckedBlock","src":"12618:158:17","statements":[{"assignments":[3279],"declarations":[{"constant":false,"id":3279,"mutability":"mutable","name":"result","nameLocation":"12650:6:17","nodeType":"VariableDeclaration","scope":3304,"src":"12642:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3283,"initialValue":{"arguments":[{"id":3281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"12666:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3280,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3267,3306],"referencedDeclaration":3267,"src":"12659:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3284,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"12693:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"12703:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3286,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"12715:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2448_$","typeString":"type(enum Math.Rounding)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2446,"src":"12715:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"src":"12703:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"12736:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"12751:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:17","trueExpression":{"hexValue":"31","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3277,"id":3303,"nodeType":"Return","src":"12686:79:17"}]}]},"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"12377:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3306,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:17","nodeType":"FunctionDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"value","nameLocation":"12550:5:17","nodeType":"VariableDeclaration","scope":3306,"src":"12542:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:17","nodeType":"VariableDeclaration","scope":3306,"src":"12557:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"},"typeName":{"id":3272,"nodeType":"UserDefinedTypeName","pathNode":{"id":3271,"name":"Rounding","nameLocations":["12557:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2448,"src":"12557:8:17"},"referencedDeclaration":2448,"src":"12557:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2448","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:17"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3306,"src":"12599:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:17"},"scope":3307,"src":"12526:256:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3308,"src":"202:12582:17","usedErrors":[],"usedEvents":[]}],"src":"103:12682:17"},"id":17},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3412]},"id":3413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3309,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"134:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3412,"linearizedBaseContracts":[3412],"name":"SignedMath","nameLocation":"223:10:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3327,"nodeType":"Block","src":"375:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"392:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"396:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"404:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:18","trueExpression":{"id":3323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"400:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3319,"id":3326,"nodeType":"Return","src":"385:20:18"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"240:66:18","text":" @dev Returns the largest of two signed numbers."},"id":3328,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:18","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"a","nameLocation":"331:1:18","nodeType":"VariableDeclaration","scope":3328,"src":"324:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3312,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"b","nameLocation":"341:1:18","nodeType":"VariableDeclaration","scope":3328,"src":"334:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3314,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:18"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3328,"src":"367:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3317,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:18"},"scope":3412,"src":"311:101:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"554:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"571:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"575:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3342,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"583:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:18","trueExpression":{"id":3341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"579:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3337,"id":3344,"nodeType":"Return","src":"564:20:18"}]},"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"418:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:18","nodeType":"FunctionDefinition","parameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"a","nameLocation":"510:1:18","nodeType":"VariableDeclaration","scope":3346,"src":"503:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3330,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"b","nameLocation":"520:1:18","nodeType":"VariableDeclaration","scope":3346,"src":"513:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3332,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:18"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"546:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3335,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:18"},"scope":3412,"src":"490:101:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3389,"nodeType":"Block","src":"796:162:18","statements":[{"assignments":[3357],"declarations":[{"constant":false,"id":3357,"mutability":"mutable","name":"x","nameLocation":"865:1:18","nodeType":"VariableDeclaration","scope":3389,"src":"858:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3356,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3370,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"870:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"874:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"881:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"885:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"910:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3376,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3357,"src":"930:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:18","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3372,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:18","typeDescriptions":{}}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"944:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"948:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3355,"id":3388,"nodeType":"Return","src":"903:48:18"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"597:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3390,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:18","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"a","nameLocation":"752:1:18","nodeType":"VariableDeclaration","scope":3390,"src":"745:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3348,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"b","nameLocation":"762:1:18","nodeType":"VariableDeclaration","scope":3390,"src":"755:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3350,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:18"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3390,"src":"788:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3353,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:18"},"scope":3412,"src":"728:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3410,"nodeType":"Block","src":"1102:158:18","statements":[{"id":3409,"nodeType":"UncheckedBlock","src":"1112:142:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1227:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:18","subExpression":{"id":3404,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1241:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:18","trueExpression":{"id":3403,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"1236:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:18","typeDescriptions":{}}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3397,"id":3408,"nodeType":"Return","src":"1212:31:18"}]}]},"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"964:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3411,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:18","nodeType":"FunctionDefinition","parameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"n","nameLocation":"1067:1:18","nodeType":"VariableDeclaration","scope":3411,"src":"1060:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3392,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:18"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3411,"src":"1093:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:18"},"scope":3412,"src":"1047:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3413,"src":"215:1047:18","usedErrors":[],"usedEvents":[]}],"src":"109:1154:18"},"id":18},"contracts/AssetTransferAgent.sol":{"ast":{"absolutePath":"contracts/AssetTransferAgent.sol","exportedSymbols":{"Address":[1274],"AssetTransferAgent":[3569],"Context":[1304],"IAssetTransferAgent":[4955],"IERC1155":[338],"IERC165":[2441],"IERC20":[416],"IERC20Permit":[452],"IERC721":[944],"Ownable":[112],"SafeERC20":[828]},"id":3570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3414,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3415,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3570,"sourceUnit":417,"src":"58:56:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":3416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3570,"sourceUnit":945,"src":"115:58:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":3417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3570,"sourceUnit":829,"src":"174:65:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":3418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3570,"sourceUnit":339,"src":"240:60:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3570,"sourceUnit":113,"src":"301:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAssetTransferAgent.sol","file":"./interfaces/IAssetTransferAgent.sol","id":3420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3570,"sourceUnit":4956,"src":"354:46:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3421,"name":"IAssetTransferAgent","nameLocations":["433:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":4955,"src":"433:19:19"},"id":3422,"nodeType":"InheritanceSpecifier","src":"433:19:19"},{"baseName":{"id":3423,"name":"Ownable","nameLocations":["454:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"454:7:19"},"id":3424,"nodeType":"InheritanceSpecifier","src":"454:7:19"}],"canonicalName":"AssetTransferAgent","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3569,"linearizedBaseContracts":[3569,112,1304,4955],"name":"AssetTransferAgent","nameLocation":"411:18:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3428,"libraryName":{"id":3425,"name":"SafeERC20","nameLocations":["474:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":828,"src":"474:9:19"},"nodeType":"UsingForDirective","src":"468:27:19","typeName":{"id":3427,"nodeType":"UserDefinedTypeName","pathNode":{"id":3426,"name":"IERC20","nameLocations":["488:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":416,"src":"488:6:19"},"referencedDeclaration":416,"src":"488:6:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"abc8c7af","id":3430,"mutability":"mutable","name":"marketplace","nameLocation":"516:11:19","nodeType":"VariableDeclaration","scope":3569,"src":"501:26:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3429,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":3441,"nodeType":"Block","src":"561:91:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"579:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"583:6:19","memberName":"sender","nodeType":"MemberAccess","src":"579:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3435,"name":"marketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"593:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"579:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206d61726b6574706c6163652063616e2063616c6c","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"606:27:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_db29d3c718ea82d9a50373dd8ed8c71c0badae31930afe8d91f7e128389f0f51","typeString":"literal_string \"Only marketplace can call\""},"value":"Only marketplace can call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db29d3c718ea82d9a50373dd8ed8c71c0badae31930afe8d91f7e128389f0f51","typeString":"literal_string \"Only marketplace can call\""}],"id":3432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"571:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3439,"nodeType":"ExpressionStatement","src":"571:63:19"},{"id":3440,"nodeType":"PlaceholderStatement","src":"644:1:19"}]},"id":3442,"name":"onlyMarketplace","nameLocation":"543:15:19","nodeType":"ModifierDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[],"src":"558:2:19"},"src":"534:118:19","virtual":false,"visibility":"internal"},{"body":{"id":3445,"nodeType":"Block","src":"672:2:19","statements":[]},"id":3446,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[],"src":"669:2:19"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[],"src":"672:0:19"},"scope":3569,"src":"658:16:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3467,"nodeType":"Block","src":"745:119:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3454,"name":"_marketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"763:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"787:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"779:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3455,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:19","typeDescriptions":{}}},"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"779:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"763:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d61726b6574706c6163652061646472657373","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"791:29:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6f4e0dccc4618f574a5c2442a8adad54a1c73d7a0a902e9d51cc94e37fc218f","typeString":"literal_string \"Invalid marketplace address\""},"value":"Invalid marketplace address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6f4e0dccc4618f574a5c2442a8adad54a1c73d7a0a902e9d51cc94e37fc218f","typeString":"literal_string \"Invalid marketplace address\""}],"id":3453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"755:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"755:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3462,"nodeType":"ExpressionStatement","src":"755:66:19"},{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"marketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"831:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3464,"name":"_marketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"845:12:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"831:26:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3466,"nodeType":"ExpressionStatement","src":"831:26:19"}]},"functionSelector":"73ad6c2d","id":3468,"implemented":true,"kind":"function","modifiers":[{"id":3451,"kind":"modifierInvocation","modifierName":{"id":3450,"name":"onlyOwner","nameLocations":["735:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"735:9:19"},"nodeType":"ModifierInvocation","src":"735:9:19"}],"name":"setMarketplace","nameLocation":"689:14:19","nodeType":"FunctionDefinition","parameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"_marketplace","nameLocation":"712:12:19","nodeType":"VariableDeclaration","scope":3468,"src":"704:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"704:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"703:22:19"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[],"src":"745:0:19"},"scope":3569,"src":"680:184:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4928],"body":{"id":3498,"nodeType":"Block","src":"1022:121:19","statements":[{"expression":{"arguments":[{"id":3486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"1063:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3487,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"1069:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3488,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"1073:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3483,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"1039:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3482,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1032:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$416_$","typeString":"type(contract IERC20)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1032:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$416","typeString":"contract IERC20"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1046:16:19","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":512,"src":"1032:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$416_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$416_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1032:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3490,"nodeType":"ExpressionStatement","src":"1032:48:19"},{"eventCall":{"arguments":[{"id":3492,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"1112:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3493,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"1119:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3494,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"1125:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3495,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"1129:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3491,"name":"ERC20Transferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"1095:16:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1095:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3497,"nodeType":"EmitStatement","src":"1090:46:19"}]},"functionSelector":"da3e8ce4","id":3499,"implemented":true,"kind":"function","modifiers":[{"id":3480,"kind":"modifierInvocation","modifierName":{"id":3479,"name":"onlyMarketplace","nameLocations":["1006:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"1006:15:19"},"nodeType":"ModifierInvocation","src":"1006:15:19"}],"name":"transferERC20","nameLocation":"879:13:19","nodeType":"FunctionDefinition","overrides":{"id":3478,"nodeType":"OverrideSpecifier","overrides":[],"src":"997:8:19"},"parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"token","nameLocation":"910:5:19","nodeType":"VariableDeclaration","scope":3499,"src":"902:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3469,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"from","nameLocation":"933:4:19","nodeType":"VariableDeclaration","scope":3499,"src":"925:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"to","nameLocation":"955:2:19","nodeType":"VariableDeclaration","scope":3499,"src":"947:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3473,"name":"address","nodeType":"ElementaryTypeName","src":"947:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"amount","nameLocation":"975:6:19","nodeType":"VariableDeclaration","scope":3499,"src":"967:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"967:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"892:95:19"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[],"src":"1022:0:19"},"scope":3569,"src":"870:273:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4939],"body":{"id":3529,"nodeType":"Block","src":"1303:125:19","statements":[{"expression":{"arguments":[{"id":3517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"1345:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1351:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"1355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3514,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"1321:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3513,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"1313:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$944_$","typeString":"type(contract IERC721)"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1313:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$944","typeString":"contract IERC721"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1328:16:19","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":899,"src":"1313:31:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1313:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3521,"nodeType":"ExpressionStatement","src":"1313:50:19"},{"eventCall":{"arguments":[{"id":3523,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"1396:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3524,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"1403:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3525,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"1409:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3526,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"1413:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3522,"name":"ERC721Transferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"1378:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1378:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"EmitStatement","src":"1373:48:19"}]},"functionSelector":"789f93f6","id":3530,"implemented":true,"kind":"function","modifiers":[{"id":3511,"kind":"modifierInvocation","modifierName":{"id":3510,"name":"onlyMarketplace","nameLocations":["1287:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"1287:15:19"},"nodeType":"ModifierInvocation","src":"1287:15:19"}],"name":"transferERC721","nameLocation":"1158:14:19","nodeType":"FunctionDefinition","overrides":{"id":3509,"nodeType":"OverrideSpecifier","overrides":[],"src":"1278:8:19"},"parameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"token","nameLocation":"1190:5:19","nodeType":"VariableDeclaration","scope":3530,"src":"1182:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3500,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"from","nameLocation":"1213:4:19","nodeType":"VariableDeclaration","scope":3530,"src":"1205:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3502,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"to","nameLocation":"1235:2:19","nodeType":"VariableDeclaration","scope":3530,"src":"1227:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3504,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3507,"mutability":"mutable","name":"tokenId","nameLocation":"1255:7:19","nodeType":"VariableDeclaration","scope":3530,"src":"1247:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1172:96:19"},"returnParameters":{"id":3512,"nodeType":"ParameterList","parameters":[],"src":"1303:0:19"},"scope":3569,"src":"1149:279:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[4954],"body":{"id":3567,"nodeType":"Block","src":"1637:139:19","statements":[{"expression":{"arguments":[{"id":3552,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"1680:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3553,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"1686:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3554,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"1690:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3555,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"1694:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3556,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"1702:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":3549,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1656:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3548,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"1647:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$338_$","typeString":"type(contract IERC1155)"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1647:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$338","typeString":"contract IERC1155"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1663:16:19","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":321,"src":"1647:32:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory) external"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1647:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3558,"nodeType":"ExpressionStatement","src":"1647:60:19"},{"eventCall":{"arguments":[{"id":3560,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"1741:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3561,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"1748:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"1754:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3563,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"1758:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3564,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"1762:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3559,"name":"ERC1155Transferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"1722:18:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3566,"nodeType":"EmitStatement","src":"1717:52:19"}]},"functionSelector":"eae787dc","id":3568,"implemented":true,"kind":"function","modifiers":[{"id":3546,"kind":"modifierInvocation","modifierName":{"id":3545,"name":"onlyMarketplace","nameLocations":["1621:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":3442,"src":"1621:15:19"},"nodeType":"ModifierInvocation","src":"1621:15:19"}],"name":"transferERC1155","nameLocation":"1443:15:19","nodeType":"FunctionDefinition","overrides":{"id":3544,"nodeType":"OverrideSpecifier","overrides":[],"src":"1612:8:19"},"parameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"token","nameLocation":"1476:5:19","nodeType":"VariableDeclaration","scope":3568,"src":"1468:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3531,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3534,"mutability":"mutable","name":"from","nameLocation":"1499:4:19","nodeType":"VariableDeclaration","scope":3568,"src":"1491:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3533,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"to","nameLocation":"1521:2:19","nodeType":"VariableDeclaration","scope":3568,"src":"1513:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3535,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3538,"mutability":"mutable","name":"id","nameLocation":"1541:2:19","nodeType":"VariableDeclaration","scope":3568,"src":"1533:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"amount","nameLocation":"1561:6:19","nodeType":"VariableDeclaration","scope":3568,"src":"1553:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"1553:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"data","nameLocation":"1592:4:19","nodeType":"VariableDeclaration","scope":3568,"src":"1577:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3541,"name":"bytes","nodeType":"ElementaryTypeName","src":"1577:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1458:144:19"},"returnParameters":{"id":3547,"nodeType":"ParameterList","parameters":[],"src":"1637:0:19"},"scope":3569,"src":"1434:342:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3570,"src":"402:1376:19","usedErrors":[],"usedEvents":[13,4881,4891,4903,4917]}],"src":"32:1747:19"},"id":19},"contracts/Marketplace.sol":{"ast":{"absolutePath":"contracts/Marketplace.sol","exportedSymbols":{"Context":[1304],"ECDSA":[2225],"EIP712":[2429],"Hashes":[4995],"IAssetTransferAgent":[4955],"IERC1271":[126],"IERC5267":[151],"LibAsset":[5088],"LibOrder":[5280],"Marketplace":[4654],"Math":[3307],"MerkleProof":[5573],"OrderValidator":[4869],"Ownable":[112],"ReentrancyGuard":[216],"ShortString":[1309],"ShortStrings":[1520],"SignedMath":[3412],"StorageSlot":[1630],"Strings":[1859]},"id":4655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3571,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:20"},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":3572,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":217,"src":"58:62:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":113,"src":"121:52:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LibOrder.sol","file":"./libraries/LibOrder.sol","id":3574,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":5281,"src":"174:34:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LibAsset.sol","file":"./libraries/LibAsset.sol","id":3575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":5089,"src":"209:34:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAssetTransferAgent.sol","file":"./interfaces/IAssetTransferAgent.sol","id":3576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":4956,"src":"244:46:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/OrderValidator.sol","file":"./OrderValidator.sol","id":3577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4655,"sourceUnit":4870,"src":"291:30:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3578,"name":"ReentrancyGuard","nameLocations":["347:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":216,"src":"347:15:20"},"id":3579,"nodeType":"InheritanceSpecifier","src":"347:15:20"},{"baseName":{"id":3580,"name":"Ownable","nameLocations":["364:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"364:7:20"},"id":3581,"nodeType":"InheritanceSpecifier","src":"364:7:20"},{"baseName":{"id":3582,"name":"OrderValidator","nameLocations":["373:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":4869,"src":"373:14:20"},"id":3583,"nodeType":"InheritanceSpecifier","src":"373:14:20"}],"canonicalName":"Marketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4654,"linearizedBaseContracts":[4654,4869,2429,151,112,1304,216],"name":"Marketplace","nameLocation":"332:11:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d55be8c6","id":3586,"mutability":"constant","name":"MAX_FEE_BPS","nameLocation":"418:11:20","nodeType":"VariableDeclaration","scope":4654,"src":"394:43:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"432:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":false,"functionSelector":"46904840","id":3588,"mutability":"mutable","name":"feeRecipient","nameLocation":"458:12:20","nodeType":"VariableDeclaration","scope":4654,"src":"443:27:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3587,"name":"address","nodeType":"ElementaryTypeName","src":"443:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"4715399c","id":3590,"mutability":"mutable","name":"assetTransferAgent","nameLocation":"491:18:20","nodeType":"VariableDeclaration","scope":4654,"src":"476:33:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3589,"name":"address","nodeType":"ElementaryTypeName","src":"476:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"24a9d853","id":3592,"mutability":"mutable","name":"feeBps","nameLocation":"530:6:20","nodeType":"VariableDeclaration","scope":4654,"src":"515:21:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"eded1f00","id":3598,"mutability":"mutable","name":"orderFillAmount","nameLocation":"598:15:20","nodeType":"VariableDeclaration","scope":4654,"src":"543:70:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"},"typeName":{"id":3597,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"551:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"543:47:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3596,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"562:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":3604,"mutability":"mutable","name":"cancelledOrders","nameLocation":"672:15:20","nodeType":"VariableDeclaration","scope":4654,"src":"619:68:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bool))"},"typeName":{"id":3603,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"627:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"619:44:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3602,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"638:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3601,"name":"bool","nodeType":"ElementaryTypeName","src":"657:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"anonymous":false,"eventSelector":"42c76c81a7cba1b9c861353909a184e20747ab960332628dabcbb5852fc5cbb5","id":3608,"name":"CancelOrder","nameLocation":"700:11:20","nodeType":"EventDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"indexed":true,"mutability":"mutable","name":"orderHash","nameLocation":"728:9:20","nodeType":"VariableDeclaration","scope":3608,"src":"712:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"712:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"711:27:20"},"src":"694:45:20"},{"anonymous":false,"eventSelector":"2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb2277","id":3618,"name":"OrderMatched","nameLocation":"750:12:20","nodeType":"EventDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"indexed":true,"mutability":"mutable","name":"orderHash","nameLocation":"788:9:20","nodeType":"VariableDeclaration","scope":3618,"src":"772:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"772:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3612,"indexed":true,"mutability":"mutable","name":"maker","nameLocation":"823:5:20","nodeType":"VariableDeclaration","scope":3618,"src":"807:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"807:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3614,"indexed":true,"mutability":"mutable","name":"taker","nameLocation":"854:5:20","nodeType":"VariableDeclaration","scope":3618,"src":"838:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3613,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3616,"indexed":false,"mutability":"mutable","name":"fillAmount","nameLocation":"877:10:20","nodeType":"VariableDeclaration","scope":3618,"src":"869:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"869:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"762:131:20"},"src":"744:150:20"},{"body":{"id":3654,"nodeType":"Block","src":"1052:197:20","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"1062:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3632,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"1077:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1062:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3634,"nodeType":"ExpressionStatement","src":"1062:28:20"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3635,"name":"assetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"1100:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3636,"name":"_assetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"1121:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1100:40:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3638,"nodeType":"ExpressionStatement","src":"1100:40:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"_feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"1158:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1169:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1158:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"_feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"1174:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3644,"name":"MAX_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"1185:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1174:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1158:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656520425053","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1198:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_bdcf63b0c7727ed68dcab51ae0c2cdc87927309329ed1a31774cfca305c6b790","typeString":"literal_string \"Invalid fee BPS\""},"value":"Invalid fee BPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bdcf63b0c7727ed68dcab51ae0c2cdc87927309329ed1a31774cfca305c6b790","typeString":"literal_string \"Invalid fee BPS\""}],"id":3639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1150:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1150:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"ExpressionStatement","src":"1150:66:20"},{"expression":{"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3650,"name":"feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"1226:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3651,"name":"_feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"1235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1226:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3653,"nodeType":"ExpressionStatement","src":"1226:16:20"}]},"id":3655,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4c61796572474d61726b6574506c616365","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1026:19:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_486d52183dcf25bb268d4087423f0bcd14142885c15851a46382b98c2d8bf114","typeString":"literal_string \"LayerGMarketPlace\""},"value":"LayerGMarketPlace"},{"hexValue":"31","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1047:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":3629,"kind":"baseConstructorSpecifier","modifierName":{"id":3626,"name":"OrderValidator","nameLocations":["1011:14:20"],"nodeType":"IdentifierPath","referencedDeclaration":4869,"src":"1011:14:20"},"nodeType":"ModifierInvocation","src":"1011:40:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3620,"mutability":"mutable","name":"_feeRecipient","nameLocation":"929:13:20","nodeType":"VariableDeclaration","scope":3655,"src":"921:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3619,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"_assetTransferAgent","nameLocation":"960:19:20","nodeType":"VariableDeclaration","scope":3655,"src":"952:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"952:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"_feeBps","nameLocation":"997:7:20","nodeType":"VariableDeclaration","scope":3655,"src":"989:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"911:99:20"},"returnParameters":{"id":3630,"nodeType":"ParameterList","parameters":[],"src":"1052:0:20"},"scope":4654,"src":"900:349:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3681,"nodeType":"Block","src":"1387:154:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":3665,"name":"orderFillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"1416:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":3670,"indexExpression":{"arguments":[{"id":3668,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1446:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"expression":{"id":3666,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"1432:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1441:4:20","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":5242,"src":"1432:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$5138_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.Order calldata) pure returns (bytes32)"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1432:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1416:37:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":3672,"indexExpression":{"id":3671,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"1454:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1416:53:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"expression":{"baseExpression":{"expression":{"id":3673,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"1485:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1491:5:20","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"1485:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":3676,"indexExpression":{"id":3675,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"1497:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1485:27:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"1485:37:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1523:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"1485:49:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1416:118:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3664,"id":3680,"nodeType":"Return","src":"1397:137:20"}]},"functionSelector":"703cebfe","id":3682,"implemented":true,"kind":"function","modifiers":[],"name":"isOrderFullyFilled","nameLocation":"1264:18:20","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"order","nameLocation":"1316:5:20","nodeType":"VariableDeclaration","scope":3682,"src":"1292:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":3657,"nodeType":"UserDefinedTypeName","pathNode":{"id":3656,"name":"LibOrder.Order","nameLocations":["1292:8:20","1301:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"1292:14:20"},"referencedDeclaration":5138,"src":"1292:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":3660,"mutability":"mutable","name":"orderItemIndex","nameLocation":"1339:14:20","nodeType":"VariableDeclaration","scope":3682,"src":"1331:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1331:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1282:77:20"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3682,"src":"1381:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3662,"name":"bool","nodeType":"ElementaryTypeName","src":"1381:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1380:6:20"},"scope":4654,"src":"1255:286:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3701,"nodeType":"Block","src":"1677:77:20","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3692,"name":"cancelledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1694:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bool))"}},"id":3697,"indexExpression":{"arguments":[{"id":3695,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"1724:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"expression":{"id":3693,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"1710:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1719:4:20","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":5242,"src":"1710:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$5138_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.Order calldata) pure returns (bytes32)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1694:37:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3699,"indexExpression":{"id":3698,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"1732:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1694:53:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3691,"id":3700,"nodeType":"Return","src":"1687:60:20"}]},"functionSelector":"2e1cbea2","id":3702,"implemented":true,"kind":"function","modifiers":[],"name":"isOrderCancelled","nameLocation":"1556:16:20","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"order","nameLocation":"1606:5:20","nodeType":"VariableDeclaration","scope":3702,"src":"1582:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":3684,"nodeType":"UserDefinedTypeName","pathNode":{"id":3683,"name":"LibOrder.Order","nameLocations":["1582:8:20","1591:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"1582:14:20"},"referencedDeclaration":5138,"src":"1582:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":3687,"mutability":"mutable","name":"orderItemIndex","nameLocation":"1629:14:20","nodeType":"VariableDeclaration","scope":3702,"src":"1621:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1572:77:20"},"returnParameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3702,"src":"1671:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3689,"name":"bool","nodeType":"ElementaryTypeName","src":"1671:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1670:6:20"},"scope":4654,"src":"1547:207:20","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3723,"nodeType":"Block","src":"1827:116:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"1845:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1870:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3711,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:20","typeDescriptions":{}}},"id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1845:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656520726563697069656e74","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1874:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361","typeString":"literal_string \"Invalid fee recipient\""},"value":"Invalid fee recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361","typeString":"literal_string \"Invalid fee recipient\""}],"id":3709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1837:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3718,"nodeType":"ExpressionStatement","src":"1837:61:20"},{"expression":{"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"1908:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3720,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"1923:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1908:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3722,"nodeType":"ExpressionStatement","src":"1908:28:20"}]},"functionSelector":"e74b981b","id":3724,"implemented":true,"kind":"function","modifiers":[{"id":3707,"kind":"modifierInvocation","modifierName":{"id":3706,"name":"onlyOwner","nameLocations":["1817:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1817:9:20"},"nodeType":"ModifierInvocation","src":"1817:9:20"}],"name":"setFeeRecipient","nameLocation":"1769:15:20","nodeType":"FunctionDefinition","parameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"_feeRecipient","nameLocation":"1793:13:20","nodeType":"VariableDeclaration","scope":3724,"src":"1785:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3703,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1784:23:20"},"returnParameters":{"id":3708,"nodeType":"ParameterList","parameters":[],"src":"1827:0:20"},"scope":4654,"src":"1760:183:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3745,"nodeType":"Block","src":"2015:115:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"_agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"2033:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2051:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2043:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3733,"name":"address","nodeType":"ElementaryTypeName","src":"2043:7:20","typeDescriptions":{}}},"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2043:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2033:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206173736574207472616e73666572206167656e74","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2055:30:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c2715538a80e38ea6a6e1beceaa5dd08b7ccf24acfba092eb3651bfac5cef81","typeString":"literal_string \"Invalid asset transfer agent\""},"value":"Invalid asset transfer agent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c2715538a80e38ea6a6e1beceaa5dd08b7ccf24acfba092eb3651bfac5cef81","typeString":"literal_string \"Invalid asset transfer agent\""}],"id":3731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2025:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2025:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3740,"nodeType":"ExpressionStatement","src":"2025:61:20"},{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3741,"name":"assetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"2096:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3742,"name":"_agent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"2117:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2096:27:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3744,"nodeType":"ExpressionStatement","src":"2096:27:20"}]},"functionSelector":"ca200ad8","id":3746,"implemented":true,"kind":"function","modifiers":[{"id":3729,"kind":"modifierInvocation","modifierName":{"id":3728,"name":"onlyOwner","nameLocations":["2005:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2005:9:20"},"nodeType":"ModifierInvocation","src":"2005:9:20"}],"name":"setAssetTransferAgent","nameLocation":"1958:21:20","nodeType":"FunctionDefinition","parameters":{"id":3727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"_agent","nameLocation":"1988:6:20","nodeType":"VariableDeclaration","scope":3746,"src":"1980:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3725,"name":"address","nodeType":"ElementaryTypeName","src":"1980:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1979:16:20"},"returnParameters":{"id":3730,"nodeType":"ParameterList","parameters":[],"src":"2015:0:20"},"scope":4654,"src":"1949:181:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3768,"nodeType":"Block","src":"2191:109:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"_feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"2209:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2220:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2209:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"_feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"2225:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3758,"name":"MAX_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"2236:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2209:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656520425053","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2249:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_bdcf63b0c7727ed68dcab51ae0c2cdc87927309329ed1a31774cfca305c6b790","typeString":"literal_string \"Invalid fee BPS\""},"value":"Invalid fee BPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bdcf63b0c7727ed68dcab51ae0c2cdc87927309329ed1a31774cfca305c6b790","typeString":"literal_string \"Invalid fee BPS\""}],"id":3753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2201:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3763,"nodeType":"ExpressionStatement","src":"2201:66:20"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3764,"name":"feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"2277:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3765,"name":"_feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"2286:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2277:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ExpressionStatement","src":"2277:16:20"}]},"functionSelector":"72c27b62","id":3769,"implemented":true,"kind":"function","modifiers":[{"id":3751,"kind":"modifierInvocation","modifierName":{"id":3750,"name":"onlyOwner","nameLocations":["2181:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2181:9:20"},"nodeType":"ModifierInvocation","src":"2181:9:20"}],"name":"setFeeBps","nameLocation":"2145:9:20","nodeType":"FunctionDefinition","parameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"_feeBps","nameLocation":"2163:7:20","nodeType":"VariableDeclaration","scope":3769,"src":"2155:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2154:17:20"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[],"src":"2191:0:20"},"scope":4654,"src":"2136:164:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3828,"nodeType":"Block","src":"2426:494:20","statements":[{"assignments":[3780],"declarations":[{"constant":false,"id":3780,"mutability":"mutable","name":"orderHash","nameLocation":"2444:9:20","nodeType":"VariableDeclaration","scope":3828,"src":"2436:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2436:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3784,"initialValue":{"arguments":[{"id":3782,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2466:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"id":3781,"name":"hashOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"2456:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.Order calldata) view returns (bytes32)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2456:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2436:36:20"},{"expression":{"arguments":[{"id":3786,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2502:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"id":3785,"name":"validateOrderSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"2482:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$returns$__$","typeString":"function (struct LibOrder.Order calldata) view"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2482:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3788,"nodeType":"ExpressionStatement","src":"2482:26:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3790,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2526:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2530:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2526:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3792,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2540:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2546:5:20","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"2540:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2526:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206d616b65722063616e2063616e63656c","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2553:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f410f70b57fa9676c5f7179906bfbb8ae8b3599d0fe1a880934b6fff85884ed8","typeString":"literal_string \"Only maker can cancel\""},"value":"Only maker can cancel"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f410f70b57fa9676c5f7179906bfbb8ae8b3599d0fe1a880934b6fff85884ed8","typeString":"literal_string \"Only maker can cancel\""}],"id":3789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2518:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:59:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3797,"nodeType":"ExpressionStatement","src":"2518:59:20"},{"expression":{"arguments":[{"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2608:42:20","subExpression":{"arguments":[{"id":3800,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2628:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":3801,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"2635:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3799,"name":"isOrderFullyFilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"2609:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct LibOrder.Order calldata,uint256) view returns (bool)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2609:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657220616c72656164792066696c6c6564","id":3804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2664:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b87450adf24898dc4fe0fe7f7d50b48f29b8a254ff2f8bbeaf5c6044ef5b5660","typeString":"literal_string \"Order already filled\""},"value":"Order already filled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b87450adf24898dc4fe0fe7f7d50b48f29b8a254ff2f8bbeaf5c6044ef5b5660","typeString":"literal_string \"Order already filled\""}],"id":3798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2587:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:109:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3806,"nodeType":"ExpressionStatement","src":"2587:109:20"},{"expression":{"arguments":[{"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2727:40:20","subExpression":{"arguments":[{"id":3809,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2745:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":3810,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"2752:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3808,"name":"isOrderCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"2728:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct LibOrder.Order calldata,uint256) view returns (bool)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f7264657220616c72656164792063616e63656c6c6564","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2781:25:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac9313c508a6bafd2d1980616923cc062937f258e518d1a99318b1ce585a5cdb","typeString":"literal_string \"Order already cancelled\""},"value":"Order already cancelled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac9313c508a6bafd2d1980616923cc062937f258e518d1a99318b1ce585a5cdb","typeString":"literal_string \"Order already cancelled\""}],"id":3807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2706:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:110:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"ExpressionStatement","src":"2706:110:20"},{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3816,"name":"cancelledOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"2827:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(bytes32 => mapping(uint256 => bool))"}},"id":3819,"indexExpression":{"id":3817,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"2843:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2827:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":3820,"indexExpression":{"id":3818,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"2854:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2827:42:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2872:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2827:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3823,"nodeType":"ExpressionStatement","src":"2827:49:20"},{"eventCall":{"arguments":[{"id":3825,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"2903:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3824,"name":"CancelOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"2891:11:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3827,"nodeType":"EmitStatement","src":"2886:27:20"}]},"functionSelector":"a83fb54f","id":3829,"implemented":true,"kind":"function","modifiers":[{"id":3777,"kind":"modifierInvocation","modifierName":{"id":3776,"name":"nonReentrant","nameLocations":["2413:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"2413:12:20"},"nodeType":"ModifierInvocation","src":"2413:12:20"}],"name":"cancelOrder","nameLocation":"2315:11:20","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"order","nameLocation":"2360:5:20","nodeType":"VariableDeclaration","scope":3829,"src":"2336:29:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":3771,"nodeType":"UserDefinedTypeName","pathNode":{"id":3770,"name":"LibOrder.Order","nameLocations":["2336:8:20","2345:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"2336:14:20"},"referencedDeclaration":5138,"src":"2336:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"orderItemIndex","nameLocation":"2383:14:20","nodeType":"VariableDeclaration","scope":3829,"src":"2375:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2375:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:77:20"},"returnParameters":{"id":3778,"nodeType":"ParameterList","parameters":[],"src":"2426:0:20"},"scope":4654,"src":"2306:614:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3975,"nodeType":"Block","src":"3137:1426:20","statements":[{"assignments":[3849],"declarations":[{"constant":false,"id":3849,"mutability":"mutable","name":"makerOrderItem","nameLocation":"3175:14:20","nodeType":"VariableDeclaration","scope":3975,"src":"3147:42:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":3848,"nodeType":"UserDefinedTypeName","pathNode":{"id":3847,"name":"LibOrder.OrderItem","nameLocations":["3147:8:20","3156:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"3147:18:20"},"referencedDeclaration":5120,"src":"3147:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"}],"id":3854,"initialValue":{"baseExpression":{"expression":{"id":3850,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3192:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3203:5:20","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"3192:16:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":3853,"indexExpression":{"id":3852,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"3222:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3192:54:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"nodeType":"VariableDeclarationStatement","src":"3147:99:20"},{"assignments":[3859],"declarations":[{"constant":false,"id":3859,"mutability":"mutable","name":"takerOrderItem","nameLocation":"3284:14:20","nodeType":"VariableDeclaration","scope":3975,"src":"3256:42:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":3858,"nodeType":"UserDefinedTypeName","pathNode":{"id":3857,"name":"LibOrder.OrderItem","nameLocations":["3256:8:20","3265:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"3256:18:20"},"referencedDeclaration":5120,"src":"3256:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"}],"id":3864,"initialValue":{"baseExpression":{"expression":{"id":3860,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"3301:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3312:5:20","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"3301:16:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":3863,"indexExpression":{"hexValue":"30","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3301:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"nodeType":"VariableDeclarationStatement","src":"3256:64:20"},{"expression":{"arguments":[{"id":3866,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3340:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":3867,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"3352:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":3868,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"3364:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3865,"name":"_validate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"3330:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$_t_struct$_Order_$5138_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (struct LibOrder.Order calldata,struct LibOrder.Order calldata,uint256) view"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3870,"nodeType":"ExpressionStatement","src":"3330:49:20"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3871,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3393:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3404:9:20","memberName":"orderType","nodeType":"MemberAccess","referencedDeclaration":5123,"src":"3393:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3873,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"3417:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3426:9:20","memberName":"OrderType","nodeType":"MemberAccess","referencedDeclaration":5109,"src":"3417:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$5109_$","typeString":"type(enum LibOrder.OrderType)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3436:4:20","memberName":"BULK","nodeType":"MemberAccess","referencedDeclaration":5108,"src":"3417:23:20","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"}},"src":"3393:47:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"IfStatement","src":"3389:139:20","trueBody":{"id":3884,"nodeType":"Block","src":"3442:86:20","statements":[{"expression":{"arguments":[{"id":3878,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3478:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},{"expression":{"id":3879,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3494:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3505:4:20","memberName":"root","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"3494:15:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3881,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"3511:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":3877,"name":"validateBulkOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3456:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_OrderItem_$5120_calldata_ptr_$_t_bytes32_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$__$","typeString":"function (struct LibOrder.OrderItem calldata,bytes32,bytes32[] calldata) pure"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3456:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3883,"nodeType":"ExpressionStatement","src":"3456:61:20"}]}},{"assignments":[3887],"declarations":[{"constant":false,"id":3887,"mutability":"mutable","name":"makerOrderHash","nameLocation":"3546:14:20","nodeType":"VariableDeclaration","scope":3975,"src":"3538:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3538:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3892,"initialValue":{"arguments":[{"id":3890,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3577:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"expression":{"id":3888,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"3563:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:4:20","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":5242,"src":"3563:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$5138_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.Order calldata) pure returns (bytes32)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3563:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3538:50:20"},{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"fillAmount","nameLocation":"3606:10:20","nodeType":"VariableDeclaration","scope":3975,"src":"3598:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3598:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"initialValue":{"expression":{"expression":{"id":3895,"name":"takerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"3619:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3634:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"3619:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3644:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"3619:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3598:57:20"},{"expression":{"arguments":[{"id":3900,"name":"makerOrderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"3690:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3901,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"3718:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":3902,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3742:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3757:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"3742:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3767:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"3742:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3905,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"3792:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3899,"name":"_fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"3666:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3666:150:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3907,"nodeType":"ExpressionStatement","src":"3666:150:20"},{"assignments":[3909],"declarations":[{"constant":false,"id":3909,"mutability":"mutable","name":"maker","nameLocation":"3835:5:20","nodeType":"VariableDeclaration","scope":3975,"src":"3827:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3908,"name":"address","nodeType":"ElementaryTypeName","src":"3827:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3912,"initialValue":{"expression":{"id":3910,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"3843:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3854:5:20","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"3843:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3827:32:20"},{"assignments":[3914],"declarations":[{"constant":false,"id":3914,"mutability":"mutable","name":"taker","nameLocation":"3877:5:20","nodeType":"VariableDeclaration","scope":3975,"src":"3869:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3913,"name":"address","nodeType":"ElementaryTypeName","src":"3869:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3917,"initialValue":{"expression":{"id":3915,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"3885:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3896:5:20","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"3885:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3869:32:20"},{"assignments":[3922],"declarations":[{"constant":false,"id":3922,"mutability":"mutable","name":"makeAsset","nameLocation":"3934:9:20","nodeType":"VariableDeclaration","scope":3975,"src":"3912:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":3921,"nodeType":"UserDefinedTypeName","pathNode":{"id":3920,"name":"LibAsset.Asset","nameLocations":["3912:8:20","3921:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"3912:14:20"},"referencedDeclaration":5017,"src":"3912:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"id":3936,"initialValue":{"arguments":[{"expression":{"expression":{"id":3925,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"3974:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"3974:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3999:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"3974:34:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},{"expression":{"expression":{"id":3928,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4022:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4037:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"4022:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4047:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"4022:40:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":3931,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4076:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4091:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"4076:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4101:7:20","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"4076:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3934,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"4122:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3923,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"3946:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3955:5:20","memberName":"Asset","nodeType":"MemberAccess","referencedDeclaration":5017,"src":"3946:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$5017_storage_ptr_$","typeString":"type(struct LibAsset.Asset storage pointer)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3946:196:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"3912:230:20"},{"assignments":[3941],"declarations":[{"constant":false,"id":3941,"mutability":"mutable","name":"takeAsset","nameLocation":"4175:9:20","nodeType":"VariableDeclaration","scope":3975,"src":"4153:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":3940,"nodeType":"UserDefinedTypeName","pathNode":{"id":3939,"name":"LibAsset.Asset","nameLocations":["4153:8:20","4162:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"4153:14:20"},"referencedDeclaration":5017,"src":"4153:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"id":3955,"initialValue":{"arguments":[{"expression":{"expression":{"id":3944,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4215:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4230:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"4215:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4240:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"4215:34:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},{"expression":{"expression":{"id":3947,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4263:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4278:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"4263:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4288:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"4263:40:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":3950,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4317:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4332:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"4317:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4342:7:20","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"4317:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3953,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"4363:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3942,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"4187:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4196:5:20","memberName":"Asset","nodeType":"MemberAccess","referencedDeclaration":5017,"src":"4187:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$5017_storage_ptr_$","typeString":"type(struct LibAsset.Asset storage pointer)"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4187:196:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"4153:230:20"},{"expression":{"arguments":[{"id":3957,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"4411:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3958,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"4418:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3959,"name":"takeAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"4425:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}],"id":3956,"name":"_transferWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"4394:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Asset_$5017_memory_ptr_$returns$__$","typeString":"function (address,address,struct LibAsset.Asset memory)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3961,"nodeType":"ExpressionStatement","src":"4394:41:20"},{"expression":{"arguments":[{"id":3963,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"4462:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3964,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"4469:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3965,"name":"makeAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"4476:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}],"id":3962,"name":"_transferWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"4445:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Asset_$5017_memory_ptr_$returns$__$","typeString":"function (address,address,struct LibAsset.Asset memory)"}},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4445:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3967,"nodeType":"ExpressionStatement","src":"4445:41:20"},{"eventCall":{"arguments":[{"id":3969,"name":"makerOrderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4515:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3970,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"4531:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3971,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"4538:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3972,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"4545:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3968,"name":"OrderMatched","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"4502:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3974,"nodeType":"EmitStatement","src":"4497:59:20"}]},"functionSelector":"bf76c032","id":3976,"implemented":true,"kind":"function","modifiers":[{"id":3843,"kind":"modifierInvocation","modifierName":{"id":3842,"name":"nonReentrant","nameLocations":["3124:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"3124:12:20"},"nodeType":"ModifierInvocation","src":"3124:12:20"}],"name":"matchOrders","nameLocation":"2935:11:20","nodeType":"FunctionDefinition","parameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"makerOrder","nameLocation":"2980:10:20","nodeType":"VariableDeclaration","scope":3976,"src":"2956:34:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":3831,"nodeType":"UserDefinedTypeName","pathNode":{"id":3830,"name":"LibOrder.Order","nameLocations":["2956:8:20","2965:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"2956:14:20"},"referencedDeclaration":5138,"src":"2956:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"takerOrder","nameLocation":"3024:10:20","nodeType":"VariableDeclaration","scope":3976,"src":"3000:34:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":3834,"nodeType":"UserDefinedTypeName","pathNode":{"id":3833,"name":"LibOrder.Order","nameLocations":["3000:8:20","3009:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"3000:14:20"},"referencedDeclaration":5138,"src":"3000:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"orderItemIndex","nameLocation":"3052:14:20","nodeType":"VariableDeclaration","scope":3976,"src":"3044:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3044:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"proof","nameLocation":"3095:5:20","nodeType":"VariableDeclaration","scope":3976,"src":"3076:24:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3838,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3076:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3839,"nodeType":"ArrayTypeName","src":"3076:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2946:160:20"},"returnParameters":{"id":3844,"nodeType":"ParameterList","parameters":[],"src":"3137:0:20"},"scope":4654,"src":"2926:1637:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4210,"nodeType":"Block","src":"4804:2445:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3996,"name":"makerOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"4835:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$5138_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.Order calldata[] calldata"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4847:6:20","memberName":"length","nodeType":"MemberAccess","src":"4835:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3998,"name":"orderItemIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"4857:16:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:6:20","memberName":"length","nodeType":"MemberAccess","src":"4857:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4835:45:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4894:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":3995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4814:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4814:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4003,"nodeType":"ExpressionStatement","src":"4814:107:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4005,"name":"makerOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"4939:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$5138_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.Order calldata[] calldata"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:6:20","memberName":"length","nodeType":"MemberAccess","src":"4939:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4007,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"4961:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[] calldata[] calldata"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4968:6:20","memberName":"length","nodeType":"MemberAccess","src":"4961:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4939:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f6f6673206c656e677468206d69736d61746368","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4976:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4367d964fc17355120a5c049c377b42774632ad5a3a6086a5c426ebdfdfad09","typeString":"literal_string \"Proofs length mismatch\""},"value":"Proofs length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4367d964fc17355120a5c049c377b42774632ad5a3a6086a5c426ebdfdfad09","typeString":"literal_string \"Proofs length mismatch\""}],"id":4004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4931:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4931:70:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4012,"nodeType":"ExpressionStatement","src":"4931:70:20"},{"assignments":[4014],"declarations":[{"constant":false,"id":4014,"mutability":"mutable","name":"totalNativeAmount","nameLocation":"5020:17:20","nodeType":"VariableDeclaration","scope":4210,"src":"5012:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4016,"initialValue":{"hexValue":"30","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5040:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5012:29:20"},{"body":{"id":4195,"nodeType":"Block","src":"5101:1921:20","statements":[{"assignments":[4032],"declarations":[{"constant":false,"id":4032,"mutability":"mutable","name":"makerOrder","nameLocation":"5139:10:20","nodeType":"VariableDeclaration","scope":4195,"src":"5115:34:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":4031,"nodeType":"UserDefinedTypeName","pathNode":{"id":4030,"name":"LibOrder.Order","nameLocations":["5115:8:20","5124:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"5115:14:20"},"referencedDeclaration":5138,"src":"5115:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"}],"id":4036,"initialValue":{"baseExpression":{"id":4033,"name":"makerOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"5152:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$5138_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.Order calldata[] calldata"}},"id":4035,"indexExpression":{"id":4034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5164:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5152:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"nodeType":"VariableDeclarationStatement","src":"5115:51:20"},{"assignments":[4038],"declarations":[{"constant":false,"id":4038,"mutability":"mutable","name":"orderItemIndex","nameLocation":"5188:14:20","nodeType":"VariableDeclaration","scope":4195,"src":"5180:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"5180:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4042,"initialValue":{"baseExpression":{"id":4039,"name":"orderItemIndices","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"5205:16:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4041,"indexExpression":{"id":4040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5222:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5205:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5180:44:20"},{"assignments":[4047],"declarations":[{"constant":false,"id":4047,"mutability":"mutable","name":"proof","nameLocation":"5257:5:20","nodeType":"VariableDeclaration","scope":4195,"src":"5238:24:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5238:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4046,"nodeType":"ArrayTypeName","src":"5238:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4051,"initialValue":{"baseExpression":{"id":4048,"name":"proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"5265:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[] calldata[] calldata"}},"id":4050,"indexExpression":{"id":4049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5272:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5265:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"nodeType":"VariableDeclarationStatement","src":"5238:36:20"},{"assignments":[4056],"declarations":[{"constant":false,"id":4056,"mutability":"mutable","name":"makerOrderItem","nameLocation":"5317:14:20","nodeType":"VariableDeclaration","scope":4195,"src":"5289:42:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":4055,"nodeType":"UserDefinedTypeName","pathNode":{"id":4054,"name":"LibOrder.OrderItem","nameLocations":["5289:8:20","5298:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"5289:18:20"},"referencedDeclaration":5120,"src":"5289:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"}],"id":4061,"initialValue":{"baseExpression":{"expression":{"id":4057,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"5334:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5345:5:20","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"5334:16:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":4060,"indexExpression":{"id":4059,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"5368:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5334:62:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"nodeType":"VariableDeclarationStatement","src":"5289:107:20"},{"assignments":[4066],"declarations":[{"constant":false,"id":4066,"mutability":"mutable","name":"takerOrderItem","nameLocation":"5438:14:20","nodeType":"VariableDeclaration","scope":4195,"src":"5410:42:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":4065,"nodeType":"UserDefinedTypeName","pathNode":{"id":4064,"name":"LibOrder.OrderItem","nameLocations":["5410:8:20","5419:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"5410:18:20"},"referencedDeclaration":5120,"src":"5410:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"}],"id":4071,"initialValue":{"baseExpression":{"expression":{"id":4067,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"5455:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5466:5:20","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"5455:16:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":4070,"indexExpression":{"id":4069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5472:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5455:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"nodeType":"VariableDeclarationStatement","src":"5410:64:20"},{"expression":{"arguments":[{"id":4073,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"5499:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":4074,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"5511:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":4075,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"5523:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4072,"name":"_validate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"5489:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$_t_struct$_Order_$5138_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (struct LibOrder.Order calldata,struct LibOrder.Order calldata,uint256) view"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5489:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4077,"nodeType":"ExpressionStatement","src":"5489:49:20"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4078,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"5556:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5567:9:20","memberName":"orderType","nodeType":"MemberAccess","referencedDeclaration":5123,"src":"5556:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4080,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"5580:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5589:9:20","memberName":"OrderType","nodeType":"MemberAccess","referencedDeclaration":5109,"src":"5580:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$5109_$","typeString":"type(enum LibOrder.OrderType)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5599:4:20","memberName":"BULK","nodeType":"MemberAccess","referencedDeclaration":5108,"src":"5580:23:20","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"}},"src":"5556:47:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4092,"nodeType":"IfStatement","src":"5552:147:20","trueBody":{"id":4091,"nodeType":"Block","src":"5605:94:20","statements":[{"expression":{"arguments":[{"id":4085,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5645:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},{"expression":{"id":4086,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"5661:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5672:4:20","memberName":"root","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"5661:15:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4088,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"5678:5:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":4084,"name":"validateBulkOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"5623:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_OrderItem_$5120_calldata_ptr_$_t_bytes32_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$__$","typeString":"function (struct LibOrder.OrderItem calldata,bytes32,bytes32[] calldata) pure"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5623:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4090,"nodeType":"ExpressionStatement","src":"5623:61:20"}]}},{"assignments":[4094],"declarations":[{"constant":false,"id":4094,"mutability":"mutable","name":"makerOrderHash","nameLocation":"5721:14:20","nodeType":"VariableDeclaration","scope":4195,"src":"5713:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5713:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4099,"initialValue":{"arguments":[{"id":4097,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"5752:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"expression":{"id":4095,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"5738:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5747:4:20","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":5242,"src":"5738:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$5138_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.Order calldata) pure returns (bytes32)"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5738:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5713:50:20"},{"assignments":[4101],"declarations":[{"constant":false,"id":4101,"mutability":"mutable","name":"fillAmount","nameLocation":"5785:10:20","nodeType":"VariableDeclaration","scope":4195,"src":"5777:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4100,"name":"uint256","nodeType":"ElementaryTypeName","src":"5777:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4105,"initialValue":{"expression":{"expression":{"id":4102,"name":"takerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"5798:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5813:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"5798:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5823:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"5798:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5777:57:20"},{"expression":{"arguments":[{"id":4107,"name":"makerOrderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"5877:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4108,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"5909:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":4109,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"5937:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5952:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"5937:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5962:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"5937:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4112,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"5991:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4106,"name":"_fillOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4396,"src":"5849:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint256)"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5849:170:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4114,"nodeType":"ExpressionStatement","src":"5849:170:20"},{"assignments":[4116],"declarations":[{"constant":false,"id":4116,"mutability":"mutable","name":"maker","nameLocation":"6042:5:20","nodeType":"VariableDeclaration","scope":4195,"src":"6034:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4115,"name":"address","nodeType":"ElementaryTypeName","src":"6034:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4119,"initialValue":{"expression":{"id":4117,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"6050:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6061:5:20","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"6050:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6034:32:20"},{"assignments":[4121],"declarations":[{"constant":false,"id":4121,"mutability":"mutable","name":"taker","nameLocation":"6088:5:20","nodeType":"VariableDeclaration","scope":4195,"src":"6080:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4120,"name":"address","nodeType":"ElementaryTypeName","src":"6080:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4124,"initialValue":{"expression":{"id":4122,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"6096:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6107:5:20","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"6096:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6080:32:20"},{"assignments":[4129],"declarations":[{"constant":false,"id":4129,"mutability":"mutable","name":"makeAsset","nameLocation":"6149:9:20","nodeType":"VariableDeclaration","scope":4195,"src":"6127:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":4128,"nodeType":"UserDefinedTypeName","pathNode":{"id":4127,"name":"LibAsset.Asset","nameLocations":["6127:8:20","6136:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"6127:14:20"},"referencedDeclaration":5017,"src":"6127:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"id":4143,"initialValue":{"arguments":[{"expression":{"expression":{"id":4132,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"6193:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6208:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"6193:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6218:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"6193:34:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},{"expression":{"expression":{"id":4135,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"6245:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"6245:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6270:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"6245:40:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":4138,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"6303:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6318:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"6303:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:20","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"6303:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4141,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6353:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4130,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"6161:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6170:5:20","memberName":"Asset","nodeType":"MemberAccess","referencedDeclaration":5017,"src":"6161:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$5017_storage_ptr_$","typeString":"type(struct LibAsset.Asset storage pointer)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6161:216:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"6127:250:20"},{"assignments":[4148],"declarations":[{"constant":false,"id":4148,"mutability":"mutable","name":"takeAsset","nameLocation":"6414:9:20","nodeType":"VariableDeclaration","scope":4195,"src":"6392:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":4147,"nodeType":"UserDefinedTypeName","pathNode":{"id":4146,"name":"LibAsset.Asset","nameLocations":["6392:8:20","6401:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"6392:14:20"},"referencedDeclaration":5017,"src":"6392:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"id":4162,"initialValue":{"arguments":[{"expression":{"expression":{"id":4151,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"6458:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6473:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"6458:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6483:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"6458:34:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},{"expression":{"expression":{"id":4154,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"6510:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6525:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"6510:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6535:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"6510:40:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":4157,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"6568:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6583:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"6568:24:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6593:7:20","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"6568:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4160,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"6618:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4149,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"6426:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6435:5:20","memberName":"Asset","nodeType":"MemberAccess","referencedDeclaration":5017,"src":"6426:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$5017_storage_ptr_$","typeString":"type(struct LibAsset.Asset storage pointer)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6426:216:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"6392:250:20"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4163,"name":"takeAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"6702:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6712:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"6702:19:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4165,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"6725:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6734:9:20","memberName":"AssetType","nodeType":"MemberAccess","referencedDeclaration":5002,"src":"6725:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$5002_$","typeString":"type(enum LibAsset.AssetType)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6744:6:20","memberName":"NATIVE","nodeType":"MemberAccess","referencedDeclaration":4998,"src":"6725:25:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"src":"6702:48:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4175,"nodeType":"IfStatement","src":"6698:129:20","trueBody":{"id":4174,"nodeType":"Block","src":"6752:75:20","statements":[{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4169,"name":"totalNativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"6770:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4170,"name":"takeAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"6791:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6801:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"6791:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6770:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"6770:42:20"}]}},{"expression":{"arguments":[{"id":4177,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"6858:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4178,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"6865:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4179,"name":"takeAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4148,"src":"6872:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}],"id":4176,"name":"_transferWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6841:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Asset_$5017_memory_ptr_$returns$__$","typeString":"function (address,address,struct LibAsset.Asset memory)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6841:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4181,"nodeType":"ExpressionStatement","src":"6841:41:20"},{"expression":{"arguments":[{"id":4183,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"6913:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4184,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"6920:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4185,"name":"makeAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4129,"src":"6927:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}],"id":4182,"name":"_transferWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"6896:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Asset_$5017_memory_ptr_$returns$__$","typeString":"function (address,address,struct LibAsset.Asset memory)"}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6896:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4187,"nodeType":"ExpressionStatement","src":"6896:41:20"},{"eventCall":{"arguments":[{"id":4189,"name":"makerOrderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"6970:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4190,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"6986:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4191,"name":"taker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"6993:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4192,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"7000:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4188,"name":"OrderMatched","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"6957:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6957:54:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4194,"nodeType":"EmitStatement","src":"6952:59:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5072:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4022,"name":"makerOrders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"5076:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$5138_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.Order calldata[] calldata"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5088:6:20","memberName":"length","nodeType":"MemberAccess","src":"5076:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4196,"initializationExpression":{"assignments":[4018],"declarations":[{"constant":false,"id":4018,"mutability":"mutable","name":"i","nameLocation":"5065:1:20","nodeType":"VariableDeclaration","scope":4196,"src":"5057:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4017,"name":"uint256","nodeType":"ElementaryTypeName","src":"5057:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4020,"initialValue":{"hexValue":"30","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5069:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5057:13:20"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5096:3:20","subExpression":{"id":4025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4018,"src":"5096:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"5096:3:20"},"nodeType":"ForStatement","src":"5052:1970:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"totalNativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"7078:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7078:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4209,"nodeType":"IfStatement","src":"7074:169:20","trueBody":{"id":4208,"nodeType":"Block","src":"7101:142:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7140:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7144:5:20","memberName":"value","nodeType":"MemberAccess","src":"7140:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4203,"name":"totalNativeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"7153:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7140:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f74616c206d73672e76616c7565","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7188:30:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_2645dd427cb0aa5ec391f6795f1db2341256d5d3b8752d2d335f2ea4e5fde939","typeString":"literal_string \"Insufficient total msg.value\""},"value":"Insufficient total msg.value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2645dd427cb0aa5ec391f6795f1db2341256d5d3b8752d2d335f2ea4e5fde939","typeString":"literal_string \"Insufficient total msg.value\""}],"id":4200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7115:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7115:117:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4207,"nodeType":"ExpressionStatement","src":"7115:117:20"}]}}]},"functionSelector":"1ef1c7d2","id":4211,"implemented":true,"kind":"function","modifiers":[{"id":3993,"kind":"modifierInvocation","modifierName":{"id":3992,"name":"nonReentrant","nameLocations":["4791:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"4791:12:20"},"nodeType":"ModifierInvocation","src":"4791:12:20"}],"name":"batchMatchOrders","nameLocation":"4578:16:20","nodeType":"FunctionDefinition","parameters":{"id":3991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"makerOrders","nameLocation":"4630:11:20","nodeType":"VariableDeclaration","scope":4211,"src":"4604:37:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$5138_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.Order[]"},"typeName":{"baseType":{"id":3978,"nodeType":"UserDefinedTypeName","pathNode":{"id":3977,"name":"LibOrder.Order","nameLocations":["4604:8:20","4613:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"4604:14:20"},"referencedDeclaration":5138,"src":"4604:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"id":3979,"nodeType":"ArrayTypeName","src":"4604:16:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Order_$5138_storage_$dyn_storage_ptr","typeString":"struct LibOrder.Order[]"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"takerOrder","nameLocation":"4675:10:20","nodeType":"VariableDeclaration","scope":4211,"src":"4651:34:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":3982,"nodeType":"UserDefinedTypeName","pathNode":{"id":3981,"name":"LibOrder.Order","nameLocations":["4651:8:20","4660:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"4651:14:20"},"referencedDeclaration":5138,"src":"4651:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":3986,"mutability":"mutable","name":"orderItemIndices","nameLocation":"4714:16:20","nodeType":"VariableDeclaration","scope":4211,"src":"4695:35:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4695:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"nodeType":"ArrayTypeName","src":"4695:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3990,"mutability":"mutable","name":"proofs","nameLocation":"4761:6:20","nodeType":"VariableDeclaration","scope":4211,"src":"4740:27:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[][]"},"typeName":{"baseType":{"baseType":{"id":3987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3988,"nodeType":"ArrayTypeName","src":"4740:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"id":3989,"nodeType":"ArrayTypeName","src":"4740:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_storage_$dyn_storage_ptr","typeString":"bytes32[][]"}},"visibility":"internal"}],"src":"4594:179:20"},"returnParameters":{"id":3994,"nodeType":"ParameterList","parameters":[],"src":"4804:0:20"},"scope":4654,"src":"4569:2680:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4352,"nodeType":"Block","src":"7412:1326:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4224,"name":"bidOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"7443:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7452:9:20","memberName":"orderType","nodeType":"MemberAccess","referencedDeclaration":5123,"src":"7443:18:20","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4226,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"7465:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7474:9:20","memberName":"OrderType","nodeType":"MemberAccess","referencedDeclaration":5109,"src":"7465:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_OrderType_$5109_$","typeString":"type(enum LibOrder.OrderType)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:3:20","memberName":"BID","nodeType":"MemberAccess","referencedDeclaration":5106,"src":"7465:22:20","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"}},"src":"7443:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206120626964206f72646572","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7501:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d199a32800e364c583e540cac4f99788d965dc5b3f5ba35edfd35920159918c1","typeString":"literal_string \"Not a bid order\""},"value":"Not a bid order"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d199a32800e364c583e540cac4f99788d965dc5b3f5ba35edfd35920159918c1","typeString":"literal_string \"Not a bid order\""}],"id":4223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7422:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7422:106:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4232,"nodeType":"ExpressionStatement","src":"7422:106:20"},{"assignments":[4234],"declarations":[{"constant":false,"id":4234,"mutability":"mutable","name":"orderHash","nameLocation":"7547:9:20","nodeType":"VariableDeclaration","scope":4352,"src":"7539:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7539:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4239,"initialValue":{"arguments":[{"id":4237,"name":"bidOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"7573:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"expression":{"id":4235,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"7559:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7568:4:20","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":5242,"src":"7559:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$5138_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.Order calldata) pure returns (bytes32)"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7539:43:20"},{"expression":{"arguments":[{"id":4241,"name":"bidOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"7612:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"id":4240,"name":"validateOrderSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"7592:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$returns$__$","typeString":"function (struct LibOrder.Order calldata) view"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4243,"nodeType":"ExpressionStatement","src":"7592:29:20"},{"assignments":[4248],"declarations":[{"constant":false,"id":4248,"mutability":"mutable","name":"bidOrderItem","nameLocation":"7658:12:20","nodeType":"VariableDeclaration","scope":4352,"src":"7632:38:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":4247,"nodeType":"UserDefinedTypeName","pathNode":{"id":4246,"name":"LibOrder.OrderItem","nameLocations":["7632:8:20","7641:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"7632:18:20"},"referencedDeclaration":5120,"src":"7632:18:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"}],"id":4253,"initialValue":{"baseExpression":{"expression":{"id":4249,"name":"bidOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"7673:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7682:5:20","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"7673:14:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":4252,"indexExpression":{"id":4251,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"7688:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7673:30:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"nodeType":"VariableDeclarationStatement","src":"7632:71:20"},{"assignments":[4255],"declarations":[{"constant":false,"id":4255,"mutability":"mutable","name":"remaining","nameLocation":"7721:9:20","nodeType":"VariableDeclaration","scope":4352,"src":"7713:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"7713:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4265,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4256,"name":"bidOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"7733:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem memory"}},"id":4257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7746:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"7733:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7756:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"7733:34:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"baseExpression":{"id":4259,"name":"orderFillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"7782:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":4261,"indexExpression":{"id":4260,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"7798:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7782:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4263,"indexExpression":{"id":4262,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"7809:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7782:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7733:91:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7713:111:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"sellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"7855:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7868:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7855:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4270,"name":"sellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"7873:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4271,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"7887:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7873:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7855:41:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642073656c6c20616d6f756e74","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7910:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_e47b85358f83ef2c25b6eaa3a7b2703edce2b2f9b15719185d792744e7e0a982","typeString":"literal_string \"Invalid sell amount\""},"value":"Invalid sell amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e47b85358f83ef2c25b6eaa3a7b2703edce2b2f9b15719185d792744e7e0a982","typeString":"literal_string \"Invalid sell amount\""}],"id":4266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7834:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7834:107:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4276,"nodeType":"ExpressionStatement","src":"7834:107:20"},{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4277,"name":"orderFillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"7952:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":4280,"indexExpression":{"id":4278,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"7968:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7952:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4281,"indexExpression":{"id":4279,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"7979:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7952:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4282,"name":"sellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"7998:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7952:56:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4284,"nodeType":"ExpressionStatement","src":"7952:56:20"},{"assignments":[4286],"declarations":[{"constant":false,"id":4286,"mutability":"mutable","name":"bidder","nameLocation":"8027:6:20","nodeType":"VariableDeclaration","scope":4352,"src":"8019:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4285,"name":"address","nodeType":"ElementaryTypeName","src":"8019:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4289,"initialValue":{"expression":{"id":4287,"name":"bidOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"8036:8:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8045:5:20","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"8036:14:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8019:31:20"},{"assignments":[4291],"declarations":[{"constant":false,"id":4291,"mutability":"mutable","name":"seller","nameLocation":"8068:6:20","nodeType":"VariableDeclaration","scope":4352,"src":"8060:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4290,"name":"address","nodeType":"ElementaryTypeName","src":"8060:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4294,"initialValue":{"expression":{"id":4292,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8077:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8081:6:20","memberName":"sender","nodeType":"MemberAccess","src":"8077:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8060:27:20"},{"assignments":[4299],"declarations":[{"constant":false,"id":4299,"mutability":"mutable","name":"makeAsset","nameLocation":"8120:9:20","nodeType":"VariableDeclaration","scope":4352,"src":"8098:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":4298,"nodeType":"UserDefinedTypeName","pathNode":{"id":4297,"name":"LibAsset.Asset","nameLocations":["8098:8:20","8107:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"8098:14:20"},"referencedDeclaration":5017,"src":"8098:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"id":4313,"initialValue":{"arguments":[{"expression":{"expression":{"id":4302,"name":"bidOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8160:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem memory"}},"id":4303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8173:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"8160:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8183:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"8160:32:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},{"expression":{"expression":{"id":4305,"name":"bidOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8206:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem memory"}},"id":4306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8219:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"8206:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8229:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"8206:38:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":4308,"name":"bidOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8258:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem memory"}},"id":4309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8271:9:20","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"8258:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8281:7:20","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"8258:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4311,"name":"sellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"8302:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4300,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"8132:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8141:5:20","memberName":"Asset","nodeType":"MemberAccess","referencedDeclaration":5017,"src":"8132:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$5017_storage_ptr_$","typeString":"type(struct LibAsset.Asset storage pointer)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:190:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"8098:224:20"},{"assignments":[4318],"declarations":[{"constant":false,"id":4318,"mutability":"mutable","name":"takeAsset","nameLocation":"8355:9:20","nodeType":"VariableDeclaration","scope":4352,"src":"8333:31:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":4317,"nodeType":"UserDefinedTypeName","pathNode":{"id":4316,"name":"LibAsset.Asset","nameLocations":["8333:8:20","8342:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"8333:14:20"},"referencedDeclaration":5017,"src":"8333:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"id":4332,"initialValue":{"arguments":[{"expression":{"expression":{"id":4321,"name":"bidOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8395:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem memory"}},"id":4322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8408:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"8395:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8418:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"8395:32:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},{"expression":{"expression":{"id":4324,"name":"bidOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8441:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem memory"}},"id":4325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8454:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"8441:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8464:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"8441:38:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":4327,"name":"bidOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"8493:12:20","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem memory"}},"id":4328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8506:9:20","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"8493:22:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8516:7:20","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"8493:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4330,"name":"sellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"8537:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4319,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"8367:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8376:5:20","memberName":"Asset","nodeType":"MemberAccess","referencedDeclaration":5017,"src":"8367:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Asset_$5017_storage_ptr_$","typeString":"type(struct LibAsset.Asset storage pointer)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8367:190:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"nodeType":"VariableDeclarationStatement","src":"8333:224:20"},{"expression":{"arguments":[{"id":4334,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"8585:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4335,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"8593:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4336,"name":"makeAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"8601:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}],"id":4333,"name":"_transferWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"8568:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Asset_$5017_memory_ptr_$returns$__$","typeString":"function (address,address,struct LibAsset.Asset memory)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8568:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4338,"nodeType":"ExpressionStatement","src":"8568:43:20"},{"expression":{"arguments":[{"id":4340,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"8638:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4341,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"8646:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4342,"name":"takeAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"8654:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}],"id":4339,"name":"_transferWithFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"8621:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_struct$_Asset_$5017_memory_ptr_$returns$__$","typeString":"function (address,address,struct LibAsset.Asset memory)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4344,"nodeType":"ExpressionStatement","src":"8621:43:20"},{"eventCall":{"arguments":[{"id":4346,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"8693:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4347,"name":"bidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"8704:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4348,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4291,"src":"8712:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4349,"name":"sellAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"8720:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4345,"name":"OrderMatched","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"8680:12:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8680:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4351,"nodeType":"EmitStatement","src":"8675:56:20"}]},"functionSelector":"bc2db5c4","id":4353,"implemented":true,"kind":"function","modifiers":[{"id":4221,"kind":"modifierInvocation","modifierName":{"id":4220,"name":"nonReentrant","nameLocations":["7399:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":181,"src":"7399:12:20"},"nodeType":"ModifierInvocation","src":"7399:12:20"}],"name":"acceptBid","nameLocation":"7264:9:20","nodeType":"FunctionDefinition","parameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4214,"mutability":"mutable","name":"bidOrder","nameLocation":"7307:8:20","nodeType":"VariableDeclaration","scope":4353,"src":"7283:32:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":4213,"nodeType":"UserDefinedTypeName","pathNode":{"id":4212,"name":"LibOrder.Order","nameLocations":["7283:8:20","7292:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"7283:14:20"},"referencedDeclaration":5138,"src":"7283:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":4216,"mutability":"mutable","name":"orderItemIndex","nameLocation":"7333:14:20","nodeType":"VariableDeclaration","scope":4353,"src":"7325:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"7325:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4218,"mutability":"mutable","name":"sellAmount","nameLocation":"7365:10:20","nodeType":"VariableDeclaration","scope":4353,"src":"7357:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"7357:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7273:108:20"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[],"src":"7412:0:20"},"scope":4654,"src":"7255:1483:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4395,"nodeType":"Block","src":"8895:271:20","statements":[{"assignments":[4365],"declarations":[{"constant":false,"id":4365,"mutability":"mutable","name":"filled","nameLocation":"8913:6:20","nodeType":"VariableDeclaration","scope":4395,"src":"8905:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"8905:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4371,"initialValue":{"baseExpression":{"baseExpression":{"id":4366,"name":"orderFillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"8922:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":4368,"indexExpression":{"id":4367,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"8938:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8922:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4370,"indexExpression":{"id":4369,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"8949:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8922:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8905:59:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"8995:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9008:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8995:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"filled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"9013:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4377,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"9022:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9013:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4379,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"9036:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9013:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8995:52:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066696c6c","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9061:14:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b8face32a8ba94b05cad4328a3024cd93a5723965c5ea823d0695626ef82521","typeString":"literal_string \"Invalid fill\""},"value":"Invalid fill"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b8face32a8ba94b05cad4328a3024cd93a5723965c5ea823d0695626ef82521","typeString":"literal_string \"Invalid fill\""}],"id":4372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8974:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8974:111:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4384,"nodeType":"ExpressionStatement","src":"8974:111:20"},{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4385,"name":"orderFillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"9095:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(bytes32 => mapping(uint256 => uint256))"}},"id":4388,"indexExpression":{"id":4386,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"9111:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9095:26:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4389,"indexExpression":{"id":4387,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"9122:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9095:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"filled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"9140:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4391,"name":"fillAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4357,"src":"9149:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9140:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9095:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ExpressionStatement","src":"9095:64:20"}]},"id":4396,"implemented":true,"kind":"function","modifiers":[],"name":"_fillOrder","nameLocation":"8753:10:20","nodeType":"FunctionDefinition","parameters":{"id":4362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"orderHash","nameLocation":"8781:9:20","nodeType":"VariableDeclaration","scope":4396,"src":"8773:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8773:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4357,"mutability":"mutable","name":"fillAmount","nameLocation":"8808:10:20","nodeType":"VariableDeclaration","scope":4396,"src":"8800:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4356,"name":"uint256","nodeType":"ElementaryTypeName","src":"8800:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4359,"mutability":"mutable","name":"totalAmount","nameLocation":"8836:11:20","nodeType":"VariableDeclaration","scope":4396,"src":"8828:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"8828:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4361,"mutability":"mutable","name":"orderItemIndex","nameLocation":"8865:14:20","nodeType":"VariableDeclaration","scope":4396,"src":"8857:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4360,"name":"uint256","nodeType":"ElementaryTypeName","src":"8857:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8763:122:20"},"returnParameters":{"id":4363,"nodeType":"ParameterList","parameters":[],"src":"8895:0:20"},"scope":4654,"src":"8744:422:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4593,"nodeType":"Block","src":"9292:2048:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"9310:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9334:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9326:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"9326:7:20","typeDescriptions":{}}},"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9310:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520726563697069656e74206e6f7420736574","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9338:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4be6c4aaf42cba1054be724b3aea05abab50c7197220bbc4f586c3d86ebfe86e","typeString":"literal_string \"Fee recipient not set\""},"value":"Fee recipient not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4be6c4aaf42cba1054be724b3aea05abab50c7197220bbc4f586c3d86ebfe86e","typeString":"literal_string \"Fee recipient not set\""}],"id":4406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9302:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9302:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4415,"nodeType":"ExpressionStatement","src":"9302:60:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"assetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"9380:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9402:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"9402:7:20","typeDescriptions":{}}},"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9402:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9380:32:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206167656e74206e6f7420736574","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9414:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b3cda423dfb2068ec05e706c2f968c6c5946ea95ec870478b954dde64da207f5","typeString":"literal_string \"Transfer agent not set\""},"value":"Transfer agent not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b3cda423dfb2068ec05e706c2f968c6c5946ea95ec870478b954dde64da207f5","typeString":"literal_string \"Transfer agent not set\""}],"id":4416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9372:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9372:67:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4425,"nodeType":"ExpressionStatement","src":"9372:67:20"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4426,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"9453:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9459:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"9453:15:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4428,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"9472:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9481:9:20","memberName":"AssetType","nodeType":"MemberAccess","referencedDeclaration":5002,"src":"9472:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$5002_$","typeString":"type(enum LibAsset.AssetType)"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9491:6:20","memberName":"NATIVE","nodeType":"MemberAccess","referencedDeclaration":4998,"src":"9472:25:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"src":"9453:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4492,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10034:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10040:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"10034:15:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4494,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"10053:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10062:9:20","memberName":"AssetType","nodeType":"MemberAccess","referencedDeclaration":5002,"src":"10053:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$5002_$","typeString":"type(enum LibAsset.AssetType)"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10072:5:20","memberName":"ERC20","nodeType":"MemberAccess","referencedDeclaration":4999,"src":"10053:24:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"src":"10034:43:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4543,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10702:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4544,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10708:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"10702:15:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4545,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"10721:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10730:9:20","memberName":"AssetType","nodeType":"MemberAccess","referencedDeclaration":5002,"src":"10721:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$5002_$","typeString":"type(enum LibAsset.AssetType)"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10740:6:20","memberName":"ERC721","nodeType":"MemberAccess","referencedDeclaration":5001,"src":"10721:25:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"src":"10702:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4562,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10963:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10969:9:20","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"10963:15:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4564,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"10982:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10991:9:20","memberName":"AssetType","nodeType":"MemberAccess","referencedDeclaration":5002,"src":"10982:18:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_AssetType_$5002_$","typeString":"type(enum LibAsset.AssetType)"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11001:7:20","memberName":"ERC1155","nodeType":"MemberAccess","referencedDeclaration":5000,"src":"10982:26:20","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"src":"10963:45:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4588,"nodeType":"Block","src":"11277:57:20","statements":[{"expression":{"arguments":[{"hexValue":"556e737570706f727465642061737365742074797065","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11298:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c316dcbebee23fa593c90da18490da9838433eac5a95eed75b8654e797694db","typeString":"literal_string \"Unsupported asset type\""},"value":"Unsupported asset type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6c316dcbebee23fa593c90da18490da9838433eac5a95eed75b8654e797694db","typeString":"literal_string \"Unsupported asset type\""}],"id":4584,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11291:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11291:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4587,"nodeType":"ExpressionStatement","src":"11291:32:20"}]},"id":4589,"nodeType":"IfStatement","src":"10959:375:20","trueBody":{"id":4583,"nodeType":"Block","src":"11010:261:20","statements":[{"expression":{"arguments":[{"expression":{"id":4572,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"11097:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4573,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11103:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"11097:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4574,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"11136:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"11158:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4576,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"11178:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11184:7:20","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"11178:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4578,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"11209:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11215:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"11209:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11244:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":4569,"name":"assetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"11044:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4568,"name":"IAssetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"11024:19:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAssetTransferAgent_$4955_$","typeString":"type(contract IAssetTransferAgent)"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11024:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAssetTransferAgent_$4955","typeString":"contract IAssetTransferAgent"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11064:15:20","memberName":"transferERC1155","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"11024:55:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory) external"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11024:236:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4582,"nodeType":"ExpressionStatement","src":"11024:236:20"}]}},"id":4590,"nodeType":"IfStatement","src":"10698:636:20","trueBody":{"id":4561,"nodeType":"Block","src":"10748:205:20","statements":[{"expression":{"arguments":[{"expression":{"id":4553,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10834:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10840:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"10834:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4555,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"10873:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4556,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"10895:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4557,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10915:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10921:7:20","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"10915:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4550,"name":"assetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"10782:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4549,"name":"IAssetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"10762:19:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAssetTransferAgent_$4955_$","typeString":"type(contract IAssetTransferAgent)"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10762:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAssetTransferAgent_$4955","typeString":"contract IAssetTransferAgent"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10802:14:20","memberName":"transferERC721","nodeType":"MemberAccess","referencedDeclaration":4939,"src":"10762:54:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256) external"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10762:180:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4560,"nodeType":"ExpressionStatement","src":"10762:180:20"}]}},"id":4591,"nodeType":"IfStatement","src":"10030:1304:20","trueBody":{"id":4542,"nodeType":"Block","src":"10079:613:20","statements":[{"assignments":[4499],"declarations":[{"constant":false,"id":4499,"mutability":"mutable","name":"feeAmount","nameLocation":"10101:9:20","nodeType":"VariableDeclaration","scope":4542,"src":"10093:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"10093:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4507,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4500,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10114:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10120:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"10114:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4502,"name":"feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"10134:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10114:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10113:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10144:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10113:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10093:56:20"},{"assignments":[4509],"declarations":[{"constant":false,"id":4509,"mutability":"mutable","name":"amountAfterFee","nameLocation":"10171:14:20","nodeType":"VariableDeclaration","scope":4542,"src":"10163:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4508,"name":"uint256","nodeType":"ElementaryTypeName","src":"10163:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4514,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4510,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10188:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10194:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"10188:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4512,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"10208:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10188:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10163:54:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"10235:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10247:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10235:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4530,"nodeType":"IfStatement","src":"10231:257:20","trueBody":{"id":4529,"nodeType":"Block","src":"10250:238:20","statements":[{"expression":{"arguments":[{"expression":{"id":4522,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10343:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10349:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"10343:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4524,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"10386:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4525,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"10412:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4526,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"10446:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4519,"name":"assetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"10288:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4518,"name":"IAssetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"10268:19:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAssetTransferAgent_$4955_$","typeString":"type(contract IAssetTransferAgent)"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10268:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAssetTransferAgent_$4955","typeString":"contract IAssetTransferAgent"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10308:13:20","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":4928,"src":"10268:53:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256) external"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10268:205:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4528,"nodeType":"ExpressionStatement","src":"10268:205:20"}]}},{"expression":{"arguments":[{"expression":{"id":4535,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"10572:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10578:15:20","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"10572:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"10611:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"10633:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4539,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4509,"src":"10653:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4532,"name":"assetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"10521:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4531,"name":"IAssetTransferAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"10501:19:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAssetTransferAgent_$4955_$","typeString":"type(contract IAssetTransferAgent)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10501:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAssetTransferAgent_$4955","typeString":"contract IAssetTransferAgent"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10541:13:20","memberName":"transferERC20","nodeType":"MemberAccess","referencedDeclaration":4928,"src":"10501:53:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256) external"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10501:180:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4541,"nodeType":"ExpressionStatement","src":"10501:180:20"}]}},"id":4592,"nodeType":"IfStatement","src":"9449:1885:20","trueBody":{"id":4491,"nodeType":"Block","src":"9499:525:20","statements":[{"assignments":[4433],"declarations":[{"constant":false,"id":4433,"mutability":"mutable","name":"feeAmount","nameLocation":"9521:9:20","nodeType":"VariableDeclaration","scope":4491,"src":"9513:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9513:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4441,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4434,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"9534:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9540:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"9534:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4436,"name":"feeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"9554:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9534:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9533:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9564:5:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"9533:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9513:56:20"},{"assignments":[4443],"declarations":[{"constant":false,"id":4443,"mutability":"mutable","name":"amountAfterFee","nameLocation":"9591:14:20","nodeType":"VariableDeclaration","scope":4491,"src":"9583:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"9583:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4448,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4444,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"9608:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9614:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"9608:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4446,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"9628:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9608:29:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9583:54:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4450,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9659:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9663:5:20","memberName":"value","nodeType":"MemberAccess","src":"9659:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4452,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"9672:5:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":4453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9678:11:20","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"9672:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9659:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206d73672e76616c7565","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9691:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b884d60e8d3e2e5954308cec5cbda0d5e17a39e36112847c63b89b174849b0","typeString":"literal_string \"Insufficient msg.value\""},"value":"Insufficient msg.value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37b884d60e8d3e2e5954308cec5cbda0d5e17a39e36112847c63b89b174849b0","typeString":"literal_string \"Insufficient msg.value\""}],"id":4449,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9651:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9651:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4457,"nodeType":"ExpressionStatement","src":"9651:65:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"9734:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9746:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9734:13:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4476,"nodeType":"IfStatement","src":"9730:167:20","trueBody":{"id":4475,"nodeType":"Block","src":"9749:148:20","statements":[{"assignments":[4462,null],"declarations":[{"constant":false,"id":4462,"mutability":"mutable","name":"feeSent","nameLocation":"9773:7:20","nodeType":"VariableDeclaration","scope":4475,"src":"9768:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4461,"name":"bool","nodeType":"ElementaryTypeName","src":"9768:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4469,"initialValue":{"arguments":[{"hexValue":"","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9822:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4463,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"9786:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9799:4:20","memberName":"call","nodeType":"MemberAccess","src":"9786:17:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4465,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"9811:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9786:35:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9786:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9767:58:20"},{"expression":{"arguments":[{"id":4471,"name":"feeSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"9851:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9860:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":4470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9843:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9843:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4474,"nodeType":"ExpressionStatement","src":"9843:39:20"}]}},{"assignments":[4478,null],"declarations":[{"constant":false,"id":4478,"mutability":"mutable","name":"sent","nameLocation":"9916:4:20","nodeType":"VariableDeclaration","scope":4491,"src":"9911:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4477,"name":"bool","nodeType":"ElementaryTypeName","src":"9911:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4485,"initialValue":{"arguments":[{"hexValue":"","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9957:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"9926:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9929:4:20","memberName":"call","nodeType":"MemberAccess","src":"9926:7:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4481,"name":"amountAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"9941:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"9926:30:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9926:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9910:50:20"},{"expression":{"arguments":[{"id":4487,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"9982:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6174697665207472616e73666572206661696c6564","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9988:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0e61130ccc2712189b9b34848a5d4c70b9bf2eafb9282e988b435e67adf809","typeString":"literal_string \"Native transfer failed\""},"value":"Native transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da0e61130ccc2712189b9b34848a5d4c70b9bf2eafb9282e988b435e67adf809","typeString":"literal_string \"Native transfer failed\""}],"id":4486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9974:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9974:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4490,"nodeType":"ExpressionStatement","src":"9974:39:20"}]}}]},"id":4594,"implemented":true,"kind":"function","modifiers":[],"name":"_transferWithFee","nameLocation":"9181:16:20","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"from","nameLocation":"9215:4:20","nodeType":"VariableDeclaration","scope":4594,"src":"9207:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4397,"name":"address","nodeType":"ElementaryTypeName","src":"9207:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4400,"mutability":"mutable","name":"to","nameLocation":"9237:2:20","nodeType":"VariableDeclaration","scope":4594,"src":"9229:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4399,"name":"address","nodeType":"ElementaryTypeName","src":"9229:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"asset","nameLocation":"9271:5:20","nodeType":"VariableDeclaration","scope":4594,"src":"9249:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":4402,"nodeType":"UserDefinedTypeName","pathNode":{"id":4401,"name":"LibAsset.Asset","nameLocations":["9249:8:20","9258:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"9249:14:20"},"referencedDeclaration":5017,"src":"9249:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"src":"9197:85:20"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[],"src":"9292:0:20"},"scope":4654,"src":"9172:2168:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4652,"nodeType":"Block","src":"11505:702:20","statements":[{"expression":{"arguments":[{"id":4606,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"11535:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"id":4605,"name":"validateOrderSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"11515:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$returns$__$","typeString":"function (struct LibOrder.Order calldata) view"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11515:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4608,"nodeType":"ExpressionStatement","src":"11515:31:20"},{"expression":{"arguments":[{"id":4610,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"11582:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":4611,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11594:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":4612,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"11606:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4609,"name":"validateIfMatchedBothSide","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"11556:25:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$5138_calldata_ptr_$_t_struct$_Order_$5138_calldata_ptr_$_t_uint256_$returns$__$","typeString":"function (struct LibOrder.Order calldata,struct LibOrder.Order calldata,uint256) pure"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11556:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4614,"nodeType":"ExpressionStatement","src":"11556:65:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4616,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11639:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11643:6:20","memberName":"sender","nodeType":"MemberAccess","src":"11639:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4618,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"11653:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11664:5:20","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"11653:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206973206e6f742074616b6572","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11671:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_68c5e95103054ddf38b2925222ab4944ee3efc5b7a0d9e4d95a5be11f7401a84","typeString":"literal_string \"Sender is not taker\""},"value":"Sender is not taker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68c5e95103054ddf38b2925222ab4944ee3efc5b7a0d9e4d95a5be11f7401a84","typeString":"literal_string \"Sender is not taker\""}],"id":4615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11631:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11631:62:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4623,"nodeType":"ExpressionStatement","src":"11631:62:20"},{"expression":{"arguments":[{"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11772:47:20","subExpression":{"arguments":[{"id":4626,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"11792:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":4627,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"11804:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4625,"name":"isOrderFullyFilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"11773:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct LibOrder.Order calldata,uint256) view returns (bool)"}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11773:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d616b6572206f726465722066696c6c6564","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11833:20:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_834def6dcbcaccc9a88376e1f23f246af682e42f5bb0fcbbaf283886de94fc7c","typeString":"literal_string \"Maker order filled\""},"value":"Maker order filled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_834def6dcbcaccc9a88376e1f23f246af682e42f5bb0fcbbaf283886de94fc7c","typeString":"literal_string \"Maker order filled\""}],"id":4624,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11751:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11751:112:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4632,"nodeType":"ExpressionStatement","src":"11751:112:20"},{"expression":{"arguments":[{"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11938:45:20","subExpression":{"arguments":[{"id":4635,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"11956:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":4636,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"11968:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4634,"name":"isOrderCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"11939:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct LibOrder.Order calldata,uint256) view returns (bool)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11939:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d616b6572206f726465722063616e63656c6c6564","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11997:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcf9a9e2842b452565b00be728e676a81a7fe7880f290152bb9e4c2ce6a13233","typeString":"literal_string \"Maker order cancelled\""},"value":"Maker order cancelled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcf9a9e2842b452565b00be728e676a81a7fe7880f290152bb9e4c2ce6a13233","typeString":"literal_string \"Maker order cancelled\""}],"id":4633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11917:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11917:113:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4641,"nodeType":"ExpressionStatement","src":"11917:113:20"},{"expression":{"arguments":[{"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12103:52:20","subExpression":{"arguments":[{"id":4645,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"12128:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},{"id":4646,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"12140:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4643,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"12104:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12113:14:20","memberName":"isOrderExpired","nodeType":"MemberAccess","referencedDeclaration":5279,"src":"12104:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_memory_ptr_$_t_uint256_$returns$_t_bool_$","typeString":"function (struct LibOrder.Order memory,uint256) view returns (bool)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12104:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d616b6572206f726465722065787069726564","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12169:21:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d41e6be48e1ba7c8b0a3c8f49495e5f90481db0575910fbba290195842d0240","typeString":"literal_string \"Maker order expired\""},"value":"Maker order expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d41e6be48e1ba7c8b0a3c8f49495e5f90481db0575910fbba290195842d0240","typeString":"literal_string \"Maker order expired\""}],"id":4642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12082:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:118:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4651,"nodeType":"ExpressionStatement","src":"12082:118:20"}]},"id":4653,"implemented":true,"kind":"function","modifiers":[],"name":"_validate","nameLocation":"11355:9:20","nodeType":"FunctionDefinition","parameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"makerOrder","nameLocation":"11398:10:20","nodeType":"VariableDeclaration","scope":4653,"src":"11374:34:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":4596,"nodeType":"UserDefinedTypeName","pathNode":{"id":4595,"name":"LibOrder.Order","nameLocations":["11374:8:20","11383:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"11374:14:20"},"referencedDeclaration":5138,"src":"11374:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":4600,"mutability":"mutable","name":"takerOrder","nameLocation":"11442:10:20","nodeType":"VariableDeclaration","scope":4653,"src":"11418:34:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":4599,"nodeType":"UserDefinedTypeName","pathNode":{"id":4598,"name":"LibOrder.Order","nameLocations":["11418:8:20","11427:5:20"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"11418:14:20"},"referencedDeclaration":5138,"src":"11418:14:20","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":4602,"mutability":"mutable","name":"orderItemIndex","nameLocation":"11470:14:20","nodeType":"VariableDeclaration","scope":4653,"src":"11462:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"11462:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11364:126:20"},"returnParameters":{"id":4604,"nodeType":"ParameterList","parameters":[],"src":"11505:0:20"},"scope":4654,"src":"11346:861:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4655,"src":"323:11886:20","usedErrors":[1317,1319],"usedEvents":[13,131,3608,3618]}],"src":"32:12178:20"},"id":20},"contracts/OrderValidator.sol":{"ast":{"absolutePath":"contracts/OrderValidator.sol","exportedSymbols":{"ECDSA":[2225],"EIP712":[2429],"Hashes":[4995],"IERC1271":[126],"IERC5267":[151],"LibAsset":[5088],"LibOrder":[5280],"Math":[3307],"MerkleProof":[5573],"OrderValidator":[4869],"ShortString":[1309],"ShortStrings":[1520],"SignedMath":[3412],"StorageSlot":[1630],"Strings":[1859]},"id":4870,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4656,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:21"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"@openzeppelin/contracts/interfaces/IERC1271.sol","id":4657,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4870,"sourceUnit":127,"src":"59:57:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":4658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4870,"sourceUnit":2430,"src":"117:63:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":4659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4870,"sourceUnit":2226,"src":"181:62:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LibOrder.sol","file":"./libraries/LibOrder.sol","id":4660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4870,"sourceUnit":5281,"src":"244:34:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LibAsset.sol","file":"./libraries/LibAsset.sol","id":4661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4870,"sourceUnit":5089,"src":"279:34:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/MerkleProof.sol","file":"./libraries/MerkleProof.sol","id":4662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4870,"sourceUnit":5574,"src":"314:37:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4663,"name":"EIP712","nameLocations":["389:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2429,"src":"389:6:21"},"id":4664,"nodeType":"InheritanceSpecifier","src":"389:6:21"}],"canonicalName":"OrderValidator","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4869,"linearizedBaseContracts":[4869,2429,151],"name":"OrderValidator","nameLocation":"371:14:21","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4667,"libraryName":{"id":4665,"name":"ECDSA","nameLocations":["408:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"408:5:21"},"nodeType":"UsingForDirective","src":"402:24:21","typeName":{"id":4666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"418:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"id":4670,"mutability":"constant","name":"MAGICVALUE","nameLocation":"457:10:21","nodeType":"VariableDeclaration","scope":4869,"src":"432:48:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4668,"name":"bytes4","nodeType":"ElementaryTypeName","src":"432:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783136323662613765","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"470:10:21","typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"},{"body":{"id":4681,"nodeType":"Block","src":"586:2:21","statements":[]},"id":4682,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4677,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"571:4:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4678,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"577:7:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4679,"kind":"baseConstructorSpecifier","modifierName":{"id":4676,"name":"EIP712","nameLocations":["564:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":2429,"src":"564:6:21"},"nodeType":"ModifierInvocation","src":"564:21:21"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"name","nameLocation":"522:4:21","nodeType":"VariableDeclaration","scope":4682,"src":"508:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4671,"name":"string","nodeType":"ElementaryTypeName","src":"508:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4674,"mutability":"mutable","name":"version","nameLocation":"550:7:21","nodeType":"VariableDeclaration","scope":4682,"src":"536:21:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4673,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"498:65:21"},"returnParameters":{"id":4680,"nodeType":"ParameterList","parameters":[],"src":"586:0:21"},"scope":4869,"src":"487:101:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4701,"nodeType":"Block","src":"690:91:21","statements":[{"assignments":[4691],"declarations":[{"constant":false,"id":4691,"mutability":"mutable","name":"hash","nameLocation":"708:4:21","nodeType":"VariableDeclaration","scope":4701,"src":"700:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"700:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4698,"initialValue":{"arguments":[{"arguments":[{"id":4695,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"746:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"expression":{"id":4693,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"732:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"741:4:21","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":5242,"src":"732:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Order_$5138_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.Order calldata) pure returns (bytes32)"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"732:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4692,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"715:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"715:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"700:53:21"},{"expression":{"id":4699,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"770:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4689,"id":4700,"nodeType":"Return","src":"763:11:21"}]},"id":4702,"implemented":true,"kind":"function","modifiers":[],"name":"hashOrder","nameLocation":"603:9:21","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"order","nameLocation":"646:5:21","nodeType":"VariableDeclaration","scope":4702,"src":"622:29:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":4684,"nodeType":"UserDefinedTypeName","pathNode":{"id":4683,"name":"LibOrder.Order","nameLocations":["622:8:21","631:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"622:14:21"},"referencedDeclaration":5138,"src":"622:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"}],"src":"612:45:21"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4702,"src":"681:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"681:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"680:9:21"},"scope":4869,"src":"594:187:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4760,"nodeType":"Block","src":"861:615:21","statements":[{"assignments":[4709],"declarations":[{"constant":false,"id":4709,"mutability":"mutable","name":"maker","nameLocation":"879:5:21","nodeType":"VariableDeclaration","scope":4760,"src":"871:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4708,"name":"address","nodeType":"ElementaryTypeName","src":"871:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4712,"initialValue":{"expression":{"id":4710,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"887:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"893:5:21","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"887:11:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"871:27:21"},{"assignments":[4714],"declarations":[{"constant":false,"id":4714,"mutability":"mutable","name":"orderHash","nameLocation":"916:9:21","nodeType":"VariableDeclaration","scope":4760,"src":"908:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"908:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4718,"initialValue":{"arguments":[{"id":4716,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"938:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}],"id":4715,"name":"hashOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"928:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$5138_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.Order calldata) view returns (bytes32)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"928:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"908:36:21"},{"assignments":[4720],"declarations":[{"constant":false,"id":4720,"mutability":"mutable","name":"signature","nameLocation":"969:9:21","nodeType":"VariableDeclaration","scope":4760,"src":"954:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4719,"name":"bytes","nodeType":"ElementaryTypeName","src":"954:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4723,"initialValue":{"expression":{"id":4721,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"981:5:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"987:9:21","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":5137,"src":"981:15:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"954:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4724,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"1010:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1016:4:21","memberName":"code","nodeType":"MemberAccess","src":"1010:10:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1021:6:21","memberName":"length","nodeType":"MemberAccess","src":"1010:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1010:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4758,"nodeType":"Block","src":"1254:216:21","statements":[{"assignments":[4744],"declarations":[{"constant":false,"id":4744,"mutability":"mutable","name":"signer","nameLocation":"1276:6:21","nodeType":"VariableDeclaration","scope":4758,"src":"1268:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4743,"name":"address","nodeType":"ElementaryTypeName","src":"1268:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4750,"initialValue":{"arguments":[{"id":4747,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"1308:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4748,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"1319:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4745,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"1285:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1294:13:21","memberName":"recoverSigner","nodeType":"MemberAccess","referencedDeclaration":5259,"src":"1285:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1285:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1268:61:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"1368:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4753,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"1377:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1368:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e61747572652e204d616b6572206973206e6f7420746865207369676e6572","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1401:44:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_7aa1de5e48f8f51c181c57d27c79ae6d67271e1410fe09c66f81414785775d22","typeString":"literal_string \"Invalid signature. Maker is not the signer\""},"value":"Invalid signature. Maker is not the signer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7aa1de5e48f8f51c181c57d27c79ae6d67271e1410fe09c66f81414785775d22","typeString":"literal_string \"Invalid signature. Maker is not the signer\""}],"id":4751,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1343:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1343:116:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4757,"nodeType":"ExpressionStatement","src":"1343:116:21"}]},"id":4759,"nodeType":"IfStatement","src":"1006:464:21","trueBody":{"id":4742,"nodeType":"Block","src":"1033:215:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4734,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"1105:9:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4735,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"1116:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":4731,"name":"maker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"1081:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4730,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1072:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$126_$","typeString":"type(contract IERC1271)"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1072:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1271_$126","typeString":"contract IERC1271"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1088:16:21","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":125,"src":"1072:32:21","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view external returns (bytes4)"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1072:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4737,"name":"MAGICVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"1150:10:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1072:88:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"636f6e7472616374206f72646572207369676e617475726520766572696669636174696f6e206572726f72","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1178:45:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ee034d295ab822e58788c863277376119059de7b22ff73acb814bddf6e62ee0","typeString":"literal_string \"contract order signature verification error\""},"value":"contract order signature verification error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ee034d295ab822e58788c863277376119059de7b22ff73acb814bddf6e62ee0","typeString":"literal_string \"contract order signature verification error\""}],"id":4729,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1047:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1047:190:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4741,"nodeType":"ExpressionStatement","src":"1047:190:21"}]}}]},"id":4761,"implemented":true,"kind":"function","modifiers":[],"name":"validateOrderSigner","nameLocation":"796:19:21","nodeType":"FunctionDefinition","parameters":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"order","nameLocation":"840:5:21","nodeType":"VariableDeclaration","scope":4761,"src":"816:29:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":4704,"nodeType":"UserDefinedTypeName","pathNode":{"id":4703,"name":"LibOrder.Order","nameLocations":["816:8:21","825:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"816:14:21"},"referencedDeclaration":5138,"src":"816:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"}],"src":"815:31:21"},"returnParameters":{"id":4707,"nodeType":"ParameterList","parameters":[],"src":"861:0:21"},"scope":4869,"src":"787:689:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4788,"nodeType":"Block","src":"1636:268:21","statements":[{"assignments":[4773],"declarations":[{"constant":false,"id":4773,"mutability":"mutable","name":"leaf","nameLocation":"1743:4:21","nodeType":"VariableDeclaration","scope":4788,"src":"1735:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1735:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4778,"initialValue":{"arguments":[{"id":4776,"name":"orderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"1773:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}],"expression":{"id":4774,"name":"LibOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5280,"src":"1750:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibOrder_$5280_$","typeString":"type(library LibOrder)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1759:13:21","memberName":"hashOrderItem","nodeType":"MemberAccess","referencedDeclaration":5168,"src":"1750:22:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_OrderItem_$5120_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.OrderItem calldata) pure returns (bytes32)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1735:48:21"},{"expression":{"arguments":[{"arguments":[{"id":4781,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"1854:5:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4782,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"1861:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4783,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"1867:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4780,"name":"verifyMerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"1836:17:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] calldata,bytes32,bytes32) pure returns (bool)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1836:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964204d65726b6c652070726f6f66","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1874:22:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfff98aea1f4314a786c0426b520c2e5600fd9bdeb9d59d5d51311c13153d3c6","typeString":"literal_string \"Invalid Merkle proof\""},"value":"Invalid Merkle proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfff98aea1f4314a786c0426b520c2e5600fd9bdeb9d59d5d51311c13153d3c6","typeString":"literal_string \"Invalid Merkle proof\""}],"id":4779,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1828:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4787,"nodeType":"ExpressionStatement","src":"1828:69:21"}]},"id":4789,"implemented":true,"kind":"function","modifiers":[],"name":"validateBulkOrderItem","nameLocation":"1491:21:21","nodeType":"FunctionDefinition","parameters":{"id":4770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"orderItem","nameLocation":"1550:9:21","nodeType":"VariableDeclaration","scope":4789,"src":"1522:37:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":4763,"nodeType":"UserDefinedTypeName","pathNode":{"id":4762,"name":"LibOrder.OrderItem","nameLocations":["1522:8:21","1531:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"1522:18:21"},"referencedDeclaration":5120,"src":"1522:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"},{"constant":false,"id":4766,"mutability":"mutable","name":"root","nameLocation":"1577:4:21","nodeType":"VariableDeclaration","scope":4789,"src":"1569:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"proof","nameLocation":"1610:5:21","nodeType":"VariableDeclaration","scope":4789,"src":"1591:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1591:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4768,"nodeType":"ArrayTypeName","src":"1591:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1512:109:21"},"returnParameters":{"id":4771,"nodeType":"ParameterList","parameters":[],"src":"1636:0:21"},"scope":4869,"src":"1482:422:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4808,"nodeType":"Block","src":"2048:61:21","statements":[{"expression":{"arguments":[{"id":4803,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"2084:5:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":4804,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4794,"src":"2091:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4805,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"2097:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4801,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"2065:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$5573_$","typeString":"type(library MerkleProof)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2077:6:21","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":5305,"src":"2065:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2065:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4800,"id":4807,"nodeType":"Return","src":"2058:44:21"}]},"functionSelector":"ada4fa18","id":4809,"implemented":true,"kind":"function","modifiers":[],"name":"verifyMerkleProof","nameLocation":"1919:17:21","nodeType":"FunctionDefinition","parameters":{"id":4797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"proof","nameLocation":"1965:5:21","nodeType":"VariableDeclaration","scope":4809,"src":"1946:24:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1946:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4791,"nodeType":"ArrayTypeName","src":"1946:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"root","nameLocation":"1988:4:21","nodeType":"VariableDeclaration","scope":4809,"src":"1980:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1980:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4796,"mutability":"mutable","name":"leaf","nameLocation":"2010:4:21","nodeType":"VariableDeclaration","scope":4809,"src":"2002:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2002:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1936:84:21"},"returnParameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4809,"src":"2042:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4798,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2041:6:21"},"scope":4869,"src":"1910:199:21","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4867,"nodeType":"Block","src":"2281:562:21","statements":[{"assignments":[4824],"declarations":[{"constant":false,"id":4824,"mutability":"mutable","name":"makerOrderItem","nameLocation":"2319:14:21","nodeType":"VariableDeclaration","scope":4867,"src":"2291:42:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":4823,"nodeType":"UserDefinedTypeName","pathNode":{"id":4822,"name":"LibOrder.OrderItem","nameLocations":["2291:8:21","2300:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"2291:18:21"},"referencedDeclaration":5120,"src":"2291:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"}],"id":4829,"initialValue":{"baseExpression":{"expression":{"id":4825,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"2336:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:5:21","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"2336:16:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":4828,"indexExpression":{"id":4827,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"2353:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2336:23:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"nodeType":"VariableDeclarationStatement","src":"2291:68:21"},{"assignments":[4834],"declarations":[{"constant":false,"id":4834,"mutability":"mutable","name":"takerOrderItem","nameLocation":"2397:14:21","nodeType":"VariableDeclaration","scope":4867,"src":"2369:42:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":4833,"nodeType":"UserDefinedTypeName","pathNode":{"id":4832,"name":"LibOrder.OrderItem","nameLocations":["2369:8:21","2378:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"2369:18:21"},"referencedDeclaration":5120,"src":"2369:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"}],"id":4839,"initialValue":{"baseExpression":{"expression":{"id":4835,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"2414:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2425:5:21","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"2414:16:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":4838,"indexExpression":{"hexValue":"30","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2414:19:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"nodeType":"VariableDeclarationStatement","src":"2369:64:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4841,"name":"makerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"2452:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:5:21","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"2452:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4843,"name":"takerOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"2472:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2483:5:21","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":5131,"src":"2472:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2452:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54616b6572206d757374206d61746368206d616b6572","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2490:24:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_0dd12629c653680c9c7b2f29b835823971682fa1cf237eda2a15cca981921d7a","typeString":"literal_string \"Taker must match maker\""},"value":"Taker must match maker"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0dd12629c653680c9c7b2f29b835823971682fa1cf237eda2a15cca981921d7a","typeString":"literal_string \"Taker must match maker\""}],"id":4840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2444:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2444:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4848,"nodeType":"ExpressionStatement","src":"2444:71:21"},{"expression":{"arguments":[{"expression":{"id":4852,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"2636:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2651:9:21","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"2636:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},{"expression":{"id":4854,"name":"takerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"2674:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2689:9:21","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"2674:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"},{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}],"expression":{"id":4849,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"2590:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2599:23:21","memberName":"validateCompatibleAsset","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"2590:32:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Asset_$5017_calldata_ptr_$_t_struct$_Asset_$5017_calldata_ptr_$returns$__$","typeString":"function (struct LibAsset.Asset calldata,struct LibAsset.Asset calldata) pure"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:118:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4857,"nodeType":"ExpressionStatement","src":"2590:118:21"},{"expression":{"arguments":[{"expression":{"id":4861,"name":"makerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"2764:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2779:9:21","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"2764:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},{"expression":{"id":4863,"name":"takerOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"2802:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2817:9:21","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"2802:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"},{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}],"expression":{"id":4858,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"2718:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2727:23:21","memberName":"validateCompatibleAsset","nodeType":"MemberAccess","referencedDeclaration":5087,"src":"2718:32:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Asset_$5017_calldata_ptr_$_t_struct$_Asset_$5017_calldata_ptr_$returns$__$","typeString":"function (struct LibAsset.Asset calldata,struct LibAsset.Asset calldata) pure"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2718:118:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4866,"nodeType":"ExpressionStatement","src":"2718:118:21"}]},"id":4868,"implemented":true,"kind":"function","modifiers":[],"name":"validateIfMatchedBothSide","nameLocation":"2124:25:21","nodeType":"FunctionDefinition","parameters":{"id":4818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"makerOrder","nameLocation":"2183:10:21","nodeType":"VariableDeclaration","scope":4868,"src":"2159:34:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":4811,"nodeType":"UserDefinedTypeName","pathNode":{"id":4810,"name":"LibOrder.Order","nameLocations":["2159:8:21","2168:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"2159:14:21"},"referencedDeclaration":5138,"src":"2159:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":4815,"mutability":"mutable","name":"takerOrder","nameLocation":"2227:10:21","nodeType":"VariableDeclaration","scope":4868,"src":"2203:34:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":4814,"nodeType":"UserDefinedTypeName","pathNode":{"id":4813,"name":"LibOrder.Order","nameLocations":["2203:8:21","2212:5:21"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"2203:14:21"},"referencedDeclaration":5138,"src":"2203:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":4817,"mutability":"mutable","name":"index","nameLocation":"2255:5:21","nodeType":"VariableDeclaration","scope":4868,"src":"2247:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2149:117:21"},"returnParameters":{"id":4819,"nodeType":"ParameterList","parameters":[],"src":"2281:0:21"},"scope":4869,"src":"2115:728:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4870,"src":"353:2492:21","usedErrors":[1317,1319],"usedEvents":[131]}],"src":"33:2813:21"},"id":21},"contracts/interfaces/IAssetTransferAgent.sol":{"ast":{"absolutePath":"contracts/interfaces/IAssetTransferAgent.sol","exportedSymbols":{"IAssetTransferAgent":[4955]},"id":4956,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4871,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IAssetTransferAgent","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4955,"linearizedBaseContracts":[4955],"name":"IAssetTransferAgent","nameLocation":"68:19:22","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"8dfac83616afc4a99a89fe63243ae807798d10eb5a1449e5472853efc3c022cf","id":4881,"name":"ERC20Transferred","nameLocation":"100:16:22","nodeType":"EventDefinition","parameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"133:5:22","nodeType":"VariableDeclaration","scope":4881,"src":"117:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4872,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4875,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"156:4:22","nodeType":"VariableDeclaration","scope":4881,"src":"140:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4874,"name":"address","nodeType":"ElementaryTypeName","src":"140:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4877,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"178:2:22","nodeType":"VariableDeclaration","scope":4881,"src":"162:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4876,"name":"address","nodeType":"ElementaryTypeName","src":"162:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4879,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"190:6:22","nodeType":"VariableDeclaration","scope":4881,"src":"182:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"182:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:81:22"},"src":"94:104:22"},{"anonymous":false,"eventSelector":"0d51cb9153ff678c00c10a9a9365be8d1dce6eb4d8a0181a613da760afda4e28","id":4891,"name":"ERC721Transferred","nameLocation":"209:17:22","nodeType":"EventDefinition","parameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"243:5:22","nodeType":"VariableDeclaration","scope":4891,"src":"227:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4882,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4885,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"266:4:22","nodeType":"VariableDeclaration","scope":4891,"src":"250:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4884,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4887,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"288:2:22","nodeType":"VariableDeclaration","scope":4891,"src":"272:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4886,"name":"address","nodeType":"ElementaryTypeName","src":"272:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4889,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"300:7:22","nodeType":"VariableDeclaration","scope":4891,"src":"292:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"292:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"226:82:22"},"src":"203:106:22"},{"anonymous":false,"eventSelector":"c9e961ede50ae118725ee30349faceaa91b11400bcd9e190dd3d2a5ad1da6b86","id":4903,"name":"ERC1155Transferred","nameLocation":"320:18:22","nodeType":"EventDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"355:5:22","nodeType":"VariableDeclaration","scope":4903,"src":"339:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4892,"name":"address","nodeType":"ElementaryTypeName","src":"339:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4895,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"378:4:22","nodeType":"VariableDeclaration","scope":4903,"src":"362:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4894,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4897,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"400:2:22","nodeType":"VariableDeclaration","scope":4903,"src":"384:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4896,"name":"address","nodeType":"ElementaryTypeName","src":"384:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4899,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"412:7:22","nodeType":"VariableDeclaration","scope":4903,"src":"404:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"404:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4901,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"429:6:22","nodeType":"VariableDeclaration","scope":4903,"src":"421:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"338:98:22"},"src":"314:123:22"},{"anonymous":false,"eventSelector":"7623cbed549a7782b5623d66d1e86f6b0f89ed654f4b6d4258da5f3f6c5a7bea","id":4917,"name":"ERC1155BatchTransferred","nameLocation":"448:23:22","nodeType":"EventDefinition","parameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"488:5:22","nodeType":"VariableDeclaration","scope":4917,"src":"472:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4904,"name":"address","nodeType":"ElementaryTypeName","src":"472:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4907,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"511:4:22","nodeType":"VariableDeclaration","scope":4917,"src":"495:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4906,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4909,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"533:2:22","nodeType":"VariableDeclaration","scope":4917,"src":"517:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4908,"name":"address","nodeType":"ElementaryTypeName","src":"517:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4912,"indexed":false,"mutability":"mutable","name":"tokenIds","nameLocation":"547:8:22","nodeType":"VariableDeclaration","scope":4917,"src":"537:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4910,"name":"uint256","nodeType":"ElementaryTypeName","src":"537:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4911,"nodeType":"ArrayTypeName","src":"537:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4915,"indexed":false,"mutability":"mutable","name":"amounts","nameLocation":"567:7:22","nodeType":"VariableDeclaration","scope":4917,"src":"557:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4914,"nodeType":"ArrayTypeName","src":"557:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"471:104:22"},"src":"442:134:22"},{"functionSelector":"da3e8ce4","id":4928,"implemented":false,"kind":"function","modifiers":[],"name":"transferERC20","nameLocation":"591:13:22","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"token","nameLocation":"613:5:22","nodeType":"VariableDeclaration","scope":4928,"src":"605:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4918,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4921,"mutability":"mutable","name":"from","nameLocation":"628:4:22","nodeType":"VariableDeclaration","scope":4928,"src":"620:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4920,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4923,"mutability":"mutable","name":"to","nameLocation":"642:2:22","nodeType":"VariableDeclaration","scope":4928,"src":"634:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4922,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4925,"mutability":"mutable","name":"amount","nameLocation":"654:6:22","nodeType":"VariableDeclaration","scope":4928,"src":"646:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4924,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"604:57:22"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[],"src":"670:0:22"},"scope":4955,"src":"582:89:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"789f93f6","id":4939,"implemented":false,"kind":"function","modifiers":[],"name":"transferERC721","nameLocation":"686:14:22","nodeType":"FunctionDefinition","parameters":{"id":4937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"token","nameLocation":"709:5:22","nodeType":"VariableDeclaration","scope":4939,"src":"701:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4929,"name":"address","nodeType":"ElementaryTypeName","src":"701:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4932,"mutability":"mutable","name":"from","nameLocation":"724:4:22","nodeType":"VariableDeclaration","scope":4939,"src":"716:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4931,"name":"address","nodeType":"ElementaryTypeName","src":"716:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4934,"mutability":"mutable","name":"to","nameLocation":"738:2:22","nodeType":"VariableDeclaration","scope":4939,"src":"730:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4933,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4936,"mutability":"mutable","name":"tokenId","nameLocation":"750:7:22","nodeType":"VariableDeclaration","scope":4939,"src":"742:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4935,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"700:58:22"},"returnParameters":{"id":4938,"nodeType":"ParameterList","parameters":[],"src":"767:0:22"},"scope":4955,"src":"677:91:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eae787dc","id":4954,"implemented":false,"kind":"function","modifiers":[],"name":"transferERC1155","nameLocation":"783:15:22","nodeType":"FunctionDefinition","parameters":{"id":4952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4941,"mutability":"mutable","name":"token","nameLocation":"807:5:22","nodeType":"VariableDeclaration","scope":4954,"src":"799:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4940,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4943,"mutability":"mutable","name":"from","nameLocation":"822:4:22","nodeType":"VariableDeclaration","scope":4954,"src":"814:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4942,"name":"address","nodeType":"ElementaryTypeName","src":"814:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4945,"mutability":"mutable","name":"to","nameLocation":"836:2:22","nodeType":"VariableDeclaration","scope":4954,"src":"828:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4944,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4947,"mutability":"mutable","name":"id","nameLocation":"848:2:22","nodeType":"VariableDeclaration","scope":4954,"src":"840:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4946,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4949,"mutability":"mutable","name":"amount","nameLocation":"860:6:22","nodeType":"VariableDeclaration","scope":4954,"src":"852:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"852:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4951,"mutability":"mutable","name":"data","nameLocation":"883:4:22","nodeType":"VariableDeclaration","scope":4954,"src":"868:19:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4950,"name":"bytes","nodeType":"ElementaryTypeName","src":"868:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"798:90:22"},"returnParameters":{"id":4953,"nodeType":"ParameterList","parameters":[],"src":"897:0:22"},"scope":4955,"src":"774:124:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4956,"src":"58:842:22","usedErrors":[],"usedEvents":[4881,4891,4903,4917]}],"src":"32:869:22"},"id":22},"contracts/libraries/Hashes.sol":{"ast":{"absolutePath":"contracts/libraries/Hashes.sol","exportedSymbols":{"Hashes":[4995]},"id":4996,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4957,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:23"},{"id":4958,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"57:19:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Hashes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4995,"linearizedBaseContracts":[4995],"name":"Hashes","nameLocation":"86:6:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4981,"nodeType":"Block","src":"473:85:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"490:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"494:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"490:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4976,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"546:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"549:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4975,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"526:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"526:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"490:61:23","trueExpression":{"arguments":[{"id":4972,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"518:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4973,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"521:1:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4971,"name":"_efficientKeccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"498:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"498:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4967,"id":4980,"nodeType":"Return","src":"483:68:23"}]},"documentation":{"id":4959,"nodeType":"StructuredDocumentation","src":"99:257:23","text":" @dev Commutative Keccak256 hash of a sorted pair of bytes32. Frequently used when working with merkle proofs.\n NOTE: Equivalent to the `standardNodeHash` in our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]."},"id":4982,"implemented":true,"kind":"function","modifiers":[],"name":"commutativeKeccak256","nameLocation":"370:20:23","nodeType":"FunctionDefinition","parameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4961,"mutability":"mutable","name":"a","nameLocation":"399:1:23","nodeType":"VariableDeclaration","scope":4982,"src":"391:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"391:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4963,"mutability":"mutable","name":"b","nameLocation":"410:1:23","nodeType":"VariableDeclaration","scope":4982,"src":"402:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"402:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"390:22:23"},"returnParameters":{"id":4967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4982,"src":"460:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"460:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"459:9:23"},"scope":4995,"src":"361:197:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4993,"nodeType":"Block","src":"794:135:23","statements":[{"AST":{"nativeSrc":"813:110:23","nodeType":"YulBlock","src":"813:110:23","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"834:4:23","nodeType":"YulLiteral","src":"834:4:23","type":"","value":"0x00"},{"name":"a","nativeSrc":"840:1:23","nodeType":"YulIdentifier","src":"840:1:23"}],"functionName":{"name":"mstore","nativeSrc":"827:6:23","nodeType":"YulIdentifier","src":"827:6:23"},"nativeSrc":"827:15:23","nodeType":"YulFunctionCall","src":"827:15:23"},"nativeSrc":"827:15:23","nodeType":"YulExpressionStatement","src":"827:15:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"862:4:23","nodeType":"YulLiteral","src":"862:4:23","type":"","value":"0x20"},{"name":"b","nativeSrc":"868:1:23","nodeType":"YulIdentifier","src":"868:1:23"}],"functionName":{"name":"mstore","nativeSrc":"855:6:23","nodeType":"YulIdentifier","src":"855:6:23"},"nativeSrc":"855:15:23","nodeType":"YulFunctionCall","src":"855:15:23"},"nativeSrc":"855:15:23","nodeType":"YulExpressionStatement","src":"855:15:23"},{"nativeSrc":"883:30:23","nodeType":"YulAssignment","src":"883:30:23","value":{"arguments":[{"kind":"number","nativeSrc":"902:4:23","nodeType":"YulLiteral","src":"902:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"908:4:23","nodeType":"YulLiteral","src":"908:4:23","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"892:9:23","nodeType":"YulIdentifier","src":"892:9:23"},"nativeSrc":"892:21:23","nodeType":"YulFunctionCall","src":"892:21:23"},"variableNames":[{"name":"value","nativeSrc":"883:5:23","nodeType":"YulIdentifier","src":"883:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4985,"isOffset":false,"isSlot":false,"src":"840:1:23","valueSize":1},{"declaration":4987,"isOffset":false,"isSlot":false,"src":"868:1:23","valueSize":1},{"declaration":4990,"isOffset":false,"isSlot":false,"src":"883:5:23","valueSize":1}],"id":4992,"nodeType":"InlineAssembly","src":"804:119:23"}]},"documentation":{"id":4983,"nodeType":"StructuredDocumentation","src":"564:109:23","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":4994,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientKeccak256","nameLocation":"687:19:23","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"a","nameLocation":"715:1:23","nodeType":"VariableDeclaration","scope":4994,"src":"707:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4984,"name":"bytes32","nodeType":"ElementaryTypeName","src":"707:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4987,"mutability":"mutable","name":"b","nameLocation":"726:1:23","nodeType":"VariableDeclaration","scope":4994,"src":"718:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"718:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"706:22:23"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"value","nameLocation":"783:5:23","nodeType":"VariableDeclaration","scope":4994,"src":"775:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"775:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"774:15:23"},"scope":4995,"src":"678:251:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4996,"src":"78:853:23","usedErrors":[],"usedEvents":[]}],"src":"32:900:23"},"id":23},"contracts/libraries/LibAsset.sol":{"ast":{"absolutePath":"contracts/libraries/LibAsset.sol","exportedSymbols":{"LibAsset":[5088]},"id":5089,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4997,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"LibAsset","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5088,"linearizedBaseContracts":[5088],"name":"LibAsset","nameLocation":"66:8:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"LibAsset.AssetType","id":5002,"members":[{"id":4998,"name":"NATIVE","nameLocation":"106:6:24","nodeType":"EnumValue","src":"106:6:24"},{"id":4999,"name":"ERC20","nameLocation":"122:5:24","nodeType":"EnumValue","src":"122:5:24"},{"id":5000,"name":"ERC1155","nameLocation":"137:7:24","nodeType":"EnumValue","src":"137:7:24"},{"id":5001,"name":"ERC721","nameLocation":"154:6:24","nodeType":"EnumValue","src":"154:6:24"}],"name":"AssetType","nameLocation":"86:9:24","nodeType":"EnumDefinition","src":"81:85:24"},{"constant":true,"id":5007,"mutability":"constant","name":"ASSET_TYPE_HASH","nameLocation":"197:15:24","nodeType":"VariableDeclaration","scope":5088,"src":"172:168:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5003,"name":"bytes32","nodeType":"ElementaryTypeName","src":"172:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41737365742875696e7438206173736574547970652c6164647265737320636f6e7472616374416464726573732c75696e7432353620617373657449642c75696e74323536206173736574416d6f756e7429","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:84:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e4f52e5739dbefd226dcbefef0e563115bc2b92726a648e213cb8cde30b11a6","typeString":"literal_string \"Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\""},"value":"Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e4f52e5739dbefd226dcbefef0e563115bc2b92726a648e213cb8cde30b11a6","typeString":"literal_string \"Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\""}],"id":5004,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"223:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"223:117:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"LibAsset.Asset","id":5017,"members":[{"constant":false,"id":5010,"mutability":"mutable","name":"assetType","nameLocation":"380:9:24","nodeType":"VariableDeclaration","scope":5017,"src":"370:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},"typeName":{"id":5009,"nodeType":"UserDefinedTypeName","pathNode":{"id":5008,"name":"AssetType","nameLocations":["370:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":5002,"src":"370:9:24"},"referencedDeclaration":5002,"src":"370:9:24","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"visibility":"internal"},{"constant":false,"id":5012,"mutability":"mutable","name":"contractAddress","nameLocation":"407:15:24","nodeType":"VariableDeclaration","scope":5017,"src":"399:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5011,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"assetId","nameLocation":"440:7:24","nodeType":"VariableDeclaration","scope":5017,"src":"432:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5013,"name":"uint256","nodeType":"ElementaryTypeName","src":"432:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5016,"mutability":"mutable","name":"assetAmount","nameLocation":"465:11:24","nodeType":"VariableDeclaration","scope":5017,"src":"457:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"457:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Asset","nameLocation":"354:5:24","nodeType":"StructDefinition","scope":5088,"src":"347:136:24","visibility":"public"},{"body":{"id":5040,"nodeType":"Block","src":"555:296:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":5028,"name":"ASSET_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"643:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5029,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"680:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":5030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"686:9:24","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"680:15:24","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},{"expression":{"id":5031,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"717:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":5032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"723:15:24","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"717:21:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5033,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"760:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":5034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"766:7:24","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"760:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5035,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"795:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset memory"}},"id":5036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"801:11:24","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"795:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5026,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"611:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"615:6:24","memberName":"encode","nodeType":"MemberAccess","src":"611:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"611:219:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5025,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"584:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"584:260:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5024,"id":5039,"nodeType":"Return","src":"565:279:24"}]},"id":5041,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"498:4:24","nodeType":"FunctionDefinition","parameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"asset","nameLocation":"516:5:24","nodeType":"VariableDeclaration","scope":5041,"src":"503:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_memory_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":5019,"nodeType":"UserDefinedTypeName","pathNode":{"id":5018,"name":"Asset","nameLocations":["503:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"503:5:24"},"referencedDeclaration":5017,"src":"503:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"src":"502:20:24"},"returnParameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5041,"src":"546:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"546:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"545:9:24"},"scope":5088,"src":"489:362:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5086,"nodeType":"Block","src":"986:540:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5051,"name":"requestedAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1017:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1032:9:24","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"1017:24:24","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5053,"name":"offeredAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"1045:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1058:9:24","memberName":"assetType","nodeType":"MemberAccess","referencedDeclaration":5010,"src":"1045:22:24","typeDescriptions":{"typeIdentifier":"t_enum$_AssetType_$5002","typeString":"enum LibAsset.AssetType"}},"src":"1017:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365742074797065206d69736d61746368","id":5056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1081:21:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c05f0d1a41799bc44e518730e4969fc5f7cc7fe6bf34e39ea0b34528f8eea9d","typeString":"literal_string \"Asset type mismatch\""},"value":"Asset type mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9c05f0d1a41799bc44e518730e4969fc5f7cc7fe6bf34e39ea0b34528f8eea9d","typeString":"literal_string \"Asset type mismatch\""}],"id":5050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"996:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"996:116:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5058,"nodeType":"ExpressionStatement","src":"996:116:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5060,"name":"requestedAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1143:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1158:15:24","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"1143:30:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5062,"name":"offeredAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"1177:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1190:15:24","memberName":"contractAddress","nodeType":"MemberAccess","referencedDeclaration":5012,"src":"1177:28:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1143:62:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74726163742061646472657373206d69736d61746368","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1219:27:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba49cdaae06b2e9153ca4ae1f5ff128f7ab01db8eebc83482ce2d4a93699a2e6","typeString":"literal_string \"Contract address mismatch\""},"value":"Contract address mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba49cdaae06b2e9153ca4ae1f5ff128f7ab01db8eebc83482ce2d4a93699a2e6","typeString":"literal_string \"Contract address mismatch\""}],"id":5059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1122:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1122:134:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5067,"nodeType":"ExpressionStatement","src":"1122:134:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5069,"name":"requestedAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1287:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1302:7:24","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"1287:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5071,"name":"offeredAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"1313:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1326:7:24","memberName":"assetId","nodeType":"MemberAccess","referencedDeclaration":5014,"src":"1313:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1287:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4173736574204944206d69736d61746368","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1347:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f72881e37f186c9b9c2566dfc1ae9d1b603706d0297afa14bd1b6367a626e3e","typeString":"literal_string \"Asset ID mismatch\""},"value":"Asset ID mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2f72881e37f186c9b9c2566dfc1ae9d1b603706d0297afa14bd1b6367a626e3e","typeString":"literal_string \"Asset ID mismatch\""}],"id":5068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1266:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1266:110:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5076,"nodeType":"ExpressionStatement","src":"1266:110:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5078,"name":"offeredAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5047,"src":"1407:12:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1420:11:24","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"1407:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":5080,"name":"requestedAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"1435:14:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1450:11:24","memberName":"assetAmount","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"1435:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1407:54:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f66666572656420616d6f756e74206578636565647320726571756573746564","id":5083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1475:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2315557a9cbfbf45741ff5792ea2d09b997f950bcfc8c2fc5a4de55d6374852a","typeString":"literal_string \"Offered amount exceeds requested\""},"value":"Offered amount exceeds requested"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2315557a9cbfbf45741ff5792ea2d09b997f950bcfc8c2fc5a4de55d6374852a","typeString":"literal_string \"Offered amount exceeds requested\""}],"id":5077,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1386:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1386:133:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5085,"nodeType":"ExpressionStatement","src":"1386:133:24"}]},"id":5087,"implemented":true,"kind":"function","modifiers":[],"name":"validateCompatibleAsset","nameLocation":"866:23:24","nodeType":"FunctionDefinition","parameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"requestedAsset","nameLocation":"914:14:24","nodeType":"VariableDeclaration","scope":5087,"src":"899:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":5043,"nodeType":"UserDefinedTypeName","pathNode":{"id":5042,"name":"Asset","nameLocations":["899:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"899:5:24"},"referencedDeclaration":5017,"src":"899:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"},{"constant":false,"id":5047,"mutability":"mutable","name":"offeredAsset","nameLocation":"953:12:24","nodeType":"VariableDeclaration","scope":5087,"src":"938:27:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":5046,"nodeType":"UserDefinedTypeName","pathNode":{"id":5045,"name":"Asset","nameLocations":["938:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"938:5:24"},"referencedDeclaration":5017,"src":"938:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"}],"src":"889:82:24"},"returnParameters":{"id":5049,"nodeType":"ParameterList","parameters":[],"src":"986:0:24"},"scope":5088,"src":"857:669:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5089,"src":"58:1470:24","usedErrors":[],"usedEvents":[]}],"src":"32:1497:24"},"id":24},"contracts/libraries/LibOrder.sol":{"ast":{"absolutePath":"contracts/libraries/LibOrder.sol","exportedSymbols":{"ECDSA":[2225],"LibAsset":[5088],"LibOrder":[5280],"Math":[3307],"SignedMath":[3412],"Strings":[1859]},"id":5281,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5090,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":5091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5281,"sourceUnit":2226,"src":"58:62:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LibAsset.sol","file":"./LibAsset.sol","id":5092,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5281,"sourceUnit":5089,"src":"121:24:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LibOrder","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5280,"linearizedBaseContracts":[5280],"name":"LibOrder","nameLocation":"155:8:25","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5095,"libraryName":{"id":5093,"name":"ECDSA","nameLocations":["176:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"176:5:25"},"nodeType":"UsingForDirective","src":"170:24:25","typeName":{"id":5094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"186:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"id":5100,"mutability":"constant","name":"ORDER_ITEM_TYPEHASH","nameLocation":"225:19:25","nodeType":"VariableDeclaration","scope":5280,"src":"200:240:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"200:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f726465724974656d284173736574206d616b6541737365742c41737365742074616b6541737365742c75696e743235362073746172742c75696e7432353620656e642941737365742875696e7438206173736574547970652c6164647265737320636f6e7472616374416464726573732c75696e7432353620617373657449642c75696e74323536206173736574416d6f756e7429","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:152:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_e28cfd2e1bcec04840c1ddb765a2c756cf3e42aef44e48ddda10af78ed9a1c44","typeString":"literal_string \"OrderItem(Asset makeAsset,Asset takeAsset,uint256 start,uint256 end)Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\""},"value":"OrderItem(Asset makeAsset,Asset takeAsset,uint256 start,uint256 end)Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e28cfd2e1bcec04840c1ddb765a2c756cf3e42aef44e48ddda10af78ed9a1c44","typeString":"literal_string \"OrderItem(Asset makeAsset,Asset takeAsset,uint256 start,uint256 end)Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\""}],"id":5097,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"255:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"255:185:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":5105,"mutability":"constant","name":"ORDER_TYPEHASH","nameLocation":"472:14:25","nodeType":"VariableDeclaration","scope":5280,"src":"447:329:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"447:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f726465722875696e7438206f72646572547970652c4f726465724974656d5b5d206974656d732c61646472657373206d616b65722c616464726573732074616b65722c6279746573333220726f6f742c75696e743235362073616c74294f726465724974656d284173736574206d616b6541737365742c41737365742074616b6541737365742c75696e743235362073746172742c75696e7432353620656e642941737365742875696e7438206173736574547970652c6164647265737320636f6e7472616374416464726573732c75696e7432353620617373657449642c75696e74323536206173736574416d6f756e7429","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"520:246:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c8ffd199dde1e3c1f0d71dae647c455e0da36831ccd370e21bb7d22d370959","typeString":"literal_string \"Order(uint8 orderType,OrderItem[] items,address maker,address taker,bytes32 root,uint256 salt)OrderItem(Asset makeAsset,Asset takeAsset,uint256 start,uint256 end)Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\""},"value":"Order(uint8 orderType,OrderItem[] items,address maker,address taker,bytes32 root,uint256 salt)OrderItem(Asset makeAsset,Asset takeAsset,uint256 start,uint256 end)Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_06c8ffd199dde1e3c1f0d71dae647c455e0da36831ccd370e21bb7d22d370959","typeString":"literal_string \"Order(uint8 orderType,OrderItem[] items,address maker,address taker,bytes32 root,uint256 salt)OrderItem(Asset makeAsset,Asset takeAsset,uint256 start,uint256 end)Asset(uint8 assetType,address contractAddress,uint256 assetId,uint256 assetAmount)\""}],"id":5102,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"497:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"497:279:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"LibOrder.OrderType","id":5109,"members":[{"id":5106,"name":"BID","nameLocation":"808:3:25","nodeType":"EnumValue","src":"808:3:25"},{"id":5107,"name":"ASK","nameLocation":"821:3:25","nodeType":"EnumValue","src":"821:3:25"},{"id":5108,"name":"BULK","nameLocation":"834:4:25","nodeType":"EnumValue","src":"834:4:25"}],"name":"OrderType","nameLocation":"788:9:25","nodeType":"EnumDefinition","src":"783:61:25"},{"canonicalName":"LibOrder.OrderItem","id":5120,"members":[{"constant":false,"id":5112,"mutability":"mutable","name":"makeAsset","nameLocation":"892:9:25","nodeType":"VariableDeclaration","scope":5120,"src":"877:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":5111,"nodeType":"UserDefinedTypeName","pathNode":{"id":5110,"name":"LibAsset.Asset","nameLocations":["877:8:25","886:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"877:14:25"},"referencedDeclaration":5017,"src":"877:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"},{"constant":false,"id":5115,"mutability":"mutable","name":"takeAsset","nameLocation":"926:9:25","nodeType":"VariableDeclaration","scope":5120,"src":"911:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"},"typeName":{"id":5114,"nodeType":"UserDefinedTypeName","pathNode":{"id":5113,"name":"LibAsset.Asset","nameLocations":["911:8:25","920:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"911:14:25"},"referencedDeclaration":5017,"src":"911:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_storage_ptr","typeString":"struct LibAsset.Asset"}},"visibility":"internal"},{"constant":false,"id":5117,"mutability":"mutable","name":"start","nameLocation":"953:5:25","nodeType":"VariableDeclaration","scope":5120,"src":"945:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"945:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5119,"mutability":"mutable","name":"end","nameLocation":"976:3:25","nodeType":"VariableDeclaration","scope":5120,"src":"968:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"968:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"OrderItem","nameLocation":"857:9:25","nodeType":"StructDefinition","scope":5280,"src":"850:136:25","visibility":"public"},{"canonicalName":"LibOrder.Order","id":5138,"members":[{"constant":false,"id":5123,"mutability":"mutable","name":"orderType","nameLocation":"1025:9:25","nodeType":"VariableDeclaration","scope":5138,"src":"1015:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"},"typeName":{"id":5122,"nodeType":"UserDefinedTypeName","pathNode":{"id":5121,"name":"OrderType","nameLocations":["1015:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":5109,"src":"1015:9:25"},"referencedDeclaration":5109,"src":"1015:9:25","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"}},"visibility":"internal"},{"constant":false,"id":5127,"mutability":"mutable","name":"items","nameLocation":"1056:5:25","nodeType":"VariableDeclaration","scope":5138,"src":"1044:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_storage_$dyn_storage_ptr","typeString":"struct LibOrder.OrderItem[]"},"typeName":{"baseType":{"id":5125,"nodeType":"UserDefinedTypeName","pathNode":{"id":5124,"name":"OrderItem","nameLocations":["1044:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"1044:9:25"},"referencedDeclaration":5120,"src":"1044:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"id":5126,"nodeType":"ArrayTypeName","src":"1044:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_storage_$dyn_storage_ptr","typeString":"struct LibOrder.OrderItem[]"}},"visibility":"internal"},{"constant":false,"id":5129,"mutability":"mutable","name":"maker","nameLocation":"1079:5:25","nodeType":"VariableDeclaration","scope":5138,"src":"1071:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5128,"name":"address","nodeType":"ElementaryTypeName","src":"1071:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"taker","nameLocation":"1102:5:25","nodeType":"VariableDeclaration","scope":5138,"src":"1094:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5130,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5133,"mutability":"mutable","name":"root","nameLocation":"1125:4:25","nodeType":"VariableDeclaration","scope":5138,"src":"1117:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1117:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5135,"mutability":"mutable","name":"salt","nameLocation":"1147:4:25","nodeType":"VariableDeclaration","scope":5138,"src":"1139:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1139:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"signature","nameLocation":"1167:9:25","nodeType":"VariableDeclaration","scope":5138,"src":"1161:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5136,"name":"bytes","nodeType":"ElementaryTypeName","src":"1161:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Order","nameLocation":"999:5:25","nodeType":"StructDefinition","scope":5280,"src":"992:191:25","visibility":"public"},{"body":{"id":5167,"nodeType":"Block","src":"1283:310:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":5149,"name":"ORDER_ITEM_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"1371:19:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":5152,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"1426:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1431:9:25","memberName":"makeAsset","nodeType":"MemberAccess","referencedDeclaration":5112,"src":"1426:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}],"expression":{"id":5150,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"1412:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1421:4:25","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":5041,"src":"1412:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Asset_$5017_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibAsset.Asset memory) pure returns (bytes32)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":5157,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"1477:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1482:9:25","memberName":"takeAsset","nodeType":"MemberAccess","referencedDeclaration":5115,"src":"1477:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Asset_$5017_calldata_ptr","typeString":"struct LibAsset.Asset calldata"}],"expression":{"id":5155,"name":"LibAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"1463:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibAsset_$5088_$","typeString":"type(library LibAsset)"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1472:4:25","memberName":"hash","nodeType":"MemberAccess","referencedDeclaration":5041,"src":"1463:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Asset_$5017_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibAsset.Asset memory) pure returns (bytes32)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1463:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5160,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"1514:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1519:5:25","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":5117,"src":"1514:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5162,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"1546:4:25","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1551:3:25","memberName":"end","nodeType":"MemberAccess","referencedDeclaration":5119,"src":"1546:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5147,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1339:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:6:25","memberName":"encode","nodeType":"MemberAccess","src":"1339:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1339:233:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5146,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1312:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1312:274:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5145,"id":5166,"nodeType":"Return","src":"1293:293:25"}]},"id":5168,"implemented":true,"kind":"function","modifiers":[],"name":"hashOrderItem","nameLocation":"1198:13:25","nodeType":"FunctionDefinition","parameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"item","nameLocation":"1240:4:25","nodeType":"VariableDeclaration","scope":5168,"src":"1221:23:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem"},"typeName":{"id":5140,"nodeType":"UserDefinedTypeName","pathNode":{"id":5139,"name":"OrderItem","nameLocations":["1221:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":5120,"src":"1221:9:25"},"referencedDeclaration":5120,"src":"1221:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_storage_ptr","typeString":"struct LibOrder.OrderItem"}},"visibility":"internal"}],"src":"1211:39:25"},"returnParameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5168,"src":"1274:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1274:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1273:9:25"},"scope":5280,"src":"1189:404:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5241,"nodeType":"Block","src":"1667:611:25","statements":[{"assignments":[5180],"declarations":[{"constant":false,"id":5180,"mutability":"mutable","name":"itemHashes","nameLocation":"1694:10:25","nodeType":"VariableDeclaration","scope":5241,"src":"1677:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1677:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5179,"nodeType":"ArrayTypeName","src":"1677:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":5188,"initialValue":{"arguments":[{"expression":{"expression":{"id":5184,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"1721:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1727:5:25","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"1721:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:6:25","memberName":"length","nodeType":"MemberAccess","src":"1721:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1707:13:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":5181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1711:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5182,"nodeType":"ArrayTypeName","src":"1711:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1707:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1677:63:25"},{"body":{"id":5212,"nodeType":"Block","src":"1799:70:25","statements":[{"expression":{"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5201,"name":"itemHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"1813:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5203,"indexExpression":{"id":5202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"1824:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1813:13:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":5205,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"1843:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1849:5:25","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"1843:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":5208,"indexExpression":{"id":5207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"1855:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1843:14:25","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_OrderItem_$5120_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata"}],"id":5204,"name":"hashOrderItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"1829:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_OrderItem_$5120_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct LibOrder.OrderItem calldata) pure returns (bytes32)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1813:45:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5211,"nodeType":"ExpressionStatement","src":"1813:45:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"1770:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":5194,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"1774:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:5:25","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"1774:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_calldata_ptr_$dyn_calldata_ptr","typeString":"struct LibOrder.OrderItem calldata[] calldata"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1786:6:25","memberName":"length","nodeType":"MemberAccess","src":"1774:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1770:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5213,"initializationExpression":{"assignments":[5190],"declarations":[{"constant":false,"id":5190,"mutability":"mutable","name":"i","nameLocation":"1763:1:25","nodeType":"VariableDeclaration","scope":5213,"src":"1755:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1755:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5192,"initialValue":{"hexValue":"30","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1767:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1755:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1794:3:25","subExpression":{"id":5198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"1794:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5200,"nodeType":"ExpressionStatement","src":"1794:3:25"},"nodeType":"ForStatement","src":"1750:119:25"},{"assignments":[5215],"declarations":[{"constant":false,"id":5215,"mutability":"mutable","name":"itemsHash","nameLocation":"1887:9:25","nodeType":"VariableDeclaration","scope":5241,"src":"1879:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1879:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5222,"initialValue":{"arguments":[{"arguments":[{"id":5219,"name":"itemHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"1926:10:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"expression":{"id":5217,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1909:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1913:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"1909:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5216,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1899:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1879:59:25"},{"expression":{"arguments":[{"arguments":[{"id":5226,"name":"ORDER_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"2027:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5227,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"2063:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2069:9:25","memberName":"orderType","nodeType":"MemberAccess","referencedDeclaration":5123,"src":"2063:15:25","typeDescriptions":{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"}},{"id":5229,"name":"itemsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"2100:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5230,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"2131:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2137:5:25","memberName":"maker","nodeType":"MemberAccess","referencedDeclaration":5129,"src":"2131:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5232,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"2164:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2170:5:25","memberName":"taker","nodeType":"MemberAccess","referencedDeclaration":5131,"src":"2164:11:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5234,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"2197:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2203:4:25","memberName":"root","nodeType":"MemberAccess","referencedDeclaration":5133,"src":"2197:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5236,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"2229:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order calldata"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2235:4:25","memberName":"salt","nodeType":"MemberAccess","referencedDeclaration":5135,"src":"2229:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_enum$_OrderType_$5109","typeString":"enum LibOrder.OrderType"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5224,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1995:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1999:6:25","memberName":"encode","nodeType":"MemberAccess","src":"1995:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:262:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5223,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1968:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1968:303:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5175,"id":5240,"nodeType":"Return","src":"1949:322:25"}]},"id":5242,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"1608:4:25","nodeType":"FunctionDefinition","parameters":{"id":5172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5171,"mutability":"mutable","name":"order","nameLocation":"1628:5:25","nodeType":"VariableDeclaration","scope":5242,"src":"1613:20:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_calldata_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":5170,"nodeType":"UserDefinedTypeName","pathNode":{"id":5169,"name":"Order","nameLocations":["1613:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"1613:5:25"},"referencedDeclaration":5138,"src":"1613:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"}],"src":"1612:22:25"},"returnParameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5242,"src":"1658:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1658:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1657:9:25"},"scope":5280,"src":"1599:679:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5258,"nodeType":"Block","src":"2404:77:25","statements":[{"expression":{"arguments":[{"id":5255,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"2464:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5251,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5244,"src":"2421:9:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2431:22:25","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":2170,"src":"2421:32:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2456:7:25","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"2421:42:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2421:53:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5250,"id":5257,"nodeType":"Return","src":"2414:60:25"}]},"id":5259,"implemented":true,"kind":"function","modifiers":[],"name":"recoverSigner","nameLocation":"2293:13:25","nodeType":"FunctionDefinition","parameters":{"id":5247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"orderHash","nameLocation":"2324:9:25","nodeType":"VariableDeclaration","scope":5259,"src":"2316:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2316:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5246,"mutability":"mutable","name":"signature","nameLocation":"2356:9:25","nodeType":"VariableDeclaration","scope":5259,"src":"2343:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5245,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2306:65:25"},"returnParameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5259,"src":"2395:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5248,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2394:9:25"},"scope":5280,"src":"2284:197:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5278,"nodeType":"Block","src":"2606:73:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5269,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2623:5:25","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2629:9:25","memberName":"timestamp","nodeType":"MemberAccess","src":"2623:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"expression":{"id":5271,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"2641:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_memory_ptr","typeString":"struct LibOrder.Order memory"}},"id":5272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2647:5:25","memberName":"items","nodeType":"MemberAccess","referencedDeclaration":5127,"src":"2641:11:25","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_OrderItem_$5120_memory_ptr_$dyn_memory_ptr","typeString":"struct LibOrder.OrderItem memory[] memory"}},"id":5274,"indexExpression":{"id":5273,"name":"orderItemIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"2653:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2641:27:25","typeDescriptions":{"typeIdentifier":"t_struct$_OrderItem_$5120_memory_ptr","typeString":"struct LibOrder.OrderItem memory"}},"id":5275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2669:3:25","memberName":"end","nodeType":"MemberAccess","referencedDeclaration":5119,"src":"2641:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2623:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5268,"id":5277,"nodeType":"Return","src":"2616:56:25"}]},"id":5279,"implemented":true,"kind":"function","modifiers":[],"name":"isOrderExpired","nameLocation":"2496:14:25","nodeType":"FunctionDefinition","parameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"order","nameLocation":"2533:5:25","nodeType":"VariableDeclaration","scope":5279,"src":"2520:18:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_memory_ptr","typeString":"struct LibOrder.Order"},"typeName":{"id":5261,"nodeType":"UserDefinedTypeName","pathNode":{"id":5260,"name":"Order","nameLocations":["2520:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":5138,"src":"2520:5:25"},"referencedDeclaration":5138,"src":"2520:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$5138_storage_ptr","typeString":"struct LibOrder.Order"}},"visibility":"internal"},{"constant":false,"id":5264,"mutability":"mutable","name":"orderItemIndex","nameLocation":"2556:14:25","nodeType":"VariableDeclaration","scope":5279,"src":"2548:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2548:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2510:66:25"},"returnParameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5279,"src":"2600:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5266,"name":"bool","nodeType":"ElementaryTypeName","src":"2600:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2599:6:25"},"scope":5280,"src":"2487:192:25","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5281,"src":"147:2534:25","usedErrors":[],"usedEvents":[]}],"src":"32:2650:25"},"id":25},"contracts/libraries/MerkleProof.sol":{"ast":{"absolutePath":"contracts/libraries/MerkleProof.sol","exportedSymbols":{"Hashes":[4995],"MerkleProof":[5573]},"id":5574,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5282,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"id":5283,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"57:19:26"},{"absolutePath":"contracts/libraries/Hashes.sol","file":"./Hashes.sol","id":5284,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5574,"sourceUnit":4996,"src":"78:22:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":5573,"linearizedBaseContracts":[5573],"name":"MerkleProof","nameLocation":"111:11:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":5304,"nodeType":"Block","src":"671:57:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5298,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"701:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5299,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"708:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5297,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[5346,5428],"referencedDeclaration":5346,"src":"688:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"688:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5301,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"717:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"688:33:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5296,"id":5303,"nodeType":"Return","src":"681:40:26"}]},"documentation":{"id":5285,"nodeType":"StructuredDocumentation","src":"129:410:26","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":5305,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"553:6:26","nodeType":"FunctionDefinition","parameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"proof","nameLocation":"586:5:26","nodeType":"VariableDeclaration","scope":5305,"src":"569:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"569:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5287,"nodeType":"ArrayTypeName","src":"569:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5290,"mutability":"mutable","name":"root","nameLocation":"609:4:26","nodeType":"VariableDeclaration","scope":5305,"src":"601:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"601:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5292,"mutability":"mutable","name":"leaf","nameLocation":"631:4:26","nodeType":"VariableDeclaration","scope":5305,"src":"623:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"623:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:82:26"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5305,"src":"665:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5294,"name":"bool","nodeType":"ElementaryTypeName","src":"665:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"664:6:26"},"scope":5573,"src":"544:184:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5345,"nodeType":"Block","src":"1249:216:26","statements":[{"assignments":[5317],"declarations":[{"constant":false,"id":5317,"mutability":"mutable","name":"computedHash","nameLocation":"1267:12:26","nodeType":"VariableDeclaration","scope":5345,"src":"1259:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1259:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5319,"initialValue":{"id":5318,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"1282:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1259:27:26"},{"body":{"id":5341,"nodeType":"Block","src":"1339:91:26","statements":[{"expression":{"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5331,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"1353:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5334,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"1396:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5335,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"1410:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5337,"indexExpression":{"id":5336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"1416:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1410:8:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5332,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"1368:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$4995_$","typeString":"type(library Hashes)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1375:20:26","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":4982,"src":"1368:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1368:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1353:66:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5340,"nodeType":"ExpressionStatement","src":"1353:66:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"1316:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5325,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"1320:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1326:6:26","memberName":"length","nodeType":"MemberAccess","src":"1320:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1316:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5342,"initializationExpression":{"assignments":[5321],"declarations":[{"constant":false,"id":5321,"mutability":"mutable","name":"i","nameLocation":"1309:1:26","nodeType":"VariableDeclaration","scope":5342,"src":"1301:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5323,"initialValue":{"hexValue":"30","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1313:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1301:13:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1334:3:26","subExpression":{"id":5328,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5321,"src":"1334:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5330,"nodeType":"ExpressionStatement","src":"1334:3:26"},"nodeType":"ForStatement","src":"1296:134:26"},{"expression":{"id":5343,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"1446:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5315,"id":5344,"nodeType":"Return","src":"1439:19:26"}]},"documentation":{"id":5306,"nodeType":"StructuredDocumentation","src":"734:390:26","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with the default hashing function."},"id":5346,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1138:12:26","nodeType":"FunctionDefinition","parameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"proof","nameLocation":"1168:5:26","nodeType":"VariableDeclaration","scope":5346,"src":"1151:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1151:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5308,"nodeType":"ArrayTypeName","src":"1151:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5311,"mutability":"mutable","name":"leaf","nameLocation":"1183:4:26","nodeType":"VariableDeclaration","scope":5346,"src":"1175:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1175:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1150:38:26"},"returnParameters":{"id":5315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5346,"src":"1236:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1236:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1235:9:26"},"scope":5573,"src":"1129:336:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5377,"nodeType":"Block","src":"2076:65:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5370,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"2106:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":5371,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"2113:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5372,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"2119:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":5369,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[5346,5428],"referencedDeclaration":5428,"src":"2093:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5374,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"2130:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2093:41:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5368,"id":5376,"nodeType":"Return","src":"2086:48:26"}]},"documentation":{"id":5347,"nodeType":"StructuredDocumentation","src":"1471:407:26","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":5378,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1892:6:26","nodeType":"FunctionDefinition","parameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"proof","nameLocation":"1925:5:26","nodeType":"VariableDeclaration","scope":5378,"src":"1908:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5349,"nodeType":"ArrayTypeName","src":"1908:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5352,"mutability":"mutable","name":"root","nameLocation":"1948:4:26","nodeType":"VariableDeclaration","scope":5378,"src":"1940:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1940:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5354,"mutability":"mutable","name":"leaf","nameLocation":"1970:4:26","nodeType":"VariableDeclaration","scope":5378,"src":"1962:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1962:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5364,"mutability":"mutable","name":"hasher","nameLocation":"2034:6:26","nodeType":"VariableDeclaration","scope":5378,"src":"1984:56:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5363,"nodeType":"FunctionTypeName","parameterTypes":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5363,"src":"1993:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1993:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5363,"src":"2002:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2002:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1992:18:26"},"returnParameterTypes":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5363,"src":"2025:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2025:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2024:9:26"},"src":"1984:56:26","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"1898:148:26"},"returnParameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5378,"src":"2070:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5366,"name":"bool","nodeType":"ElementaryTypeName","src":"2070:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2069:6:26"},"scope":5573,"src":"1883:258:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5427,"nodeType":"Block","src":"2719:195:26","statements":[{"assignments":[5400],"declarations":[{"constant":false,"id":5400,"mutability":"mutable","name":"computedHash","nameLocation":"2737:12:26","nodeType":"VariableDeclaration","scope":5427,"src":"2729:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2729:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5402,"initialValue":{"id":5401,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5384,"src":"2752:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2729:27:26"},{"body":{"id":5423,"nodeType":"Block","src":"2809:70:26","statements":[{"expression":{"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5414,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"2823:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5416,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"2845:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5417,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"2859:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5419,"indexExpression":{"id":5418,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"2865:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2859:8:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5415,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"2838:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":5420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2838:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2823:45:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5422,"nodeType":"ExpressionStatement","src":"2823:45:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"2786:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5408,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5382,"src":"2790:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2796:6:26","memberName":"length","nodeType":"MemberAccess","src":"2790:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2786:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5424,"initializationExpression":{"assignments":[5404],"declarations":[{"constant":false,"id":5404,"mutability":"mutable","name":"i","nameLocation":"2779:1:26","nodeType":"VariableDeclaration","scope":5424,"src":"2771:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"2771:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5406,"initialValue":{"hexValue":"30","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2783:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2771:13:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2804:3:26","subExpression":{"id":5411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"2804:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5413,"nodeType":"ExpressionStatement","src":"2804:3:26"},"nodeType":"ForStatement","src":"2766:113:26"},{"expression":{"id":5425,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"2895:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5398,"id":5426,"nodeType":"Return","src":"2888:19:26"}]},"documentation":{"id":5379,"nodeType":"StructuredDocumentation","src":"2147:387:26","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in memory with a custom hashing function."},"id":5428,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"2548:12:26","nodeType":"FunctionDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5382,"mutability":"mutable","name":"proof","nameLocation":"2587:5:26","nodeType":"VariableDeclaration","scope":5428,"src":"2570:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2570:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5381,"nodeType":"ArrayTypeName","src":"2570:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5384,"mutability":"mutable","name":"leaf","nameLocation":"2610:4:26","nodeType":"VariableDeclaration","scope":5428,"src":"2602:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2602:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5394,"mutability":"mutable","name":"hasher","nameLocation":"2674:6:26","nodeType":"VariableDeclaration","scope":5428,"src":"2624:56:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5393,"nodeType":"FunctionTypeName","parameterTypes":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5393,"src":"2633:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2633:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5393,"src":"2642:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2642:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2632:18:26"},"returnParameterTypes":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5393,"src":"2665:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2665:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2664:9:26"},"src":"2624:56:26","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"2560:126:26"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5428,"src":"2710:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2710:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2709:9:26"},"scope":5573,"src":"2539:375:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5448,"nodeType":"Block","src":"3474:65:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5442,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"3512:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":5443,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"3519:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5441,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[5490,5572],"referencedDeclaration":5490,"src":"3491:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5445,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5434,"src":"3528:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:41:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5440,"id":5447,"nodeType":"Return","src":"3484:48:26"}]},"documentation":{"id":5429,"nodeType":"StructuredDocumentation","src":"2920:412:26","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":5449,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"3346:14:26","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"proof","nameLocation":"3389:5:26","nodeType":"VariableDeclaration","scope":5449,"src":"3370:24:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3370:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5431,"nodeType":"ArrayTypeName","src":"3370:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5434,"mutability":"mutable","name":"root","nameLocation":"3412:4:26","nodeType":"VariableDeclaration","scope":5449,"src":"3404:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3404:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5436,"mutability":"mutable","name":"leaf","nameLocation":"3434:4:26","nodeType":"VariableDeclaration","scope":5449,"src":"3426:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3426:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3360:84:26"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5449,"src":"3468:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5438,"name":"bool","nodeType":"ElementaryTypeName","src":"3468:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3467:6:26"},"scope":5573,"src":"3337:202:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5489,"nodeType":"Block","src":"4072:216:26","statements":[{"assignments":[5461],"declarations":[{"constant":false,"id":5461,"mutability":"mutable","name":"computedHash","nameLocation":"4090:12:26","nodeType":"VariableDeclaration","scope":5489,"src":"4082:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4082:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5463,"initialValue":{"id":5462,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"4105:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4082:27:26"},{"body":{"id":5485,"nodeType":"Block","src":"4162:91:26","statements":[{"expression":{"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5475,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"4176:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5478,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"4219:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5479,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"4233:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5481,"indexExpression":{"id":5480,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"4239:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4233:8:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5476,"name":"Hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"4191:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashes_$4995_$","typeString":"type(library Hashes)"}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4198:20:26","memberName":"commutativeKeccak256","nodeType":"MemberAccess","referencedDeclaration":4982,"src":"4191:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4176:66:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5484,"nodeType":"ExpressionStatement","src":"4176:66:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"4139:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5469,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"4143:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4149:6:26","memberName":"length","nodeType":"MemberAccess","src":"4143:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4139:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5486,"initializationExpression":{"assignments":[5465],"declarations":[{"constant":false,"id":5465,"mutability":"mutable","name":"i","nameLocation":"4132:1:26","nodeType":"VariableDeclaration","scope":5486,"src":"4124:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5464,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5467,"initialValue":{"hexValue":"30","id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4136:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4124:13:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4157:3:26","subExpression":{"id":5472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"4157:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5474,"nodeType":"ExpressionStatement","src":"4157:3:26"},"nodeType":"ForStatement","src":"4119:134:26"},{"expression":{"id":5487,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"4269:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5459,"id":5488,"nodeType":"Return","src":"4262:19:26"}]},"documentation":{"id":5450,"nodeType":"StructuredDocumentation","src":"3545:392:26","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with the default hashing function."},"id":5490,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"3951:20:26","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"proof","nameLocation":"3991:5:26","nodeType":"VariableDeclaration","scope":5490,"src":"3972:24:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3972:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5452,"nodeType":"ArrayTypeName","src":"3972:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5455,"mutability":"mutable","name":"leaf","nameLocation":"4006:4:26","nodeType":"VariableDeclaration","scope":5490,"src":"3998:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3971:40:26"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5490,"src":"4059:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4059:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4058:9:26"},"scope":5573,"src":"3942:346:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5521,"nodeType":"Block","src":"4911:73:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5514,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"4949:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":5515,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"4956:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5516,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"4962:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}],"id":5513,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[5490,5572],"referencedDeclaration":5572,"src":"4928:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32,function (bytes32,bytes32) view returns (bytes32)) view returns (bytes32)"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4928:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5518,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"4973:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4928:49:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5512,"id":5520,"nodeType":"Return","src":"4921:56:26"}]},"documentation":{"id":5491,"nodeType":"StructuredDocumentation","src":"4294:409:26","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":5522,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"4717:14:26","nodeType":"FunctionDefinition","parameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"proof","nameLocation":"4760:5:26","nodeType":"VariableDeclaration","scope":5522,"src":"4741:24:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5493,"nodeType":"ArrayTypeName","src":"4741:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5496,"mutability":"mutable","name":"root","nameLocation":"4783:4:26","nodeType":"VariableDeclaration","scope":5522,"src":"4775:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4775:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5498,"mutability":"mutable","name":"leaf","nameLocation":"4805:4:26","nodeType":"VariableDeclaration","scope":5522,"src":"4797:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4797:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5508,"mutability":"mutable","name":"hasher","nameLocation":"4869:6:26","nodeType":"VariableDeclaration","scope":5522,"src":"4819:56:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5507,"nodeType":"FunctionTypeName","parameterTypes":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5507,"src":"4828:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4828:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5507,"src":"4837:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4837:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4827:18:26"},"returnParameterTypes":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5507,"src":"4860:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4860:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4859:9:26"},"src":"4819:56:26","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"4731:150:26"},"returnParameters":{"id":5512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5522,"src":"4905:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5510,"name":"bool","nodeType":"ElementaryTypeName","src":"4905:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4904:6:26"},"scope":5573,"src":"4708:276:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5571,"nodeType":"Block","src":"5574:195:26","statements":[{"assignments":[5544],"declarations":[{"constant":false,"id":5544,"mutability":"mutable","name":"computedHash","nameLocation":"5592:12:26","nodeType":"VariableDeclaration","scope":5571,"src":"5584:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5584:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5546,"initialValue":{"id":5545,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"5607:4:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5584:27:26"},{"body":{"id":5567,"nodeType":"Block","src":"5664:70:26","statements":[{"expression":{"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5558,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"5678:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5560,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"5700:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":5561,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"5714:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5563,"indexExpression":{"id":5562,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"5720:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5714:8:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5559,"name":"hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"5693:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5693:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5678:45:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5566,"nodeType":"ExpressionStatement","src":"5678:45:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"5641:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5552,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5526,"src":"5645:5:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5651:6:26","memberName":"length","nodeType":"MemberAccess","src":"5645:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5641:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5568,"initializationExpression":{"assignments":[5548],"declarations":[{"constant":false,"id":5548,"mutability":"mutable","name":"i","nameLocation":"5634:1:26","nodeType":"VariableDeclaration","scope":5568,"src":"5626:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5626:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5550,"initialValue":{"hexValue":"30","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5638:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5626:13:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5659:3:26","subExpression":{"id":5555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"5659:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5557,"nodeType":"ExpressionStatement","src":"5659:3:26"},"nodeType":"ForStatement","src":"5621:113:26"},{"expression":{"id":5569,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"5750:12:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5542,"id":5570,"nodeType":"Return","src":"5743:19:26"}]},"documentation":{"id":5523,"nodeType":"StructuredDocumentation","src":"4990:389:26","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leaves & pre-images are assumed to be sorted.\n This version handles proofs in calldata with a custom hashing function."},"id":5572,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"5393:20:26","nodeType":"FunctionDefinition","parameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"proof","nameLocation":"5442:5:26","nodeType":"VariableDeclaration","scope":5572,"src":"5423:24:26","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5423:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5525,"nodeType":"ArrayTypeName","src":"5423:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5528,"mutability":"mutable","name":"leaf","nameLocation":"5465:4:26","nodeType":"VariableDeclaration","scope":5572,"src":"5457:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5457:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5538,"mutability":"mutable","name":"hasher","nameLocation":"5529:6:26","nodeType":"VariableDeclaration","scope":5572,"src":"5479:56:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"typeName":{"id":5537,"nodeType":"FunctionTypeName","parameterTypes":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5537,"src":"5488:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5537,"src":"5497:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5497:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5487:18:26"},"returnParameterTypes":{"id":5536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5537,"src":"5520:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5520:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5519:9:26"},"src":"5479:56:26","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) view returns (bytes32)"},"visibility":"internal"},"visibility":"internal"}],"src":"5413:128:26"},"returnParameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5572,"src":"5565:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5565:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5564:9:26"},"scope":5573,"src":"5384:385:26","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5574,"src":"103:5668:26","usedErrors":[],"usedEvents":[]}],"src":"32:5740:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c4875d3cafaa9d0c0842fda2ffd53c9a7f86a72c6d9a72a6ac1d6169d45a27a964736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 DUP8 TSTORE EXTCODECOPY 0xAF 0xAA SWAP14 0xC ADDMOD TIMESTAMP REVERT LOG2 SELFDESTRUCT 0xD5 EXTCODECOPY SWAP11 PUSH32 0x86A72C6D9A72A6AC1D6169D45A27A964736F6C634300081C0033000000000000 ","sourceMap":"701:6234:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c4875d3cafaa9d0c0842fda2ffd53c9a7f86a72c6d9a72a6ac1d6169d45a27a964736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 DUP8 TSTORE EXTCODECOPY 0xAF 0xAA SWAP14 0xC ADDMOD TIMESTAMP REVERT LOG2 SELFDESTRUCT 0xD5 EXTCODECOPY SWAP11 PUSH32 0x86A72C6D9A72A6AC1D6169D45A27A964736F6C634300081C0033000000000000 ","sourceMap":"701:6234:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122032b86694290be41bfec0c63ddd117fdaf490c55ee8cb70f0bbf1384053cb599764736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xB8 PUSH7 0x94290BE41BFEC0 0xC6 RETURNDATASIZE 0xDD GT PUSH32 0xDAF490C55EE8CB70F0BBF1384053CB599764736F6C634300081C003300000000 ","sourceMap":"194:9169:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122032b86694290be41bfec0c63ddd117fdaf490c55ee8cb70f0bbf1384053cb599764736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN 0xB8 PUSH7 0x94290BE41BFEC0 0xC6 RETURNDATASIZE 0xDD GT PUSH32 0xDAF490C55EE8CB70F0BBF1384053CB599764736F6C634300081C003300000000 ","sourceMap":"194:9169:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220334210818c64cf5eee58738bbe082aff42c7a886df72416487997eb10a5b200b64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER TIMESTAMP LT DUP2 DUP13 PUSH5 0xCF5EEE5873 DUP12 0xBE ADDMOD 0x2A SELFDESTRUCT TIMESTAMP 0xC7 0xA8 DUP7 0xDF PUSH19 0x416487997EB10A5B200B64736F6C634300081C STOP CALLER ","sourceMap":"1235:3050:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220334210818c64cf5eee58738bbe082aff42c7a886df72416487997eb10a5b200b64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER TIMESTAMP LT DUP2 DUP13 PUSH5 0xCF5EEE5873 DUP12 0xBE ADDMOD 0x2A SELFDESTRUCT TIMESTAMP 0xC7 0xA8 DUP7 0xDF PUSH19 0x416487997EB10A5B200B64736F6C634300081C STOP CALLER ","sourceMap":"1235:3050:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209a764b575d590d709349756ba101666560e85607e12663ad37d9f73db93f9ff464736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 PUSH23 0x4B575D590D709349756BA101666560E85607E12663AD37 0xD9 0xF7 RETURNDATASIZE 0xB9 EXTCODEHASH SWAP16 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1420:2685:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212209a764b575d590d709349756ba101666560e85607e12663ad37d9f73db93f9ff464736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 PUSH23 0x4B575D590D709349756BA101666560E85607E12663AD37 0xD9 0xF7 RETURNDATASIZE 0xB9 EXTCODEHASH SWAP16 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1420:2685:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122084d350b168748a49eb07ed6e94924419a3a6b1a1d174764f0c6a059c379e93c264736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xD3 POP 0xB1 PUSH9 0x748A49EB07ED6E9492 PREVRANDAO NOT LOG3 0xA6 0xB1 LOG1 0xD1 PUSH21 0x764F0C6A059C379E93C264736F6C634300081C0033 ","sourceMap":"220:2559:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122084d350b168748a49eb07ed6e94924419a3a6b1a1d174764f0c6a059c379e93c264736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xD3 POP 0xB1 PUSH9 0x748A49EB07ED6E9492 PREVRANDAO NOT LOG3 0xA6 0xB1 LOG1 0xD1 PUSH21 0x764F0C6A059C379E93C264736F6C634300081C0033 ","sourceMap":"220:2559:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122083f1b4fb330730b451ce26f11a8be7d0c38dc9cb18db788299c89c045a35221664736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 CALL 0xB4 0xFB CALLER SMOD ADDRESS 0xB4 MLOAD 0xCE 0x26 CALL BYTE DUP12 0xE7 0xD0 0xC3 DUP14 0xC9 0xCB XOR 0xDB PUSH25 0x8299C89C045A35221664736F6C634300081C00330000000000 ","sourceMap":"369:8761:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122083f1b4fb330730b451ce26f11a8be7d0c38dc9cb18db788299c89c045a35221664736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 CALL 0xB4 0xFB CALLER SMOD ADDRESS 0xB4 MLOAD 0xCE 0x26 CALL BYTE DUP12 0xE7 0xD0 0xC3 DUP14 0xC9 0xCB XOR 0xDB PUSH25 0x8299C89C045A35221664736F6C634300081C00330000000000 ","sourceMap":"369:8761:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b15c21a68c2eaa17bd0072ce42b8a93c174525a38c6f6bd93c3bb2d1e6db10da64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 TLOAD 0x21 0xA6 DUP13 0x2E 0xAA OR 0xBD STOP PUSH19 0xCE42B8A93C174525A38C6F6BD93C3BB2D1E6DB LT 0xDA PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"202:12582:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b15c21a68c2eaa17bd0072ce42b8a93c174525a38c6f6bd93c3bb2d1e6db10da64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 TLOAD 0x21 0xA6 DUP13 0x2E 0xAA OR 0xBD STOP PUSH19 0xCE42B8A93C174525A38C6F6BD93C3BB2D1E6DB LT 0xDA PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"202:12582:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c9bf82a6a6821d53d5a24beeb6ed65c37379174ede8d976a50afd13e06fad95764736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xBF DUP3 0xA6 0xA6 DUP3 SAR MSTORE8 0xD5 LOG2 0x4B 0xEE 0xB6 0xED PUSH6 0xC37379174EDE DUP14 SWAP8 PUSH11 0x50AFD13E06FAD95764736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"215:1047:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c9bf82a6a6821d53d5a24beeb6ed65c37379174ede8d976a50afd13e06fad95764736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xBF DUP3 0xA6 0xA6 DUP3 SAR MSTORE8 0xD5 LOG2 0x4B 0xEE 0xB6 0xED PUSH6 0xC37379174EDE DUP14 SWAP8 PUSH11 0x50AFD13E06FAD95764736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"215:1047:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/AssetTransferAgent.sol":{"AssetTransferAgent":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"ERC1155BatchTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC1155Transferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Transferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721Transferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"marketplace","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketplace","type":"address"}],"name":"setMarketplace","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferERC1155","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234605a5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361091790816100608239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063715018a61461067257806373ad6c2d146105e1578063789f93f6146104e75780638da5cb5b146104c0578063abc8c7af14610497578063da3e8ce4146102b7578063eae787dc1461013d5763f2fde38b1461007557600080fd5b3461013a57602036600319011261013a5761008e6106cc565b6100966107b9565b6001600160a01b031680156100e65781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b503461013a5760c036600319011261013a576101576106cc565b6024356001600160a01b038116908190036102ab576044356001600160a01b03811692908390036102b3576064356084358560a43567ffffffffffffffff81116102af57366023820112156102af5780600401359467ffffffffffffffff86116102ab5736602487840101116102ab576101dc60018060a01b03600154163314610735565b6001600160a01b031694853b156102ab578760c48883869460246040519788968795637921219560e11b87526004870152828601528b60448601528a606486015260a060848601528260a486015201848401378181018301859052601f01601f1916810103018183895af180156102a057610287575b50507fc9e961ede50ae118725ee30349faceaa91b11400bcd9e190dd3d2a5ad1da6b869160409182519182526020820152a480f35b8161029191610781565b61029c578538610252565b8580fd5b6040513d84823e3d90fd5b8280fd5b5080fd5b8380fd5b503461013a576102c6366106e7565b91926102dd60018060a01b03600154163314610735565b6040516323b872dd60e01b602082019081526001600160a01b03868116602484015284811660448401526064808401879052835292909216929190610323608482610781565b86806040938451936103358686610781565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020860152519082885af13d1561048a573d9067ffffffffffffffff82116104765783516103aa939290919061039a601f8201601f191660200184610781565b82523d8a602084013e5b86610811565b805190811591821561044f575b5050156103f957519283526001600160a01b039081169316917f8dfac83616afc4a99a89fe63243ae807798d10eb5a1449e5472853efc3c022cf90602090a480f35b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b8192509060209181010312610472576020015180151581036104725738806103b7565b8680fd5b634e487b7160e01b89526041600452602489fd5b906103aa916060906103a4565b503461013a578060031936011261013a576001546040516001600160a01b039091168152602090f35b503461013a578060031936011261013a57546040516001600160a01b039091168152602090f35b503461013a576104f6366106e7565b919261050d60018060a01b03600154163314610735565b6001600160a01b031690813b156105dd57604051632142170760e11b81526001600160a01b0385811660048301528216602482015260448101849052858160648183875af180156105d25761059b575b506040519283526001600160a01b039081169316917f0d51cb9153ff678c00c10a9a9365be8d1dce6eb4d8a0181a613da760afda4e2890602090a480f35b856105ca7f0d51cb9153ff678c00c10a9a9365be8d1dce6eb4d8a0181a613da760afda4e289397602093610781565b95915061055d565b6040513d88823e3d90fd5b8480fd5b503461013a57602036600319011261013a576105fb6106cc565b6106036107b9565b6001600160a01b0316801561062d576bffffffffffffffffffffffff60a01b600154161760015580f35b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206d61726b6574706c616365206164647265737300000000006044820152606490fd5b503461013a578060031936011261013a5761068b6107b9565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b600435906001600160a01b03821682036106e257565b600080fd5b60809060031901126106e2576004356001600160a01b03811681036106e257906024356001600160a01b03811681036106e257906044356001600160a01b03811681036106e2579060643590565b1561073c57565b60405162461bcd60e51b815260206004820152601960248201527f4f6e6c79206d61726b6574706c6163652063616e2063616c6c000000000000006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff8211176107a357604052565b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b031633036107cd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919290156108735750815115610825575090565b3b1561082e5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156108865750805190602001fd5b6040519062461bcd60e51b8252602060048301528181519182602483015260005b8381106108c95750508160006044809484010152601f80199101168101030190fd5b602082820181015160448784010152859350016108a756fea264697066735822122024ec2bd4625aa7cd17fab12780e0e498671d3df9b2d37d37293db04e695f7f8b64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x5A JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x917 SWAP1 DUP2 PUSH2 0x60 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x73AD6C2D EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x789F93F6 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xABC8C7AF EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xDA3E8CE4 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xEAE787DC EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH2 0x8E PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x96 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xE6 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH2 0x157 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AB JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x2B3 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD DUP6 PUSH1 0xA4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2AF JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2AF JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT PUSH2 0x2AB JUMPI CALLDATASIZE PUSH1 0x24 DUP8 DUP5 ADD ADD GT PUSH2 0x2AB JUMPI PUSH2 0x1DC PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x2AB JUMPI DUP8 PUSH1 0xC4 DUP9 DUP4 DUP7 SWAP5 PUSH1 0x24 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0x79212195 PUSH1 0xE1 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD MSTORE DUP3 DUP7 ADD MSTORE DUP12 PUSH1 0x44 DUP7 ADD MSTORE DUP11 PUSH1 0x64 DUP7 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP7 ADD MSTORE DUP3 PUSH1 0xA4 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD DUP2 DUP4 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH2 0x287 JUMPI JUMPDEST POP POP PUSH32 0xC9E961EDE50AE118725EE30349FACEAA91B11400BCD9E190DD3D2A5AD1DA6B86 SWAP2 PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x291 SWAP2 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x29C JUMPI DUP6 CODESIZE PUSH2 0x252 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI PUSH2 0x2C6 CALLDATASIZE PUSH2 0x6E7 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x2DD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP1 DUP5 ADD DUP8 SWAP1 MSTORE DUP4 MSTORE SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP2 SWAP1 PUSH2 0x323 PUSH1 0x84 DUP3 PUSH2 0x781 JUMP JUMPDEST DUP7 DUP1 PUSH1 0x40 SWAP4 DUP5 MLOAD SWAP4 PUSH2 0x335 DUP7 DUP7 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x20 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP7 ADD MSTORE MLOAD SWAP1 DUP3 DUP9 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x476 JUMPI DUP4 MLOAD PUSH2 0x3AA SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x39A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x781 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP11 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP7 PUSH2 0x811 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x44F JUMPI JUMPDEST POP POP ISZERO PUSH2 0x3F9 JUMPI MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 AND SWAP2 PUSH32 0x8DFAC83616AFC4A99A89FE63243AE807798D10EB5A1449E5472853EFC3C022CF SWAP1 PUSH1 0x20 SWAP1 LOG4 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x472 JUMPI PUSH1 0x20 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x472 JUMPI CODESIZE DUP1 PUSH2 0x3B7 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 PUSH2 0x3AA SWAP2 PUSH1 0x60 SWAP1 PUSH2 0x3A4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI PUSH2 0x4F6 CALLDATASIZE PUSH2 0x6E7 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x50D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE DUP6 DUP2 PUSH1 0x64 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x5D2 JUMPI PUSH2 0x59B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 AND SWAP2 PUSH32 0xD51CB9153FF678C00C10A9A9365BE8D1DCE6EB4D8A0181A613DA760AFDA4E28 SWAP1 PUSH1 0x20 SWAP1 LOG4 DUP1 RETURN JUMPDEST DUP6 PUSH2 0x5CA PUSH32 0xD51CB9153FF678C00C10A9A9365BE8D1DCE6EB4D8A0181A613DA760AFDA4E28 SWAP4 SWAP8 PUSH1 0x20 SWAP4 PUSH2 0x781 JUMP JUMPDEST SWAP6 SWAP2 POP PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH2 0x5FB PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x603 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x62D JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D61726B6574706C61636520616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI PUSH2 0x68B PUSH2 0x7B9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6E2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x6E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6E2 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6E2 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6E2 JUMPI SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x73C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D61726B6574706C6163652063616E2063616C6C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7A3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x7CD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x873 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x825 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x82E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x886 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE DUP2 DUP2 MLOAD SWAP2 DUP3 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x8C9 JUMPI POP POP DUP2 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP5 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x44 DUP8 DUP5 ADD ADD MSTORE DUP6 SWAP4 POP ADD PUSH2 0x8A7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xEC 0x2B 0xD4 PUSH3 0x5AA7CD OR STATICCALL 0xB1 0x27 DUP1 0xE0 0xE4 SWAP9 PUSH8 0x1D3DF9B2D37D3729 RETURNDATASIZE 0xB0 0x4E PUSH10 0x5F7F8B64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"402:1376:19:-:0;;;;;;;2518:6:0;402:1376:19;;734:10:10;-1:-1:-1;;;;;;402:1376:19;;;;;;734:10:10;-1:-1:-1;;;;;402:1376:19;;;;2566:40:0;;2518:6;2566:40;402:1376:19;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1740,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_addresst_uint256":{"entryPoint":1767,"id":null,"parameterSlots":1,"returnSlots":4},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"finalize_allocation":{"entryPoint":1921,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":1977,"id":54,"parameterSlots":0,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":2065,"id":1229,"parameterSlots":4,"returnSlots":1},"require_helper_stringliteral_db29":{"entryPoint":1845,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b6000803560e01c8063715018a61461067257806373ad6c2d146105e1578063789f93f6146104e75780638da5cb5b146104c0578063abc8c7af14610497578063da3e8ce4146102b7578063eae787dc1461013d5763f2fde38b1461007557600080fd5b3461013a57602036600319011261013a5761008e6106cc565b6100966107b9565b6001600160a01b031680156100e65781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b80fd5b503461013a5760c036600319011261013a576101576106cc565b6024356001600160a01b038116908190036102ab576044356001600160a01b03811692908390036102b3576064356084358560a43567ffffffffffffffff81116102af57366023820112156102af5780600401359467ffffffffffffffff86116102ab5736602487840101116102ab576101dc60018060a01b03600154163314610735565b6001600160a01b031694853b156102ab578760c48883869460246040519788968795637921219560e11b87526004870152828601528b60448601528a606486015260a060848601528260a486015201848401378181018301859052601f01601f1916810103018183895af180156102a057610287575b50507fc9e961ede50ae118725ee30349faceaa91b11400bcd9e190dd3d2a5ad1da6b869160409182519182526020820152a480f35b8161029191610781565b61029c578538610252565b8580fd5b6040513d84823e3d90fd5b8280fd5b5080fd5b8380fd5b503461013a576102c6366106e7565b91926102dd60018060a01b03600154163314610735565b6040516323b872dd60e01b602082019081526001600160a01b03868116602484015284811660448401526064808401879052835292909216929190610323608482610781565b86806040938451936103358686610781565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646020860152519082885af13d1561048a573d9067ffffffffffffffff82116104765783516103aa939290919061039a601f8201601f191660200184610781565b82523d8a602084013e5b86610811565b805190811591821561044f575b5050156103f957519283526001600160a01b039081169316917f8dfac83616afc4a99a89fe63243ae807798d10eb5a1449e5472853efc3c022cf90602090a480f35b5162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b8192509060209181010312610472576020015180151581036104725738806103b7565b8680fd5b634e487b7160e01b89526041600452602489fd5b906103aa916060906103a4565b503461013a578060031936011261013a576001546040516001600160a01b039091168152602090f35b503461013a578060031936011261013a57546040516001600160a01b039091168152602090f35b503461013a576104f6366106e7565b919261050d60018060a01b03600154163314610735565b6001600160a01b031690813b156105dd57604051632142170760e11b81526001600160a01b0385811660048301528216602482015260448101849052858160648183875af180156105d25761059b575b506040519283526001600160a01b039081169316917f0d51cb9153ff678c00c10a9a9365be8d1dce6eb4d8a0181a613da760afda4e2890602090a480f35b856105ca7f0d51cb9153ff678c00c10a9a9365be8d1dce6eb4d8a0181a613da760afda4e289397602093610781565b95915061055d565b6040513d88823e3d90fd5b8480fd5b503461013a57602036600319011261013a576105fb6106cc565b6106036107b9565b6001600160a01b0316801561062d576bffffffffffffffffffffffff60a01b600154161760015580f35b60405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206d61726b6574706c616365206164647265737300000000006044820152606490fd5b503461013a578060031936011261013a5761068b6107b9565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b600435906001600160a01b03821682036106e257565b600080fd5b60809060031901126106e2576004356001600160a01b03811681036106e257906024356001600160a01b03811681036106e257906044356001600160a01b03811681036106e2579060643590565b1561073c57565b60405162461bcd60e51b815260206004820152601960248201527f4f6e6c79206d61726b6574706c6163652063616e2063616c6c000000000000006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff8211176107a357604052565b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b031633036107cd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919290156108735750815115610825575090565b3b1561082e5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156108865750805190602001fd5b6040519062461bcd60e51b8252602060048301528181519182602483015260005b8381106108c95750508160006044809484010152601f80199101168101030190fd5b602082820181015160448784010152859350016108a756fea264697066735822122024ec2bd4625aa7cd17fab12780e0e498671d3df9b2d37d37293db04e695f7f8b64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x73AD6C2D EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0x789F93F6 EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xABC8C7AF EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0xDA3E8CE4 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xEAE787DC EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH2 0x8E PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x96 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xE6 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH2 0x157 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2AB JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x2B3 JUMPI PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD DUP6 PUSH1 0xA4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2AF JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2AF JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP5 PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT PUSH2 0x2AB JUMPI CALLDATASIZE PUSH1 0x24 DUP8 DUP5 ADD ADD GT PUSH2 0x2AB JUMPI PUSH2 0x1DC PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x2AB JUMPI DUP8 PUSH1 0xC4 DUP9 DUP4 DUP7 SWAP5 PUSH1 0x24 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0x79212195 PUSH1 0xE1 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD MSTORE DUP3 DUP7 ADD MSTORE DUP12 PUSH1 0x44 DUP7 ADD MSTORE DUP11 PUSH1 0x64 DUP7 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP7 ADD MSTORE DUP3 PUSH1 0xA4 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY DUP2 DUP2 ADD DUP4 ADD DUP6 SWAP1 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD DUP2 DUP4 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH2 0x287 JUMPI JUMPDEST POP POP PUSH32 0xC9E961EDE50AE118725EE30349FACEAA91B11400BCD9E190DD3D2A5AD1DA6B86 SWAP2 PUSH1 0x40 SWAP2 DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x291 SWAP2 PUSH2 0x781 JUMP JUMPDEST PUSH2 0x29C JUMPI DUP6 CODESIZE PUSH2 0x252 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI PUSH2 0x2C6 CALLDATASIZE PUSH2 0x6E7 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x2DD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP1 DUP5 ADD DUP8 SWAP1 MSTORE DUP4 MSTORE SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP2 SWAP1 PUSH2 0x323 PUSH1 0x84 DUP3 PUSH2 0x781 JUMP JUMPDEST DUP7 DUP1 PUSH1 0x40 SWAP4 DUP5 MLOAD SWAP4 PUSH2 0x335 DUP7 DUP7 PUSH2 0x781 JUMP JUMPDEST PUSH1 0x20 DUP6 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x20 DUP7 ADD MSTORE MLOAD SWAP1 DUP3 DUP9 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x48A JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x476 JUMPI DUP4 MLOAD PUSH2 0x3AA SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x39A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x781 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP11 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP7 PUSH2 0x811 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x44F JUMPI JUMPDEST POP POP ISZERO PUSH2 0x3F9 JUMPI MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 AND SWAP2 PUSH32 0x8DFAC83616AFC4A99A89FE63243AE807798D10EB5A1449E5472853EFC3C022CF SWAP1 PUSH1 0x20 SWAP1 LOG4 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 SWAP3 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x472 JUMPI PUSH1 0x20 ADD MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x472 JUMPI CODESIZE DUP1 PUSH2 0x3B7 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP1 PUSH2 0x3AA SWAP2 PUSH1 0x60 SWAP1 PUSH2 0x3A4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI PUSH2 0x4F6 CALLDATASIZE PUSH2 0x6E7 JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x50D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD AND CALLER EQ PUSH2 0x735 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE DUP6 DUP2 PUSH1 0x64 DUP2 DUP4 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x5D2 JUMPI PUSH2 0x59B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 AND SWAP2 PUSH32 0xD51CB9153FF678C00C10A9A9365BE8D1DCE6EB4D8A0181A613DA760AFDA4E28 SWAP1 PUSH1 0x20 SWAP1 LOG4 DUP1 RETURN JUMPDEST DUP6 PUSH2 0x5CA PUSH32 0xD51CB9153FF678C00C10A9A9365BE8D1DCE6EB4D8A0181A613DA760AFDA4E28 SWAP4 SWAP8 PUSH1 0x20 SWAP4 PUSH2 0x781 JUMP JUMPDEST SWAP6 SWAP2 POP PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13A JUMPI PUSH2 0x5FB PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x603 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x62D JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D61726B6574706C61636520616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x13A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13A JUMPI PUSH2 0x68B PUSH2 0x7B9 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6E2 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x6E2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6E2 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6E2 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x6E2 JUMPI SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x73C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D61726B6574706C6163652063616E2063616C6C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7A3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x7CD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x873 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x825 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x82E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x886 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE DUP2 DUP2 MLOAD SWAP2 DUP3 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x8C9 JUMPI POP POP DUP2 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP5 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x44 DUP8 DUP5 ADD ADD MSTORE DUP6 SWAP4 POP ADD PUSH2 0x8A7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xEC 0x2B 0xD4 PUSH3 0x5AA7CD OR STATICCALL 0xB1 0x27 DUP1 0xE0 0xE4 SWAP9 PUSH8 0x1D3DF9B2D37D3729 RETURNDATASIZE 0xB0 0x4E PUSH10 0x5F7F8B64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"402:1376:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;402:1376:19;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;402:1376:19;2162:22:0;;402:1376:19;;;;-1:-1:-1;;;;;;402:1376:19;;;;;;-1:-1:-1;;;;;402:1376:19;2566:40:0;402:1376:19;;2566:40:0;402:1376:19;;;;;-1:-1:-1;;;402:1376:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;402:1376:19;;;;;;;;;;;;;;;;;-1:-1:-1;;402:1376:19;;;;;;:::i;:::-;;;-1:-1:-1;;;;;402:1376:19;;;;;;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:63;402:1376;;;;;;;;579:10;:25;571:63;:::i;:::-;-1:-1:-1;;;;;402:1376:19;;1647:60;;;;;402:1376;;;;;;;;;;;;;;;;;1647:60;;402:1376;1647:60;;402:1376;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;402:1376:19;;;1647:60;;;402:1376;1647:60;;;;;;;;;402:1376;;;1722:47;402:1376;;;;;;;;;;;;1722:47;402:1376;;1647:60;;;;;:::i;:::-;402:1376;;1647:60;;;;402:1376;;;;1647:60;402:1376;;;;;;;;;1647:60;402:1376;;;;;;;;;;;;;;;;;;;:::i;:::-;;;571:63;402:1376;;;;;593:11;402:1376;;579:10;:25;571:63;:::i;:::-;402:1376;;-1:-1:-1;;;1482:68:7;;;;;;-1:-1:-1;;;;;402:1376:19;;;1482:68:7;;;402:1376:19;;;;;;;;;;;;;;;1482:68:7;;402:1376:19;;;;;;1482:68:7;;402:1376:19;;1482:68:7;:::i;:::-;402:1376:19;;;;;;;;;;;:::i;:::-;1482:68:7;402:1376:19;;;1482:68:7;402:1376:19;;;5487:31:9;;;;;;402:1376:19;;;;;;;;;;;;;5535:69:9;;1482:68:7;402:1376:19;;1482:68:7;402:1376:19;1482:68:7;402:1376:19;;-1:-1:-1;;402:1376:19;1482:68:7;402:1376:19;;;:::i;:::-;;;;;1482:68:7;402:1376:19;;;;5535:69:9;;:::i;:::-;402:1376:19;;5728:22:7;;;:56;;;;;402:1376:19;;;;;;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;1095:41;;1482:68:7;;1095:41:19;402:1376;;;;-1:-1:-1;;;402:1376:19;;1482:68:7;402:1376:19;;;;;1482:68:7;402:1376:19;;;;;;;;-1:-1:-1;;;402:1376:19;;;;;;;5728:56:7;5754:30;;;;1482:68;5754:30;;;402:1376:19;;;;1482:68:7;5754:30;402:1376:19;;;;;;;;5728:56:7;;;;402:1376:19;;;;;-1:-1:-1;;;402:1376:19;;;;;1482:68:7;402:1376:19;;;;5535:69:9;402:1376:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;;;;;;;;;;;:::i;:::-;;;571:63;402:1376;;;;;593:11;402:1376;;579:10;:25;571:63;:::i;:::-;-1:-1:-1;;;;;402:1376:19;;1313:50;;;;;402:1376;;-1:-1:-1;;;1313:50:19;;-1:-1:-1;;;;;402:1376:19;;;;1313:50;;402:1376;;;;;;;;;;;;;1313:50;402:1376;;;1313:50;;;;;;;;;;402:1376;-1:-1:-1;402:1376:19;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;1378:43;;402:1376;;1378:43;402:1376;;1313:50;;;1378:43;1313:50;;402:1376;1313:50;;:::i;:::-;;;;;;;402:1376;;;;;;;;;1313:50;402:1376;;;;;;;;;;-1:-1:-1;;402:1376:19;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;402:1376:19;763:26;;402:1376;;;;;831:26;402:1376;;;831:26;402:1376;;;;;;-1:-1:-1;;;402:1376:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;402:1376:19;;-1:-1:-1;;;;;;402:1376:19;;;;;;-1:-1:-1;;;;;402:1376:19;2566:40:0;402:1376:19;;2566:40:0;402:1376:19;;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;;;;-1:-1:-1;;;;;402:1376:19;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;402:1376:19;;;;;;;;;;;;;;;;;;;;;;;1482:68:7;;402:1376:19;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;402:1376:19;;;;;-1:-1:-1;402:1376:19;1359:130:0;1273:6;402:1376:19;-1:-1:-1;;;;;402:1376:19;734:10:10;1422:23:0;402:1376:19;;1359:130:0:o;402:1376:19:-;;;;;;;;;;;;;;;;;;;;;;;;;7671:628:9;;;;7875:418;;;402:1376:19;;;7906:22:9;7902:286;;8201:17;;:::o;7902:286::-;1702:19;:23;402:1376:19;;8201:17:9;:::o;402:1376:19:-;;;-1:-1:-1;;;402:1376:19;;;;;;;;;;;;;;;;;;;;7875:418:9;402:1376:19;;;;-1:-1:-1;8980:21:9;:17;;9152:142;;;;;;;8976:379;402:1376:19;;;;;;9324:20:9;;402:1376:19;9324:20:9;;;402:1376:19;;;;;;;;;;9000:1:9;402:1376:19;;;;;;;;;9000:1:9;402:1376:19;;;;;;;;1482:68:7;;402:1376:19;;;;;9324:20:9;;;;402:1376:19;;;;;;;;;;;;;;;;-1:-1:-1;402:1376:19;;"},"methodIdentifiers":{"marketplace()":"abc8c7af","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMarketplace(address)":"73ad6c2d","transferERC1155(address,address,address,uint256,uint256,bytes)":"eae787dc","transferERC20(address,address,address,uint256)":"da3e8ce4","transferERC721(address,address,address,uint256)":"789f93f6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC1155Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"marketplace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketplace\",\"type\":\"address\"}],\"name\":\"setMarketplace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AssetTransferAgent.sol\":\"AssetTransferAgent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/AssetTransferAgent.sol\":{\"keccak256\":\"0x107f69d0ac8fb21643096519ebd5bb56d0e030484bac15abf0d63ad2d8066b80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548c1d4589ad16d6392b1c30cd40a452ba8a5f9be5827038f60f0980b76b2e5e\",\"dweb:/ipfs/QmdMvr5uxSYEgEwNVMheC7ncMAVgxtc3yLgFpLYvrhFJst\"]},\"contracts/interfaces/IAssetTransferAgent.sol\":{\"keccak256\":\"0x8d74c832e52b948a8d8030ace68402859353aa8e37b605b33ef2a5ade4e99653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be85f1361767c08947d3cbb03bfab57097e2a023b7f1a76d9088e72e95d7b66\",\"dweb:/ipfs/QmNsUtrUfXmnhc8wFm7JqZqfVRKzvPnCFXjDtAFBdga3ND\"]}},\"version\":1}"}},"contracts/Marketplace.sol":{"Marketplace":{"abi":[{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"},{"internalType":"address","name":"_assetTransferAgent","type":"address"},{"internalType":"uint256","name":"_feeBps","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"name":"CancelOrder","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"maker","type":"address"},{"indexed":true,"internalType":"address","name":"taker","type":"address"},{"indexed":false,"internalType":"uint256","name":"fillAmount","type":"uint256"}],"name":"OrderMatched","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"MAX_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"enum LibOrder.OrderType","name":"orderType","type":"uint8"},{"components":[{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"makeAsset","type":"tuple"},{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"takeAsset","type":"tuple"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"internalType":"struct LibOrder.OrderItem[]","name":"items","type":"tuple[]"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LibOrder.Order","name":"bidOrder","type":"tuple"},{"internalType":"uint256","name":"orderItemIndex","type":"uint256"},{"internalType":"uint256","name":"sellAmount","type":"uint256"}],"name":"acceptBid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"assetTransferAgent","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"enum LibOrder.OrderType","name":"orderType","type":"uint8"},{"components":[{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"makeAsset","type":"tuple"},{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"takeAsset","type":"tuple"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"internalType":"struct LibOrder.OrderItem[]","name":"items","type":"tuple[]"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LibOrder.Order[]","name":"makerOrders","type":"tuple[]"},{"components":[{"internalType":"enum LibOrder.OrderType","name":"orderType","type":"uint8"},{"components":[{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"makeAsset","type":"tuple"},{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"takeAsset","type":"tuple"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"internalType":"struct LibOrder.OrderItem[]","name":"items","type":"tuple[]"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LibOrder.Order","name":"takerOrder","type":"tuple"},{"internalType":"uint256[]","name":"orderItemIndices","type":"uint256[]"},{"internalType":"bytes32[][]","name":"proofs","type":"bytes32[][]"}],"name":"batchMatchOrders","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"enum LibOrder.OrderType","name":"orderType","type":"uint8"},{"components":[{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"makeAsset","type":"tuple"},{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"takeAsset","type":"tuple"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"internalType":"struct LibOrder.OrderItem[]","name":"items","type":"tuple[]"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LibOrder.Order","name":"order","type":"tuple"},{"internalType":"uint256","name":"orderItemIndex","type":"uint256"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeBps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"enum LibOrder.OrderType","name":"orderType","type":"uint8"},{"components":[{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"makeAsset","type":"tuple"},{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"takeAsset","type":"tuple"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"internalType":"struct LibOrder.OrderItem[]","name":"items","type":"tuple[]"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LibOrder.Order","name":"order","type":"tuple"},{"internalType":"uint256","name":"orderItemIndex","type":"uint256"}],"name":"isOrderCancelled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"enum LibOrder.OrderType","name":"orderType","type":"uint8"},{"components":[{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"makeAsset","type":"tuple"},{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"takeAsset","type":"tuple"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"internalType":"struct LibOrder.OrderItem[]","name":"items","type":"tuple[]"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LibOrder.Order","name":"order","type":"tuple"},{"internalType":"uint256","name":"orderItemIndex","type":"uint256"}],"name":"isOrderFullyFilled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"enum LibOrder.OrderType","name":"orderType","type":"uint8"},{"components":[{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"makeAsset","type":"tuple"},{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"takeAsset","type":"tuple"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"internalType":"struct LibOrder.OrderItem[]","name":"items","type":"tuple[]"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LibOrder.Order","name":"makerOrder","type":"tuple"},{"components":[{"internalType":"enum LibOrder.OrderType","name":"orderType","type":"uint8"},{"components":[{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"makeAsset","type":"tuple"},{"components":[{"internalType":"enum LibAsset.AssetType","name":"assetType","type":"uint8"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"assetId","type":"uint256"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"internalType":"struct LibAsset.Asset","name":"takeAsset","type":"tuple"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"}],"internalType":"struct LibOrder.OrderItem[]","name":"items","type":"tuple[]"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct LibOrder.Order","name":"takerOrder","type":"tuple"},{"internalType":"uint256","name":"orderItemIndex","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"matchOrders","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"orderFillAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agent","type":"address"}],"name":"setAssetTransferAgent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feeBps","type":"uint256"}],"name":"setFeeBps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feeRecipient","type":"address"}],"name":"setFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"name":"verifyMerkleProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":616,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":559,"id":null,"parameterSlots":2,"returnSlots":0},"fun_toShortStringWithFallback":{"entryPoint":1088,"id":1461,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_3133":{"entryPoint":636,"id":1461,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"610160806040523461022a5760608161314e8038038091610020828561022f565b83398101031261022a5761003381610268565b90604061004260208301610268565b9101519160405161005460408261022f565b601181526020810190704c61796572474d61726b6574506c61636560781b82526040519161008360408461022f565b6001808452603160f81b6020850190815260008281558254336001600160a01b031982168117909455919492916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36100e78161027c565b610120526100f484610440565b61014052519020918260e05251902080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815261015d60c08261022f565b5190206080523060c052600480546001600160a01b039283166001600160a01b0319918216179091556005805493909216921691909117905561271081116101f357600655604051612b6f90816105df82396080518161287a015260a05181612931015260c05181612844015260e051816128c9015261010051816128ef01526101205181610427015261014051816104500152f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206665652042505360881b6044820152606490fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761025257604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361022a57565b90815160208110600014610314575090601f8151116102b85760208151910151602082106102a8571790565b6000198260200360031b1b161790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b8381106102fc5750508160006044809484010152601f80199101168101030190fd5b602082820181015160448784010152859350016102da565b6001600160401b03811161025257600254600181811c91168015610436575b602082101461042057601f81116103ea575b50602092601f8211600114610385579281929360009261037a575b50508160011b916000199060031b1c19161760025560ff90565b015190503880610360565b601f198216936002600052806000209160005b8681106103d257508360019596106103b9575b505050811b0160025560ff90565b015160001960f88460031b161c191690553880806103ab565b91926020600181928685015181550194019201610398565b6002600052601f6020600020910160051c810190601f830160051c015b8181106104145750610345565b60008155600101610407565b634e487b7160e01b600052602260045260246000fd5b90607f1690610333565b908151602081106000146104c8575090601f81511161046c5760208151910151602082106102a8571790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b8381106104b05750508160006044809484010152601f80199101168101030190fd5b6020828201810151604487840101528593500161048e565b6001600160401b03811161025257600354600181811c911680156105d4575b602082101461042057601f811161059e575b50602092601f8211600114610539579281929360009261052e575b50508160011b916000199060031b1c19161760035560ff90565b015190503880610514565b601f198216936003600052806000209160005b868110610586575083600195961061056d575b505050811b0160035560ff90565b015160001960f88460031b161c1916905538808061055f565b9192602060018192868501518155019401920161054c565b6003600052601f6020600020910160051c810190601f830160051c015b8181106105c857506104f9565b600081556001016105bb565b90607f16906104e756fe6080604052600436101561001257600080fd5b60003560e01c80631ef1c7d21461014757806324a9d853146101425780632e1cbea21461013d57806346904840146101385780634715399c14610133578063703cebfe1461012e578063715018a61461012957806372c27b621461012457806384b0196e1461011f5780638da5cb5b1461011a578063a83fb54f14610115578063ada4fa1814610110578063bc2db5c41461010b578063bf76c03214610106578063ca200ad814610101578063d55be8c6146100fc578063e74b981b146100f7578063eded1f00146100f25763f2fde38b146100ed57600080fd5b610c30565b610bf4565b610b66565b610b49565b610ab3565b6108a7565b6106a4565b610657565b610538565b61050f565b61040e565b61036c565b61030f565b6102f6565b6102cd565b6102a4565b610281565b610232565b61018f565b9181601f8401121561017c578235916001600160401b03831161017c576020808501948460051b01011161017c57565b600080fd5b908160e091031261017c5790565b608036600319011261017c576004356001600160401b03811161017c576101ba90369060040161014c565b6024356001600160401b03811161017c576101d9903690600401610181565b916044356001600160401b03811161017c576101f990369060040161014c565b90606435946001600160401b03861161017c5761021d61022596369060040161014c565b959094610d01565b005b600091031261017c57565b3461017c57600036600319011261017c576020600654604051908152f35b604060031982011261017c57600435906001600160401b03821161017c5761027a91600401610181565b9060243590565b3461017c57602061029a61029436610250565b906111f1565b6040519015158152f35b3461017c57600036600319011261017c576004546040516001600160a01b039091168152602090f35b3461017c57600036600319011261017c576005546040516001600160a01b039091168152602090f35b3461017c57602061029a61030936610250565b9061121a565b3461017c57600036600319011261017c5761032861206e565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017c57602036600319011261017c5760043561038861206e565b612710811161039657600655005b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206665652042505360881b6044820152606490fd5b919082519283825260005b8481106103f9575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016103d8565b3461017c57600036600319011261017c576104b461044b7f00000000000000000000000000000000000000000000000000000000000000006120c6565b6104747f00000000000000000000000000000000000000000000000000000000000000006121b0565b60206040516104838282611125565b60008152816104c281830194601f198301368737604051978897600f60f81b895260e0858a015260e08901906103cd565b9087820360408901526103cd565b91466060870152306080870152600060a087015285830360c0870152519182815201929160005b8281106104f857505050500390f35b8351855286955093810193928101926001016104e9565b3461017c57600036600319011261017c576001546040516001600160a01b039091168152602090f35b3461017c5761054636610250565b61054e611482565b61055f61055a836119b8565b6125c4565b91610569816123ab565b604081013561057781610a95565b6001600160a01b0316330361061a57816105bb6105b66105a883856105b16105ac6105a86105eb9a6105de9a61121a565b1590565b611270565b6111f1565b6112b3565b6105cf846000526008602052604060002090565b90600052602052604060002090565b805460ff19166001179055565b7f42c76c81a7cba1b9c861353909a184e20747ab960332628dabcbb5852fc5cbb5600080a26102256001600055565b60405162461bcd60e51b815260206004820152601560248201527413db9b1e481b585ad95c8818d85b8818d85b98d95b605a1b6044820152606490fd5b3461017c57606036600319011261017c576004356001600160401b03811161017c5761029a61068c602092369060040161014c565b9061069f602435916044359336916112ff565b612493565b606036600319011261017c576004356001600160401b03811161017c576106cf903690600401610181565b60243590604435906106df611482565b6106fa6106eb826110ba565b6106f4816110ab565b1561134b565b61085561079a604061070b846119b8565b93610715816123ab565b6107876107376107328961072c602086018661103b565b9061107a565b611428565b9761077361076360608b51015161075c846105cf8c6000526007602052604060002090565b5490611433565b891515908161089c575b50611440565b6105cf876000526007602052604060002090565b610792878254611193565b9055016110c7565b9361084e60206107aa8351611170565b8351828101519194916107e8906040906001600160a01b0316920151916107d96107d2611146565b9788611164565b6001600160a01b031686850152565b604085015286606085015201916107ff8351611170565b9251602081015161083c906040906001600160a01b03169201519161082c610825611146565b9687611164565b6001600160a01b03166020860152565b60408401528560608401523387611cf3565b8433611cf3565b60405191825233926001600160a01b0316917f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb22779080602081015b0390a46102256001600055565b90508911153861076d565b608036600319011261017c576004356001600160401b03811161017c576108d2903690600401610181565b6024356001600160401b03811161017c576108f1903690600401610181565b9060443590606435906001600160401b03821161017c5761088f84610a616109cb60406109c4817f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb227797610949879a369060040161014c565b610951611482565b6109848d61097d61097761096c8361072c60208a018a61103b565b9c602081019061103b565b90611071565b9d85611762565b600261098f846110ba565b610998816110ab565b14610a7f575b50506109be60e06109ae836119b8565b9b01359b60608901358d8d611a8a565b016110c7565b98016110c7565b91610a5a6109d8826110e5565b916109e5602082016110c7565b6109f960408301359161082c610825611146565b6040840152886060840152610a10608082016110e5565b90610a4860c0610a2260a084016110c7565b92013591610a38610a31611146565b9485611164565b6001600160a01b03166020840152565b60408201528860608201528985611cf3565b8288611cf3565b6040519485526001600160a01b039081169516939081906020820190565b610a8e9160808401358a61187e565b388061099e565b6001600160a01b0381160361017c57565b3590610ab182610a95565b565b3461017c57602036600319011261017c57600435610ad081610a95565b610ad861206e565b6001600160a01b03168015610b04576bffffffffffffffffffffffff60a01b6005541617600555600080f35b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206173736574207472616e73666572206167656e74000000006044820152606490fd5b3461017c57600036600319011261017c5760206040516127108152f35b3461017c57602036600319011261017c57600435610b8381610a95565b610b8b61206e565b6001600160a01b03168015610bb7576bffffffffffffffffffffffff60a01b6004541617600455600080f35b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908199959481c9958da5c1a595b9d605a1b6044820152606490fd5b3461017c57604036600319011261017c576004356024359060005260076020526040600020906000526020526020604060002054604051908152f35b3461017c57602036600319011261017c57600435610c4d81610a95565b610c5561206e565b6001600160a01b03811615610cad57600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b94959091939295610d10611482565b610d1b848414610f27565b610d26828414610f65565b6000966020860193885b818110610d635750505050505050505080610d51575b50610ab16001600055565b610d5d903410156111a5565b38610d46565b85610d6f82848c610fc0565b89610df16040610d80868d8a610fe7565b3593610d8d878c8c610ff7565b610db787610db08b61072c610da98461072c60208b018b61103b565b9c8b61103b565b9785611762565b6002610dc2846110ba565b610dcb816110ab565b14610f11575b50506109be60e0610de1836119b8565b9501359560608801358787611a8a565b92610dfe60408d016110c7565b90610e08816110e5565b90610e15602082016110c7565b610e40604083013591610e30610e29611146565b9586611164565b6001600160a01b03166020850152565b6040830152846060830152610e57608082016110e5565b90610e6960c0610a2260a084016110c7565b60408201528460608201528051610e7f816110db565b610e88816110db565b15610eef575b82610ec87f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb227793610a5a610ee6948a60019c9b9a9998611cf3565b60405194855260a088901b8890039081169516939081906020820190565b0390a401610d30565b9e8f6060909796959493970151610f0591611193565b9e959192939495610e8e565b610f209160808401358961187e565b3880610dd1565b15610f2e57565b60405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152606490fd5b15610f6c57565b60405162461bcd60e51b81526020600482015260166024820152750a0e4dedecce640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b9190811015610fe25760051b8101359060de198136030182121561017c570190565b610faa565b9190811015610fe25760051b0190565b9190811015610fe25760051b81013590601e198136030182121561017c5701908135916001600160401b03831161017c576020018260051b3603811361017c579190565b903590601e198136030182121561017c57018035906001600160401b03821161017c576020019161014082023603831361017c57565b9015610fe25790565b9190811015610fe257610140020190565b6003111561017c57565b634e487b7160e01b600052602160045260246000fd5b600311156110b557565b611095565b356110c48161108b565b90565b356110c481610a95565b6004111561017c57565b600411156110b557565b356110c4816110d1565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111761112057604052565b6110ef565b90601f801991011681019081106001600160401b0382111761112057604052565b60405190610ab1608083611125565b60405190610ab160e083611125565b60048210156110b55752565b5160048110156110b55790565b634e487b7160e01b600052601160045260246000fd5b919082018092116111a057565b61117d565b156111ac57565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f74616c206d73672e76616c7565000000006044820152606490fd5b6111fa906119b8565b600052600860205260406000209060005260205260ff6040600020541690565b9061125260609161122a846119b8565b600052600760205260406000208160005260205261072c60406000205494602081019061103b565b0135111590565b6001600160401b0381116111205760051b60200190565b1561127757565b60405162461bcd60e51b815260206004820152601460248201527313dc99195c88185b1c9958591e48199a5b1b195960621b6044820152606490fd5b156112ba57565b60405162461bcd60e51b815260206004820152601760248201527f4f7264657220616c72656164792063616e63656c6c65640000000000000000006044820152606490fd5b92919061130b81611259565b936113196040519586611125565b602085838152019160051b810192831161017c57905b82821061133b57505050565b813581526020918201910161132f565b1561135257565b60405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903134b21037b93232b960891b6044820152606490fd5b919082608091031261017c576040516113a181611105565b606080829480356113b1816110d1565b845260208101356113c181610a95565b6020850152604081013560408501520135910152565b9190916101408184031261017c576060610120604051926113f784611105565b61141184966114068184611389565b865260808301611389565b602085015261010081013560408501520135910152565b6110c49036906113d7565b919082039182116111a057565b1561144757565b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081cd95b1b08185b5bdd5b9d606a1b6044820152606490fd5b600260005414611493576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b156114df57565b60405162461bcd60e51b815260206004820152601360248201527229b2b73232b91034b9903737ba103a30b5b2b960691b6044820152606490fd5b1561152157565b60405162461bcd60e51b815260206004820152601260248201527113585ad95c881bdc99195c88199a5b1b195960721b6044820152606490fd5b1561156257565b60405162461bcd60e51b815260206004820152601560248201527413585ad95c881bdc99195c8818d85b98d95b1b1959605a1b6044820152606490fd5b3590610ab18261108b565b81601f8201121561017c5780356115c081611259565b926115ce6040519485611125565b818452602061014081860193028401019281841161017c57602001915b8383106115f9575050505090565b60206101409161160984866113d7565b8152019201916115eb565b6001600160401b03811161112057601f01601f191660200190565b92919261163b82611614565b916116496040519384611125565b82948184528183011161017c578281602093846000960137010152565b9080601f8301121561017c578160206110c49335910161162f565b91909160e08184031261017c57611696611155565b926116a08261159f565b845260208201356001600160401b03811161017c57816116c19184016115aa565b60208501526116d260408301610aa6565b60408501526116e360608301610aa6565b60608501526080820135608085015260a082013560a085015260c08201356001600160401b03811161017c576117199201611666565b60c0830152565b1561172757565b60405162461bcd60e51b815260206004820152601360248201527213585ad95c881bdc99195c88195e1c1a5c9959606a1b6044820152606490fd5b919061176d836123ab565b61177e8261072c602086018661103b565b9161178c602083018361103b565b15610fe257604085013561179f81610a95565b60608401356117ad81610a95565b6001600160a01b0390811691160361184057610ab1946118056117fe6117f260406105a8976109be8a6080896117eb6118369b61183b9f8401612744565b0190612744565b6001600160a01b031690565b33146114d8565b61181a6118156105a8858461121a565b61151a565b61182f61182a6105a885846111f1565b61155b565b3690611681565b6124ea565b611720565b60405162461bcd60e51b81526020600482015260166024820152752a30b5b2b91036bab9ba1036b0ba31b41036b0b5b2b960511b6044820152606490fd5b611897939261188f61069f92612502565b9336916112ff565b1561189e57565b60405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21026b2b935b63290383937b7b360611b6044820152606490fd5b906118e482611259565b6118f16040519182611125565b8281528092611902601f1991611259565b0190602036910137565b8051821015610fe25760209160051b010190565b805160209091019060005b8181106119385750505090565b825184526020938401939092019160010161192b565b92969594919693909360e08401977f06c8ffd199dde1e3c1f0d71dae647c455e0da36831ccd370e21bb7d22d370959855260038610156110b55760c0956020860152604085015260018060a01b0316606084015260018060a01b0316608083015260a08201520152565b9060208201916119d26119cb848361103b565b90506118da565b9060005b6119e0858361103b565b9050811015611a135780611a026119fd60019361072c898761103b565b612502565b611a0c828661190c565b52016119d6565b50919250604051611a3a81611a2c602082018095611920565b03601f198101835282611125565b51902090611a84611a4a826110ba565b92611a2c611a5a604085016110c7565b93611a67606082016110c7565b9060a060808201359101359160405196879560208701998a61194e565b51902090565b9290836000526007602052604060002082600052602052604060002054928115159081611b10575b5015611adc57611ac86105cf91611ad994611193565b936000526007602052604060002090565b55565b60405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a5908199a5b1b60a21b6044820152606490fd5b90508184018085116111a057111538611ab2565b15611b2b57565b60405162461bcd60e51b8152602060048201526015602482015274119959481c9958da5c1a595b9d081b9bdd081cd95d605a1b6044820152606490fd5b15611b6f57565b60405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881859d95b9d081b9bdd081cd95d60521b6044820152606490fd5b6040513d6000823e3d90fd5b6001600160a01b03918216815291811660208301529091166040820152606081019190915260800190565b818102929181159184041417156111a057565b15611bfe57565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206d73672e76616c756560501b6044820152606490fd5b3d15611c67573d90611c4d82611614565b91611c5b6040519384611125565b82523d6000602084013e565b606090565b15611c7357565b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b15611cb557565b60405162461bcd60e51b815260206004820152601660248201527513985d1a5d99481d1c985b9cd9995c8819985a5b195960521b6044820152606490fd5b600454611d0a906001600160a01b03161515611b24565b600554611d1f906001600160a01b03166117f2565b611d2a811515611b68565b8351611d35816110db565b611d3e816110db565b611dc95750506000808080936060610ab1960190611d6b611d63835160065490611be4565b612710900490565b611d83611d79828551611433565b9351341015611bf7565b80611d9a575b505af1611d94611c3c565b50611cae565b83808080611dc394611db360045460018060a01b031690565b5af1611dbd611c3c565b50611c6c565b38611d89565b60018493929351611dd9816110db565b611de2816110db565b03611f1a57506060830192611e09611e01611d63865160065490611be4565b809551611433565b9380611e95575b50600554611e3e90602090611e2f906117f2906001600160a01b031681565b9201516001600160a01b031690565b92813b1561017c5760008094611e6a6040519788968795869463368fa33960e21b865260048601611bb9565b03925af18015611e9057611e7b5750565b80611e8a6000610ab193611125565b80610227565b611bad565b600554611eac906117f2906001600160a01b031681565b60208301516001600160a01b03166004549091906001600160a01b031690803b1561017c578660008094611ef66040519788968795869463368fa33960e21b865260048601611bb9565b03925af18015611e905715611e105780611e8a6000611f1493611125565b38611e10565b600384939451611f29816110db565b611f32816110db565b03611f8f5750600554611f4f906117f2906001600160a01b031681565b60208301516040906001600160a01b031693015193813b1561017c5760008094611e6a60405197889687958694633c4fc9fb60e11b865260048601611bb9565b600283949351611f9e816110db565b611fa7816110db565b03612030576001600160a01b031660208401516001600160a01b03169260606040860151950151823b1561017c57604051633ab9e1f760e21b81526001600160a01b03958616600482015291851660248301529290931660448401526064830193909352608482015260c060a4820152600060c482018190529091829081838160e48101611e6a565b60405162461bcd60e51b8152602060048201526016602482015275556e737570706f72746564206173736574207479706560501b6044820152606490fd5b6001546001600160a01b0316330361208257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff81146120d7576110c490612582565b506040516000600254908160011c91600181169081156121a6575b60208410821461219257838552849291602084019181156121795750600114612123575b506110c492500382611125565b6002600090815291507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b84831061216257506110c493500138612116565b80548284015285935060209092019160010161214e565b60ff19168252506110c493151560051b01905038612116565b634e487b7160e01b83526022600452602483fd5b92607f16926120f2565b60ff81146121c1576110c490612582565b506040516000600354908160011c9160018116908115612262575b6020841082146121925783855284929160208401918115612179575060011461220c57506110c492500382611125565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b84831061224b57506110c493500138612116565b805482840152859350602090920191600101612237565b92607f16926121dc565b903590601e198136030182121561017c57018035906001600160401b03821161017c5760200191813603831361017c57565b156122a557565b60405162461bcd60e51b815260206004820152602a60248201527f496e76616c6964207369676e61747572652e204d616b6572206973206e6f74206044820152693a34329039b4b3b732b960b11b6064820152608490fd5b9081602091031261017c57516001600160e01b03198116810361017c5790565b91926060938192845260406020850152816040850152848401376000828201840152601f01601f1916010190565b1561235257565b60405162461bcd60e51b815260206004820152602b60248201527f636f6e7472616374206f72646572207369676e6174757265207665726966696360448201526a30ba34b7b71032b93937b960a91b6064820152608490fd5b6123b7604082016110c7565b6123d16123c661055a846119b8565b9260c081019061226c565b92823b1561246657604051630b135d3f60e11b81529360209385939092849283926123ff926004850161231d565b03916001600160a01b03165afa8015611e9057610ab191600091612437575b506001600160e01b031916630b135d3f60e11b1461234b565b612459915060203d60201161245f575b6124518183611125565b8101906122fd565b3861241e565b503d612447565b6117f29061247c61248293610ab196369161162f565b906125ea565b6001600160a01b039091161461229e565b929091906000915b84518310156124e2576124ae838661190c565b51906000828210156124d15750600052602052600160406000205b92019161249b565b6040916001938252602052206124c9565b915092501490565b60609160206124fa92015161190c565b510151421190565b61251461250f3683611389565b6127cd565b9061252561250f3660808401611389565b90610120610100820135910135906040519260208401947fe28cfd2e1bcec04840c1ddb765a2c756cf3e42aef44e48ddda10af78ed9a1c44865260408501526060840152608083015260a082015260a08152611a8460c082611125565b60ff811690601f82116125b357604080519261259e8285611125565b6020808552840191601f190136833783525290565b632cd44ac360e21b60005260046000fd5b6042906125cf612841565b906040519161190160f01b8352600283015260228201522090565b6110c491612623917f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c600020612957565b919091612999565b1561263257565b60405162461bcd60e51b8152602060048201526013602482015272082e6e6cae840e8f2e0ca40dad2e6dac2e8c6d606b1b6044820152606490fd5b1561267457565b60405162461bcd60e51b815260206004820152601960248201527f436f6e74726163742061646472657373206d69736d61746368000000000000006044820152606490fd5b156126c057565b60405162461bcd60e51b8152602060048201526011602482015270082e6e6cae840928840dad2e6dac2e8c6d607b1b6044820152606490fd5b1561270057565b606460405162461bcd60e51b815260206004820152602060248201527f4f66666572656420616d6f756e742065786365656473207265717565737465646044820152fd5b803561274f816110d1565b823561275a816110d1565b60048110156110b55760048210156110b557610ab19361277f6060939284931461262b565b6127ae61278e602086016110c7565b61279d6117f2602085016110c7565b6001600160a01b039091161461266d565b6127c160408501356040830135146126b9565b013591013510156126f9565b80519060048210156110b55760018060a01b036020820151169060606040820151910151906040519260208401947f6e4f52e5739dbefd226dcbefef0e563115bc2b92726a648e213cb8cde30b11a6865260408501526060840152608083015260a082015260a08152611a8460c082611125565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061292e575b1561289c577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152611a8460c082611125565b507f00000000000000000000000000000000000000000000000000000000000000004614612873565b90604181511460001461298557612981916020820151906060604084015193015160001a90612ab9565b9091565b5050600090600290565b600511156110b557565b6129a28161298f565b806129aa5750565b6129b38161298f565b60018103612a005760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b612a098161298f565b60028103612a565760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80612a6260039261298f565b14612a6957565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612b2d5760209360009360ff60809460405194855216868401526040830152606082015282805260015afa15611e90576000516001600160a01b03811615612b245790600090565b50600090600190565b5050505060009060039056fea264697066735822122084985d88def2f0ccbf473a83accfde07249773dc1cff6cc855eb0ae7d683269e64736f6c634300081c0033","opcodes":"PUSH2 0x160 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x22A JUMPI PUSH1 0x60 DUP2 PUSH2 0x314E DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x20 DUP3 DUP6 PUSH2 0x22F JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x22A JUMPI PUSH2 0x33 DUP2 PUSH2 0x268 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x42 PUSH1 0x20 DUP4 ADD PUSH2 0x268 JUMP JUMPDEST SWAP2 ADD MLOAD SWAP2 PUSH1 0x40 MLOAD PUSH2 0x54 PUSH1 0x40 DUP3 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH17 0x4C61796572474D61726B6574506C616365 PUSH1 0x78 SHL DUP3 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x83 PUSH1 0x40 DUP5 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x1 DUP1 DUP5 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP3 DUP2 SSTORE DUP3 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP5 SSTORE SWAP2 SWAP5 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0xE7 DUP2 PUSH2 0x27C JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0xF4 DUP5 PUSH2 0x440 JUMP JUMPDEST PUSH2 0x140 MSTORE MLOAD SWAP1 KECCAK256 SWAP2 DUP3 PUSH1 0xE0 MSTORE MLOAD SWAP1 KECCAK256 DUP1 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x15D PUSH1 0xC0 DUP3 PUSH2 0x22F JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2710 DUP2 GT PUSH2 0x1F3 JUMPI PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD PUSH2 0x2B6F SWAP1 DUP2 PUSH2 0x5DF DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x287A ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x2931 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x2844 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x28C9 ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x28EF ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x427 ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x450 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642066656520425053 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x252 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x22A JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x20 DUP2 LT PUSH1 0x0 EQ PUSH2 0x314 JUMPI POP SWAP1 PUSH1 0x1F DUP2 MLOAD GT PUSH2 0x2B8 JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x20 DUP3 LT PUSH2 0x2A8 JUMPI OR SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE DUP2 DUP2 MLOAD SWAP2 DUP3 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2FC JUMPI POP POP DUP2 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP5 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x44 DUP8 DUP5 ADD ADD MSTORE DUP6 SWAP4 POP ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x252 JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x436 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x420 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x3EA JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x385 JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x37A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x2 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x3D2 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3B9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3AB JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x398 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x414 JUMPI POP PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x407 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x333 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH1 0x20 DUP2 LT PUSH1 0x0 EQ PUSH2 0x4C8 JUMPI POP SWAP1 PUSH1 0x1F DUP2 MLOAD GT PUSH2 0x46C JUMPI PUSH1 0x20 DUP2 MLOAD SWAP2 ADD MLOAD PUSH1 0x20 DUP3 LT PUSH2 0x2A8 JUMPI OR SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP4 ADD MSTORE DUP2 DUP2 MLOAD SWAP2 DUP3 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x4B0 JUMPI POP POP DUP2 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP5 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x44 DUP8 DUP5 ADD ADD MSTORE DUP6 SWAP4 POP ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x252 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x5D4 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x420 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x59E JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x539 JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x52E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x514 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x586 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x56D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x55F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x54C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x5C8 JUMPI POP PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5BB JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x4E7 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1EF1C7D2 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x24A9D853 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x2E1CBEA2 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4715399C EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x703CEBFE EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x72C27B62 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xA83FB54F EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xADA4FA18 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xBC2DB5C4 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xBF76C032 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xCA200AD8 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xEDED1F00 EQ PUSH2 0xF2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC30 JUMP JUMPDEST PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x17C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x17C JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x17C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0xE0 SWAP2 SUB SLT PUSH2 0x17C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x1BA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x1D9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x1F9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH2 0x17C JUMPI PUSH2 0x21D PUSH2 0x225 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xD01 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x17C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17C JUMPI PUSH2 0x27A SWAP2 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 PUSH2 0x29A PUSH2 0x294 CALLDATASIZE PUSH2 0x250 JUMP JUMPDEST SWAP1 PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 PUSH2 0x29A PUSH2 0x309 CALLDATASIZE PUSH2 0x250 JUMP JUMPDEST SWAP1 PUSH2 0x121A JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH2 0x328 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x388 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x2710 DUP2 GT PUSH2 0x396 JUMPI PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642066656520425053 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x3F9 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x3D8 JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH2 0x4B4 PUSH2 0x44B PUSH32 0x0 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x474 PUSH32 0x0 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x483 DUP3 DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP2 PUSH2 0x4C2 DUP2 DUP4 ADD SWAP5 PUSH1 0x1F NOT DUP4 ADD CALLDATASIZE DUP8 CALLDATACOPY PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xF PUSH1 0xF8 SHL DUP10 MSTORE PUSH1 0xE0 DUP6 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD SWAP1 PUSH2 0x3CD JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x3CD JUMP JUMPDEST SWAP2 CHAINID PUSH1 0x60 DUP8 ADD MSTORE ADDRESS PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP8 ADD MSTORE DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4F8 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x4E9 JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH2 0x546 CALLDATASIZE PUSH2 0x250 JUMP JUMPDEST PUSH2 0x54E PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x55F PUSH2 0x55A DUP4 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x25C4 JUMP JUMPDEST SWAP2 PUSH2 0x569 DUP2 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH2 0x577 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x61A JUMPI DUP2 PUSH2 0x5BB PUSH2 0x5B6 PUSH2 0x5A8 DUP4 DUP6 PUSH2 0x5B1 PUSH2 0x5AC PUSH2 0x5A8 PUSH2 0x5EB SWAP11 PUSH2 0x5DE SWAP11 PUSH2 0x121A JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x5CF DUP5 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x42C76C81A7CBA1B9C861353909A184E20747AB960332628DABCBB5852FC5CBB5 PUSH1 0x0 DUP1 LOG2 PUSH2 0x225 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E481B585AD95C8818D85B8818D85B98D95B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x29A PUSH2 0x68C PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST SWAP1 PUSH2 0x69F PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 CALLDATASIZE SWAP2 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x6CF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x6DF PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x6FA PUSH2 0x6EB DUP3 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x6F4 DUP2 PUSH2 0x10AB JUMP JUMPDEST ISZERO PUSH2 0x134B JUMP JUMPDEST PUSH2 0x855 PUSH2 0x79A PUSH1 0x40 PUSH2 0x70B DUP5 PUSH2 0x19B8 JUMP JUMPDEST SWAP4 PUSH2 0x715 DUP2 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x787 PUSH2 0x737 PUSH2 0x732 DUP10 PUSH2 0x72C PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x103B JUMP JUMPDEST SWAP1 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x1428 JUMP JUMPDEST SWAP8 PUSH2 0x773 PUSH2 0x763 PUSH1 0x60 DUP12 MLOAD ADD MLOAD PUSH2 0x75C DUP5 PUSH2 0x5CF DUP13 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP10 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x89C JUMPI JUMPDEST POP PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x5CF DUP8 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x792 DUP8 DUP3 SLOAD PUSH2 0x1193 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP4 PUSH2 0x84E PUSH1 0x20 PUSH2 0x7AA DUP4 MLOAD PUSH2 0x1170 JUMP JUMPDEST DUP4 MLOAD DUP3 DUP2 ADD MLOAD SWAP2 SWAP5 SWAP2 PUSH2 0x7E8 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 ADD MLOAD SWAP2 PUSH2 0x7D9 PUSH2 0x7D2 PUSH2 0x1146 JUMP JUMPDEST SWAP8 DUP9 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE DUP7 PUSH1 0x60 DUP6 ADD MSTORE ADD SWAP2 PUSH2 0x7FF DUP4 MLOAD PUSH2 0x1170 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x83C SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 ADD MLOAD SWAP2 PUSH2 0x82C PUSH2 0x825 PUSH2 0x1146 JUMP JUMPDEST SWAP7 DUP8 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE DUP6 PUSH1 0x60 DUP5 ADD MSTORE CALLER DUP8 PUSH2 0x1CF3 JUMP JUMPDEST DUP5 CALLER PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x2B2BE5BDC62AAF8DBE8A0FFAC99E7335C8D1245AA56D1D50E01FC21177FB2277 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 PUSH2 0x225 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP1 POP DUP10 GT ISZERO CODESIZE PUSH2 0x76D JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x8D2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x8F1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17C JUMPI PUSH2 0x88F DUP5 PUSH2 0xA61 PUSH2 0x9CB PUSH1 0x40 PUSH2 0x9C4 DUP2 PUSH32 0x2B2BE5BDC62AAF8DBE8A0FFAC99E7335C8D1245AA56D1D50E01FC21177FB2277 SWAP8 PUSH2 0x949 DUP8 SWAP11 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x951 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x984 DUP14 PUSH2 0x97D PUSH2 0x977 PUSH2 0x96C DUP4 PUSH2 0x72C PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0x103B JUMP JUMPDEST SWAP13 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x103B JUMP JUMPDEST SWAP1 PUSH2 0x1071 JUMP JUMPDEST SWAP14 DUP6 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x98F DUP5 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x998 DUP2 PUSH2 0x10AB JUMP JUMPDEST EQ PUSH2 0xA7F JUMPI JUMPDEST POP POP PUSH2 0x9BE PUSH1 0xE0 PUSH2 0x9AE DUP4 PUSH2 0x19B8 JUMP JUMPDEST SWAP12 ADD CALLDATALOAD SWAP12 PUSH1 0x60 DUP10 ADD CALLDATALOAD DUP14 DUP14 PUSH2 0x1A8A JUMP JUMPDEST ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP9 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP2 PUSH2 0xA5A PUSH2 0x9D8 DUP3 PUSH2 0x10E5 JUMP JUMPDEST SWAP2 PUSH2 0x9E5 PUSH1 0x20 DUP3 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x9F9 PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP2 PUSH2 0x82C PUSH2 0x825 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE DUP9 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xA10 PUSH1 0x80 DUP3 ADD PUSH2 0x10E5 JUMP JUMPDEST SWAP1 PUSH2 0xA48 PUSH1 0xC0 PUSH2 0xA22 PUSH1 0xA0 DUP5 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP2 PUSH2 0xA38 PUSH2 0xA31 PUSH2 0x1146 JUMP JUMPDEST SWAP5 DUP6 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP9 PUSH1 0x60 DUP3 ADD MSTORE DUP10 DUP6 PUSH2 0x1CF3 JUMP JUMPDEST DUP3 DUP9 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 AND SWAP4 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0xA8E SWAP2 PUSH1 0x80 DUP5 ADD CALLDATALOAD DUP11 PUSH2 0x187E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x17C JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xAB1 DUP3 PUSH2 0xA95 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xAD0 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB04 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206173736574207472616E73666572206167656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB83 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0xB8B PUSH2 0x206E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xBB7 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A5908199959481C9958DA5C1A595B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xC4D DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0xC55 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xCAD JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP6 SWAP1 SWAP2 SWAP4 SWAP3 SWAP6 PUSH2 0xD10 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0xD1B DUP5 DUP5 EQ PUSH2 0xF27 JUMP JUMPDEST PUSH2 0xD26 DUP3 DUP5 EQ PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x0 SWAP7 PUSH1 0x20 DUP7 ADD SWAP4 DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0xD63 JUMPI POP POP POP POP POP POP POP POP POP DUP1 PUSH2 0xD51 JUMPI JUMPDEST POP PUSH2 0xAB1 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xD5D SWAP1 CALLVALUE LT ISZERO PUSH2 0x11A5 JUMP JUMPDEST CODESIZE PUSH2 0xD46 JUMP JUMPDEST DUP6 PUSH2 0xD6F DUP3 DUP5 DUP13 PUSH2 0xFC0 JUMP JUMPDEST DUP10 PUSH2 0xDF1 PUSH1 0x40 PUSH2 0xD80 DUP7 DUP14 DUP11 PUSH2 0xFE7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0xD8D DUP8 DUP13 DUP13 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0xDB7 DUP8 PUSH2 0xDB0 DUP12 PUSH2 0x72C PUSH2 0xDA9 DUP5 PUSH2 0x72C PUSH1 0x20 DUP12 ADD DUP12 PUSH2 0x103B JUMP JUMPDEST SWAP13 DUP12 PUSH2 0x103B JUMP JUMPDEST SWAP8 DUP6 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x2 PUSH2 0xDC2 DUP5 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0xDCB DUP2 PUSH2 0x10AB JUMP JUMPDEST EQ PUSH2 0xF11 JUMPI JUMPDEST POP POP PUSH2 0x9BE PUSH1 0xE0 PUSH2 0xDE1 DUP4 PUSH2 0x19B8 JUMP JUMPDEST SWAP6 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP9 ADD CALLDATALOAD DUP8 DUP8 PUSH2 0x1A8A JUMP JUMPDEST SWAP3 PUSH2 0xDFE PUSH1 0x40 DUP14 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP1 PUSH2 0xE08 DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP1 PUSH2 0xE15 PUSH1 0x20 DUP3 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0xE40 PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP2 PUSH2 0xE30 PUSH2 0xE29 PUSH2 0x1146 JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xE57 PUSH1 0x80 DUP3 ADD PUSH2 0x10E5 JUMP JUMPDEST SWAP1 PUSH2 0xE69 PUSH1 0xC0 PUSH2 0xA22 PUSH1 0xA0 DUP5 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP1 MLOAD PUSH2 0xE7F DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0xE88 DUP2 PUSH2 0x10DB JUMP JUMPDEST ISZERO PUSH2 0xEEF JUMPI JUMPDEST DUP3 PUSH2 0xEC8 PUSH32 0x2B2BE5BDC62AAF8DBE8A0FFAC99E7335C8D1245AA56D1D50E01FC21177FB2277 SWAP4 PUSH2 0xA5A PUSH2 0xEE6 SWAP5 DUP11 PUSH1 0x1 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0xA0 DUP9 SWAP1 SHL DUP9 SWAP1 SUB SWAP1 DUP2 AND SWAP6 AND SWAP4 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 ADD PUSH2 0xD30 JUMP JUMPDEST SWAP15 DUP16 PUSH1 0x60 SWAP1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP8 ADD MLOAD PUSH2 0xF05 SWAP2 PUSH2 0x1193 JUMP JUMPDEST SWAP15 SWAP6 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0xF20 SWAP2 PUSH1 0x80 DUP5 ADD CALLDATALOAD DUP10 PUSH2 0x187E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0xDD1 JUMP JUMPDEST ISZERO PUSH2 0xF2E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x98CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xF6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xA0E4DEDECCE640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xDE NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x17C JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xFAA JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x17C JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x17C JUMPI PUSH1 0x20 ADD DUP3 PUSH1 0x5 SHL CALLDATASIZE SUB DUP2 SGT PUSH2 0x17C JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x17C JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17C JUMPI PUSH1 0x20 ADD SWAP2 PUSH2 0x140 DUP3 MUL CALLDATASIZE SUB DUP4 SGT PUSH2 0x17C JUMPI JUMP JUMPDEST SWAP1 ISZERO PUSH2 0xFE2 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH2 0x140 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x17C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x10B5 JUMPI JUMP JUMPDEST PUSH2 0x1095 JUMP JUMPDEST CALLDATALOAD PUSH2 0x10C4 DUP2 PUSH2 0x108B JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x10C4 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x17C JUMPI JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x10B5 JUMPI JUMP JUMPDEST CALLDATALOAD PUSH2 0x10C4 DUP2 PUSH2 0x10D1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1120 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1120 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xAB1 PUSH1 0x80 DUP4 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xAB1 PUSH1 0xE0 DUP4 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x10B5 JUMPI MSTORE JUMP JUMPDEST MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x10B5 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x11A0 JUMPI JUMP JUMPDEST PUSH2 0x117D JUMP JUMPDEST ISZERO PUSH2 0x11AC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F74616C206D73672E76616C756500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x11FA SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1252 PUSH1 0x60 SWAP2 PUSH2 0x122A DUP5 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x72C PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP5 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x103B JUMP JUMPDEST ADD CALLDATALOAD GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1120 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1277 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DC99195C88185B1C9958591E48199A5B1B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12BA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7264657220616C72656164792063616E63656C6C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x130B DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP4 PUSH2 0x1319 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x20 DUP6 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x17C JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x133B JUMPI POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x132F JUMP JUMPDEST ISZERO PUSH2 0x1352 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA1030903134B21037B93232B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH2 0x13A1 DUP2 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 SWAP5 DUP1 CALLDATALOAD PUSH2 0x13B1 DUP2 PUSH2 0x10D1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH2 0x13C1 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x140 DUP2 DUP5 SUB SLT PUSH2 0x17C JUMPI PUSH1 0x60 PUSH2 0x120 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x13F7 DUP5 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x1411 DUP5 SWAP7 PUSH2 0x1406 DUP2 DUP5 PUSH2 0x1389 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x80 DUP4 ADD PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x10C4 SWAP1 CALLDATASIZE SWAP1 PUSH2 0x13D7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x11A0 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1447 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081CD95B1B08185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1493 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x14DF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x29B2B73232B91034B9903737BA103A30B5B2B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1521 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585AD95C881BDC99195C88199A5B1B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1562 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13585AD95C881BDC99195C8818D85B98D95B1B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xAB1 DUP3 PUSH2 0x108B JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x17C JUMPI DUP1 CALLDATALOAD PUSH2 0x15C0 DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP3 PUSH2 0x15CE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1125 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 PUSH2 0x140 DUP2 DUP7 ADD SWAP4 MUL DUP5 ADD ADD SWAP3 DUP2 DUP5 GT PUSH2 0x17C JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x15F9 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x140 SWAP2 PUSH2 0x1609 DUP5 DUP7 PUSH2 0x13D7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1120 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x163B DUP3 PUSH2 0x1614 JUMP JUMPDEST SWAP2 PUSH2 0x1649 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1125 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x17C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x17C JUMPI DUP2 PUSH1 0x20 PUSH2 0x10C4 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x162F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x17C JUMPI PUSH2 0x1696 PUSH2 0x1155 JUMP JUMPDEST SWAP3 PUSH2 0x16A0 DUP3 PUSH2 0x159F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI DUP2 PUSH2 0x16C1 SWAP2 DUP5 ADD PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x16D2 PUSH1 0x40 DUP4 ADD PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x16E3 PUSH1 0x60 DUP4 ADD PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x1719 SWAP3 ADD PUSH2 0x1666 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1727 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585AD95C881BDC99195C88195E1C1A5C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x176D DUP4 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x177E DUP3 PUSH2 0x72C PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x103B JUMP JUMPDEST SWAP2 PUSH2 0x178C PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x103B JUMP JUMPDEST ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x179F DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH2 0x17AD DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND SUB PUSH2 0x1840 JUMPI PUSH2 0xAB1 SWAP5 PUSH2 0x1805 PUSH2 0x17FE PUSH2 0x17F2 PUSH1 0x40 PUSH2 0x5A8 SWAP8 PUSH2 0x9BE DUP11 PUSH1 0x80 DUP10 PUSH2 0x17EB PUSH2 0x1836 SWAP12 PUSH2 0x183B SWAP16 DUP5 ADD PUSH2 0x2744 JUMP JUMPDEST ADD SWAP1 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER EQ PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x181A PUSH2 0x1815 PUSH2 0x5A8 DUP6 DUP5 PUSH2 0x121A JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST PUSH2 0x182F PUSH2 0x182A PUSH2 0x5A8 DUP6 DUP5 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x155B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2A30B5B2B91036BAB9BA1036B0BA31B41036B0B5B2B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1897 SWAP4 SWAP3 PUSH2 0x188F PUSH2 0x69F SWAP3 PUSH2 0x2502 JUMP JUMPDEST SWAP4 CALLDATASIZE SWAP2 PUSH2 0x12FF JUMP JUMPDEST ISZERO PUSH2 0x189E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B21026B2B935B63290383937B7B3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x18E4 DUP3 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x18F1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1125 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1902 PUSH1 0x1F NOT SWAP2 PUSH2 0x1259 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1938 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x192B JUMP JUMPDEST SWAP3 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 SWAP4 SWAP1 SWAP4 PUSH1 0xE0 DUP5 ADD SWAP8 PUSH32 0x6C8FFD199DDE1E3C1F0D71DAE647C455E0DA36831CCD370E21BB7D22D370959 DUP6 MSTORE PUSH1 0x3 DUP7 LT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0xC0 SWAP6 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD SWAP2 PUSH2 0x19D2 PUSH2 0x19CB DUP5 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP1 POP PUSH2 0x18DA JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x19E0 DUP6 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x1A13 JUMPI DUP1 PUSH2 0x1A02 PUSH2 0x19FD PUSH1 0x1 SWAP4 PUSH2 0x72C DUP10 DUP8 PUSH2 0x103B JUMP JUMPDEST PUSH2 0x2502 JUMP JUMPDEST PUSH2 0x1A0C DUP3 DUP7 PUSH2 0x190C JUMP JUMPDEST MSTORE ADD PUSH2 0x19D6 JUMP JUMPDEST POP SWAP2 SWAP3 POP PUSH1 0x40 MLOAD PUSH2 0x1A3A DUP2 PUSH2 0x1A2C PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0x1920 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1125 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x1A84 PUSH2 0x1A4A DUP3 PUSH2 0x10BA JUMP JUMPDEST SWAP3 PUSH2 0x1A2C PUSH2 0x1A5A PUSH1 0x40 DUP6 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP4 PUSH2 0x1A67 PUSH1 0x60 DUP3 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP1 PUSH1 0xA0 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 PUSH1 0x20 DUP8 ADD SWAP10 DUP11 PUSH2 0x194E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1B10 JUMPI JUMPDEST POP ISZERO PUSH2 0x1ADC JUMPI PUSH2 0x1AC8 PUSH2 0x5CF SWAP2 PUSH2 0x1AD9 SWAP5 PUSH2 0x1193 JUMP JUMPDEST SWAP4 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x125B9D985B1A5908199A5B1B PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 DUP5 ADD DUP1 DUP6 GT PUSH2 0x11A0 JUMPI GT ISZERO CODESIZE PUSH2 0x1AB2 JUMP JUMPDEST ISZERO PUSH2 0x1B2B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x119959481C9958DA5C1A595B9D081B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B6F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881859D95B9D081B9BDD081CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x11A0 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1BFE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74206D73672E76616C7565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1C67 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1C4D DUP3 PUSH2 0x1614 JUMP JUMPDEST SWAP2 PUSH2 0x1C5B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1125 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1C73 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1CB5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13985D1A5D99481D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1D0A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x1B24 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1D1F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1D2A DUP2 ISZERO ISZERO PUSH2 0x1B68 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1D35 DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1D3E DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1DC9 JUMPI POP POP PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH1 0x60 PUSH2 0xAB1 SWAP7 ADD SWAP1 PUSH2 0x1D6B PUSH2 0x1D63 DUP4 MLOAD PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x2710 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x1D83 PUSH2 0x1D79 DUP3 DUP6 MLOAD PUSH2 0x1433 JUMP JUMPDEST SWAP4 MLOAD CALLVALUE LT ISZERO PUSH2 0x1BF7 JUMP JUMPDEST DUP1 PUSH2 0x1D9A JUMPI JUMPDEST POP GAS CALL PUSH2 0x1D94 PUSH2 0x1C3C JUMP JUMPDEST POP PUSH2 0x1CAE JUMP JUMPDEST DUP4 DUP1 DUP1 DUP1 PUSH2 0x1DC3 SWAP5 PUSH2 0x1DB3 PUSH1 0x4 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST GAS CALL PUSH2 0x1DBD PUSH2 0x1C3C JUMP JUMPDEST POP PUSH2 0x1C6C JUMP JUMPDEST CODESIZE PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP4 SWAP3 SWAP4 MLOAD PUSH2 0x1DD9 DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1DE2 DUP2 PUSH2 0x10DB JUMP JUMPDEST SUB PUSH2 0x1F1A JUMPI POP PUSH1 0x60 DUP4 ADD SWAP3 PUSH2 0x1E09 PUSH2 0x1E01 PUSH2 0x1D63 DUP7 MLOAD PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST DUP1 SWAP6 MLOAD PUSH2 0x1433 JUMP JUMPDEST SWAP4 DUP1 PUSH2 0x1E95 JUMPI JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1E3E SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x1E2F SWAP1 PUSH2 0x17F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST SWAP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 SWAP5 PUSH2 0x1E6A PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x368FA339 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1BB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1E90 JUMPI PUSH2 0x1E7B JUMPI POP JUMP JUMPDEST DUP1 PUSH2 0x1E8A PUSH1 0x0 PUSH2 0xAB1 SWAP4 PUSH2 0x1125 JUMP JUMPDEST DUP1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1EAC SWAP1 PUSH2 0x17F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x17C JUMPI DUP7 PUSH1 0x0 DUP1 SWAP5 PUSH2 0x1EF6 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x368FA339 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1BB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1E90 JUMPI ISZERO PUSH2 0x1E10 JUMPI DUP1 PUSH2 0x1E8A PUSH1 0x0 PUSH2 0x1F14 SWAP4 PUSH2 0x1125 JUMP JUMPDEST CODESIZE PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x3 DUP5 SWAP4 SWAP5 MLOAD PUSH2 0x1F29 DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1F32 DUP2 PUSH2 0x10DB JUMP JUMPDEST SUB PUSH2 0x1F8F JUMPI POP PUSH1 0x5 SLOAD PUSH2 0x1F4F SWAP1 PUSH2 0x17F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 ADD MLOAD SWAP4 DUP2 EXTCODESIZE ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 SWAP5 PUSH2 0x1E6A PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x3C4FC9FB PUSH1 0xE1 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x2 DUP4 SWAP5 SWAP4 MLOAD PUSH2 0x1F9E DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1FA7 DUP2 PUSH2 0x10DB JUMP JUMPDEST SUB PUSH2 0x2030 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x60 PUSH1 0x40 DUP7 ADD MLOAD SWAP6 ADD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB9E1F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH1 0xE4 DUP2 ADD PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x556E737570706F727465642061737365742074797065 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2082 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x20D7 JUMPI PUSH2 0x10C4 SWAP1 PUSH2 0x2582 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x21A6 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP3 EQ PUSH2 0x2192 JUMPI DUP4 DUP6 MSTORE DUP5 SWAP3 SWAP2 PUSH1 0x20 DUP5 ADD SWAP2 DUP2 ISZERO PUSH2 0x2179 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2123 JUMPI JUMPDEST POP PUSH2 0x10C4 SWAP3 POP SUB DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP5 DUP4 LT PUSH2 0x2162 JUMPI POP PUSH2 0x10C4 SWAP4 POP ADD CODESIZE PUSH2 0x2116 JUMP JUMPDEST DUP1 SLOAD DUP3 DUP5 ADD MSTORE DUP6 SWAP4 POP PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x214E JUMP JUMPDEST PUSH1 0xFF NOT AND DUP3 MSTORE POP PUSH2 0x10C4 SWAP4 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP CODESIZE PUSH2 0x2116 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x20F2 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x21C1 JUMPI PUSH2 0x10C4 SWAP1 PUSH2 0x2582 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2262 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP3 EQ PUSH2 0x2192 JUMPI DUP4 DUP6 MSTORE DUP5 SWAP3 SWAP2 PUSH1 0x20 DUP5 ADD SWAP2 DUP2 ISZERO PUSH2 0x2179 JUMPI POP PUSH1 0x1 EQ PUSH2 0x220C JUMPI POP PUSH2 0x10C4 SWAP3 POP SUB DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP5 DUP4 LT PUSH2 0x224B JUMPI POP PUSH2 0x10C4 SWAP4 POP ADD CODESIZE PUSH2 0x2116 JUMP JUMPDEST DUP1 SLOAD DUP3 DUP5 ADD MSTORE DUP6 SWAP4 POP PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2237 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x21DC JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x17C JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17C JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x17C JUMPI JUMP JUMPDEST ISZERO PUSH2 0x22A5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E61747572652E204D616B6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3A34329039B4B3B732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x17C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x17C JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP4 DUP2 SWAP3 DUP5 MSTORE PUSH1 0x40 PUSH1 0x20 DUP6 ADD MSTORE DUP2 PUSH1 0x40 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2352 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374206F72646572207369676E61747572652076657269666963 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30BA34B7B71032B93937B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x23B7 PUSH1 0x40 DUP3 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x23D1 PUSH2 0x23C6 PUSH2 0x55A DUP5 PUSH2 0x19B8 JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP3 DUP3 EXTCODESIZE ISZERO PUSH2 0x2466 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP2 MSTORE SWAP4 PUSH1 0x20 SWAP4 DUP6 SWAP4 SWAP1 SWAP3 DUP5 SWAP3 DUP4 SWAP3 PUSH2 0x23FF SWAP3 PUSH1 0x4 DUP6 ADD PUSH2 0x231D JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1E90 JUMPI PUSH2 0xAB1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2437 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xB135D3F PUSH1 0xE1 SHL EQ PUSH2 0x234B JUMP JUMPDEST PUSH2 0x2459 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x245F JUMPI JUMPDEST PUSH2 0x2451 DUP2 DUP4 PUSH2 0x1125 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x22FD JUMP JUMPDEST CODESIZE PUSH2 0x241E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x17F2 SWAP1 PUSH2 0x247C PUSH2 0x2482 SWAP4 PUSH2 0xAB1 SWAP7 CALLDATASIZE SWAP2 PUSH2 0x162F JUMP JUMPDEST SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND EQ PUSH2 0x229E JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x24E2 JUMPI PUSH2 0x24AE DUP4 DUP7 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x24D1 JUMPI POP PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x249B JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x1 SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x24C9 JUMP JUMPDEST SWAP2 POP SWAP3 POP EQ SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH1 0x20 PUSH2 0x24FA SWAP3 ADD MLOAD PUSH2 0x190C JUMP JUMPDEST MLOAD ADD MLOAD TIMESTAMP GT SWAP1 JUMP JUMPDEST PUSH2 0x2514 PUSH2 0x250F CALLDATASIZE DUP4 PUSH2 0x1389 JUMP JUMPDEST PUSH2 0x27CD JUMP JUMPDEST SWAP1 PUSH2 0x2525 PUSH2 0x250F CALLDATASIZE PUSH1 0x80 DUP5 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP1 PUSH2 0x120 PUSH2 0x100 DUP3 ADD CALLDATALOAD SWAP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0xE28CFD2E1BCEC04840C1DDB765A2C756CF3E42AEF44E48DDDA10AF78ED9A1C44 DUP7 MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1A84 PUSH1 0xC0 DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x25B3 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH2 0x259E DUP3 DUP6 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP6 MSTORE DUP5 ADD SWAP2 PUSH1 0x1F NOT ADD CALLDATASIZE DUP4 CALLDATACOPY DUP4 MSTORE MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x42 SWAP1 PUSH2 0x25CF PUSH2 0x2841 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x10C4 SWAP2 PUSH2 0x2623 SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 PUSH2 0x2957 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2999 JUMP JUMPDEST ISZERO PUSH2 0x2632 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x82E6E6CAE840E8F2E0CA40DAD2E6DAC2E8C6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2674 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726163742061646472657373206D69736D6174636800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x26C0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x82E6E6CAE840928840DAD2E6DAC2E8C6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2700 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F66666572656420616D6F756E74206578636565647320726571756573746564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x274F DUP2 PUSH2 0x10D1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH2 0x275A DUP2 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x10B5 JUMPI PUSH2 0xAB1 SWAP4 PUSH2 0x277F PUSH1 0x60 SWAP4 SWAP3 DUP5 SWAP4 EQ PUSH2 0x262B JUMP JUMPDEST PUSH2 0x27AE PUSH2 0x278E PUSH1 0x20 DUP7 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x279D PUSH2 0x17F2 PUSH1 0x20 DUP6 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND EQ PUSH2 0x266D JUMP JUMPDEST PUSH2 0x27C1 PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD CALLDATALOAD EQ PUSH2 0x26B9 JUMP JUMPDEST ADD CALLDATALOAD SWAP2 ADD CALLDATALOAD LT ISZERO PUSH2 0x26F9 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND SWAP1 PUSH1 0x60 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0x6E4F52E5739DBEFD226DCBEFEF0E563115BC2B92726A648E213CB8CDE30B11A6 DUP7 MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1A84 PUSH1 0xC0 DUP3 PUSH2 0x1125 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x292E JUMPI JUMPDEST ISZERO PUSH2 0x289C JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1A84 PUSH1 0xC0 DUP3 PUSH2 0x1125 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x2873 JUMP JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x2985 JUMPI PUSH2 0x2981 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x10B5 JUMPI JUMP JUMPDEST PUSH2 0x29A2 DUP2 PUSH2 0x298F JUMP JUMPDEST DUP1 PUSH2 0x29AA JUMPI POP JUMP JUMPDEST PUSH2 0x29B3 DUP2 PUSH2 0x298F JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2A00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2A09 DUP2 PUSH2 0x298F JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x2A56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2A62 PUSH1 0x3 SWAP3 PUSH2 0x298F JUMP JUMPDEST EQ PUSH2 0x2A69 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2B2D JUMPI PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2B24 JUMPI SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SWAP9 TSTORE DUP9 0xDE CALLCODE CREATE 0xCC 0xBF SELFBALANCE GASPRICE DUP4 0xAC 0xCF 0xDE SMOD 0x24 SWAP8 PUSH20 0xDC1CFF6CC855EB0AE7D683269E64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"323:11886:20:-:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;323:11886:20;;;;;;-1:-1:-1;432:5:20;;;323:11886;;734:10:10;-1:-1:-1;;;;;;323:11886:20;;;;;;;;;;734:10:10;-1:-1:-1;;;;;323:11886:20;;2566:40:0;;-1:-1:-1;2566:40:0;3251:45:15;;;:::i;:::-;3243:53;;3317:51;;;:::i;:::-;3306:62;;323:11886:20;3392:22:15;;3378:36;;;;323:11886:20;3441:25:15;;3424:42;;;3494:13;3477:30;;323:11886:20;;4054:81:15;323:11886:20;4054:81:15;;1929:95;;;;323:11886:20;1929:95:15;;;323:11886:20;1929:95:15;;;3494:13;1929:95;;;;4129:4;3477:30;1929:95;;;3477:30;4054:81;;;;;;:::i;:::-;323:11886:20;4044:92:15;;1929:95;3517:48;4129:4;4054:81;3575:27;1062:28:20;323:11886;;-1:-1:-1;;;;;323:11886:20;;;-1:-1:-1;;;;;;323:11886:20;;;;;;;1100:40;323:11886;;;;;;;;;;;;;;432:5;1174:22;;432:5;;1226:16;432:5;323:11886;;;;;;;;1929:95:15;323:11886:20;;;;;3477:30:15;323:11886:20;;;;;4054:81:15;323:11886:20;;;;;3378:36:15;323:11886:20;;;;;3424:42:15;323:11886:20;;;;;3243:53:15;323:11886:20;;;;;3306:62:15;323:11886:20;;;;;;432:5;323:11886;;-1:-1:-1;;;432:5:20;;323:11886;1062:28;432:5;;;;;;;;-1:-1:-1;;;432:5:20;;;;;;;323:11886;-1:-1:-1;323:11886:20;;;;;;;-1:-1:-1;;323:11886:20;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;323:11886:20;;;;;-1:-1:-1;323:11886:20;;;;-1:-1:-1;;;;;323:11886:20;;;;;;:::o;2895:341:11:-;;323:11886:20;;3040:2:11;3018:24;;3014:216;3040:2;;;323:11886:20;;1835:2:11;323:11886:20;;1821:16:11;1817:72;;3040:2;323:11886:20;;;;1929:95:15;3040:2:11;323:11886:20;;;;1930:36:11;3058:27;:::o;323:11886:20:-;;;;3040:2:11;323:11886:20;;;;;1930:36:11;3058:27;:::o;1817:72::-;323:11886:20;;1860:18:11;;;;;;3040:2;1860:18;;;323:11886:20;;;;;;;;;432:5;323:11886;;;;;;;;;;;432:5;323:11886;;;;;;1835:2:11;323:11886:20;;;;;;;1860:18:11;;;;323:11886:20;3040:2:11;323:11886:20;;;;;;432:5;323:11886;;;;;;;-1:-1:-1;323:11886:20;;;3014:216:11;-1:-1:-1;;;;;323:11886:20;;;;3282:13:15;323:11886:20;;;;;;;;;;;3014:216:11;3040:2;323:11886:20;;;;;;;;;;3014:216:11;323:11886:20;3040:2:11;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3282:13:15;323:11886:20;1371:66:11;3176:43;:::o;323:11886:20:-;;;;-1:-1:-1;323:11886:20;;;;;;;;;;3282:13:15;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;3282:13:15;323:11886:20;1371:66:11;3176:43;:::o;323:11886:20:-;;;;;;;;;;;;;;;;;;;;;;;3040:2:11;323:11886:20;;;;;;;;;;;;;;;;;3282:13:15;323:11886:20;;;3040:2:11;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2895:341:11;;323:11886:20;;3040:2:11;3018:24;;3014:216;3040:2;;;323:11886:20;;1835:2:11;323:11886:20;;1821:16:11;1817:72;;3040:2;323:11886:20;;;;1929:95:15;3040:2:11;323:11886:20;;;;1930:36:11;3058:27;:::o;1817:72::-;323:11886:20;;1860:18:11;;;;;;3040:2;1860:18;;;323:11886:20;;;;;;;;;432:5;323:11886;;;;;;;;;;;432:5;323:11886;;;;;;1835:2:11;323:11886:20;;;;;;;1860:18:11;;;;323:11886:20;3040:2:11;323:11886:20;;;;;;432:5;323:11886;;;;;;;-1:-1:-1;323:11886:20;;;3014:216:11;-1:-1:-1;;;;;323:11886:20;;;;3351:16:15;323:11886:20;;;;;;;;;;;3014:216:11;3040:2;323:11886:20;;;;;;;;;;3014:216:11;323:11886:20;3040:2:11;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;3351:16:15;323:11886:20;;;;;3351:16:15;323:11886:20;1371:66:11;3176:43;:::o;323:11886:20:-;;;;-1:-1:-1;323:11886:20;;;;;;;;;;3351:16:15;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:16:15;323:11886:20;1371:66:11;3176:43;:::o;323:11886:20:-;;;;;;;3351:16:15;323:11886:20;;;;;;;;;;;;;;;3040:2:11;323:11886:20;;;;;;;;;;;;;;;;;3351:16:15;323:11886:20;;;3040:2:11;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode":{"entryPoint":551,"id":null,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":2726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_struct_OrderItem_dyn":{"entryPoint":5546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_struct_Order_calldata_dyn_calldata":{"entryPoint":332,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_array_bytes32_dyn":{"entryPoint":4863,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":5679,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes":{"entryPoint":5734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":8957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_enum_OrderType":{"entryPoint":5535,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_struct_Asset":{"entryPoint":5001,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Order":{"entryPoint":5761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_OrderItem":{"entryPoint":5079,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Order_calldata":{"entryPoint":385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_Order_calldatat_uint256":{"entryPoint":592,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_13127":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_address_address_uint256":{"entryPoint":7097,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_address_uint256_uint256_stringliteral_c5d2":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_array_bytes32_dyn":{"entryPoint":6432,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_bytes_calldata":{"entryPoint":8989,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_bytes32_enum_OrderType_bytes32_address_address_bytes32_uint256":{"entryPoint":6478,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_string":{"entryPoint":973,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_520d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6c31":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_array_struct_OrderItem_calldata_dyn_calldata":{"entryPoint":4155,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_bytes_calldata":{"entryPoint":8812,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_and_zero_memory_array_array_bytes32_dyn":{"entryPoint":6362,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":4422,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_13194":{"entryPoint":4437,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":4697,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":5652,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_bytes32_dyn_calldata_dyn_calldata":{"entryPoint":4087,"id":null,"parameterSlots":3,"returnSlots":2},"calldata_array_index_access_struct_OrderItem_calldata_dyn_calldata":{"entryPoint":4218,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_struct_OrderItem_calldata_dyn_calldata_13134":{"entryPoint":4209,"id":null,"parameterSlots":2,"returnSlots":1},"calldata_array_index_access_struct_Order_calldata_dyn_calldata":{"entryPoint":4032,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":4071,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":4499,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":7140,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":5171,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_struct_OrderItem_calldata_to_struct_OrderItem":{"entryPoint":5160,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_MAX_FEE_BPS":{"entryPoint":2889,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_acceptBid":{"entryPoint":1700,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_assetTransferAgent":{"entryPoint":717,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_batchMatchOrders":{"entryPoint":399,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_cancelOrder":{"entryPoint":1336,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_eip712Domain":{"entryPoint":1038,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_feeBps":{"entryPoint":562,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_feeRecipient":{"entryPoint":676,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isOrderCancelled":{"entryPoint":641,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isOrderFullyFilled":{"entryPoint":758,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_matchOrders":{"entryPoint":2215,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_orderFillAmount":{"entryPoint":3060,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":1295,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":783,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setAssetTransferAgent":{"entryPoint":2739,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFeeBps":{"entryPoint":876,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setFeeRecipient":{"entryPoint":2918,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":3120,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verifyMerkleProof":{"entryPoint":1623,"id":null,"parameterSlots":0,"returnSlots":0},"extract_returndata":{"entryPoint":7228,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":4389,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_13170":{"entryPoint":4357,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":8302,"id":54,"parameterSlots":0,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":10305,"id":2344,"parameterSlots":0,"returnSlots":1},"fun_fillOrder":{"entryPoint":6794,"id":4396,"parameterSlots":4,"returnSlots":0},"fun_hash":{"entryPoint":10189,"id":5041,"parameterSlots":1,"returnSlots":1},"fun_hashOrderItem":{"entryPoint":9474,"id":5168,"parameterSlots":1,"returnSlots":1},"fun_hashTypedDataV4":{"entryPoint":9668,"id":2381,"parameterSlots":1,"returnSlots":1},"fun_hash_5242":{"entryPoint":6584,"id":5242,"parameterSlots":1,"returnSlots":1},"fun_isOrderCancelled":{"entryPoint":4593,"id":3702,"parameterSlots":2,"returnSlots":1},"fun_isOrderExpired":{"entryPoint":9450,"id":5279,"parameterSlots":2,"returnSlots":1},"fun_isOrderFullyFilled":{"entryPoint":4634,"id":3682,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantAfter":{"entryPoint":null,"id":204,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":5250,"id":196,"parameterSlots":0,"returnSlots":0},"fun_recoverSigner":{"entryPoint":9706,"id":5259,"parameterSlots":2,"returnSlots":1},"fun_throwError":{"entryPoint":10649,"id":1913,"parameterSlots":1,"returnSlots":0},"fun_toString":{"entryPoint":9602,"id":1389,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback":{"entryPoint":8390,"id":1488,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_13118":{"entryPoint":8624,"id":1488,"parameterSlots":1,"returnSlots":1},"fun_transferWithFee":{"entryPoint":7411,"id":4594,"parameterSlots":3,"returnSlots":0},"fun_tryRecover":{"entryPoint":10937,"id":2127,"parameterSlots":4,"returnSlots":2},"fun_tryRecover_1959":{"entryPoint":10583,"id":1959,"parameterSlots":2,"returnSlots":2},"fun_validate":{"entryPoint":5986,"id":4653,"parameterSlots":3,"returnSlots":0},"fun_validateBulkOrderItem":{"entryPoint":6270,"id":4789,"parameterSlots":4,"returnSlots":0},"fun_validateCompatibleAsset":{"entryPoint":10052,"id":5087,"parameterSlots":2,"returnSlots":0},"fun_validateOrderSigner":{"entryPoint":9131,"id":4761,"parameterSlots":1,"returnSlots":0},"fun_verify":{"entryPoint":9363,"id":5305,"parameterSlots":3,"returnSlots":1},"mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32_13122":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_mapping_uint256_uint256_of_bytes32_13129":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes32_dyn":{"entryPoint":6412,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_nonReentrant":{"entryPoint":3329,"id":181,"parameterSlots":7,"returnSlots":0},"panic_error_0x11":{"entryPoint":4477,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":4245,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4010,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4335,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_calldatat_address":{"entryPoint":4295,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_enum_AssetType":{"entryPoint":4325,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_enum_OrderType":{"entryPoint":4282,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_enum_AssetType":{"entryPoint":4464,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":9977,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2645":{"entryPoint":4517,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2f72":{"entryPoint":9913,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_37b8":{"entryPoint":7159,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4be6":{"entryPoint":6948,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5ce8":{"entryPoint":7276,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_68c5":{"entryPoint":5336,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6d41":{"entryPoint":5920,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6ee0":{"entryPoint":9035,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7aa1":{"entryPoint":8862,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_834d":{"entryPoint":5402,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9c05":{"entryPoint":9771,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ac93":{"entryPoint":4787,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b3cd":{"entryPoint":7016,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b874":{"entryPoint":4720,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ba49":{"entryPoint":9837,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bb46":{"entryPoint":3879,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d199":{"entryPoint":4939,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d436":{"entryPoint":3941,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_da0e":{"entryPoint":7342,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e47b":{"entryPoint":5184,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fcf9":{"entryPoint":5467,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":7085,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offset_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_AssetType":{"entryPoint":4315,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_OrderType":{"entryPoint":4267,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_RecoverError":{"entryPoint":10639,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_address":{"entryPoint":2709,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_enum_AssetType":{"entryPoint":4305,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_enum_OrderType":{"entryPoint":4235,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_AssetType":{"entryPoint":4452,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"2242":[{"length":32,"start":10362}],"2244":[{"length":32,"start":10545}],"2246":[{"length":32,"start":10308}],"2248":[{"length":32,"start":10441}],"2250":[{"length":32,"start":10479}],"2253":[{"length":32,"start":1063}],"2256":[{"length":32,"start":1104}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80631ef1c7d21461014757806324a9d853146101425780632e1cbea21461013d57806346904840146101385780634715399c14610133578063703cebfe1461012e578063715018a61461012957806372c27b621461012457806384b0196e1461011f5780638da5cb5b1461011a578063a83fb54f14610115578063ada4fa1814610110578063bc2db5c41461010b578063bf76c03214610106578063ca200ad814610101578063d55be8c6146100fc578063e74b981b146100f7578063eded1f00146100f25763f2fde38b146100ed57600080fd5b610c30565b610bf4565b610b66565b610b49565b610ab3565b6108a7565b6106a4565b610657565b610538565b61050f565b61040e565b61036c565b61030f565b6102f6565b6102cd565b6102a4565b610281565b610232565b61018f565b9181601f8401121561017c578235916001600160401b03831161017c576020808501948460051b01011161017c57565b600080fd5b908160e091031261017c5790565b608036600319011261017c576004356001600160401b03811161017c576101ba90369060040161014c565b6024356001600160401b03811161017c576101d9903690600401610181565b916044356001600160401b03811161017c576101f990369060040161014c565b90606435946001600160401b03861161017c5761021d61022596369060040161014c565b959094610d01565b005b600091031261017c57565b3461017c57600036600319011261017c576020600654604051908152f35b604060031982011261017c57600435906001600160401b03821161017c5761027a91600401610181565b9060243590565b3461017c57602061029a61029436610250565b906111f1565b6040519015158152f35b3461017c57600036600319011261017c576004546040516001600160a01b039091168152602090f35b3461017c57600036600319011261017c576005546040516001600160a01b039091168152602090f35b3461017c57602061029a61030936610250565b9061121a565b3461017c57600036600319011261017c5761032861206e565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017c57602036600319011261017c5760043561038861206e565b612710811161039657600655005b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206665652042505360881b6044820152606490fd5b919082519283825260005b8481106103f9575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016103d8565b3461017c57600036600319011261017c576104b461044b7f00000000000000000000000000000000000000000000000000000000000000006120c6565b6104747f00000000000000000000000000000000000000000000000000000000000000006121b0565b60206040516104838282611125565b60008152816104c281830194601f198301368737604051978897600f60f81b895260e0858a015260e08901906103cd565b9087820360408901526103cd565b91466060870152306080870152600060a087015285830360c0870152519182815201929160005b8281106104f857505050500390f35b8351855286955093810193928101926001016104e9565b3461017c57600036600319011261017c576001546040516001600160a01b039091168152602090f35b3461017c5761054636610250565b61054e611482565b61055f61055a836119b8565b6125c4565b91610569816123ab565b604081013561057781610a95565b6001600160a01b0316330361061a57816105bb6105b66105a883856105b16105ac6105a86105eb9a6105de9a61121a565b1590565b611270565b6111f1565b6112b3565b6105cf846000526008602052604060002090565b90600052602052604060002090565b805460ff19166001179055565b7f42c76c81a7cba1b9c861353909a184e20747ab960332628dabcbb5852fc5cbb5600080a26102256001600055565b60405162461bcd60e51b815260206004820152601560248201527413db9b1e481b585ad95c8818d85b8818d85b98d95b605a1b6044820152606490fd5b3461017c57606036600319011261017c576004356001600160401b03811161017c5761029a61068c602092369060040161014c565b9061069f602435916044359336916112ff565b612493565b606036600319011261017c576004356001600160401b03811161017c576106cf903690600401610181565b60243590604435906106df611482565b6106fa6106eb826110ba565b6106f4816110ab565b1561134b565b61085561079a604061070b846119b8565b93610715816123ab565b6107876107376107328961072c602086018661103b565b9061107a565b611428565b9761077361076360608b51015161075c846105cf8c6000526007602052604060002090565b5490611433565b891515908161089c575b50611440565b6105cf876000526007602052604060002090565b610792878254611193565b9055016110c7565b9361084e60206107aa8351611170565b8351828101519194916107e8906040906001600160a01b0316920151916107d96107d2611146565b9788611164565b6001600160a01b031686850152565b604085015286606085015201916107ff8351611170565b9251602081015161083c906040906001600160a01b03169201519161082c610825611146565b9687611164565b6001600160a01b03166020860152565b60408401528560608401523387611cf3565b8433611cf3565b60405191825233926001600160a01b0316917f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb22779080602081015b0390a46102256001600055565b90508911153861076d565b608036600319011261017c576004356001600160401b03811161017c576108d2903690600401610181565b6024356001600160401b03811161017c576108f1903690600401610181565b9060443590606435906001600160401b03821161017c5761088f84610a616109cb60406109c4817f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb227797610949879a369060040161014c565b610951611482565b6109848d61097d61097761096c8361072c60208a018a61103b565b9c602081019061103b565b90611071565b9d85611762565b600261098f846110ba565b610998816110ab565b14610a7f575b50506109be60e06109ae836119b8565b9b01359b60608901358d8d611a8a565b016110c7565b98016110c7565b91610a5a6109d8826110e5565b916109e5602082016110c7565b6109f960408301359161082c610825611146565b6040840152886060840152610a10608082016110e5565b90610a4860c0610a2260a084016110c7565b92013591610a38610a31611146565b9485611164565b6001600160a01b03166020840152565b60408201528860608201528985611cf3565b8288611cf3565b6040519485526001600160a01b039081169516939081906020820190565b610a8e9160808401358a61187e565b388061099e565b6001600160a01b0381160361017c57565b3590610ab182610a95565b565b3461017c57602036600319011261017c57600435610ad081610a95565b610ad861206e565b6001600160a01b03168015610b04576bffffffffffffffffffffffff60a01b6005541617600555600080f35b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206173736574207472616e73666572206167656e74000000006044820152606490fd5b3461017c57600036600319011261017c5760206040516127108152f35b3461017c57602036600319011261017c57600435610b8381610a95565b610b8b61206e565b6001600160a01b03168015610bb7576bffffffffffffffffffffffff60a01b6004541617600455600080f35b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908199959481c9958da5c1a595b9d605a1b6044820152606490fd5b3461017c57604036600319011261017c576004356024359060005260076020526040600020906000526020526020604060002054604051908152f35b3461017c57602036600319011261017c57600435610c4d81610a95565b610c5561206e565b6001600160a01b03811615610cad57600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b94959091939295610d10611482565b610d1b848414610f27565b610d26828414610f65565b6000966020860193885b818110610d635750505050505050505080610d51575b50610ab16001600055565b610d5d903410156111a5565b38610d46565b85610d6f82848c610fc0565b89610df16040610d80868d8a610fe7565b3593610d8d878c8c610ff7565b610db787610db08b61072c610da98461072c60208b018b61103b565b9c8b61103b565b9785611762565b6002610dc2846110ba565b610dcb816110ab565b14610f11575b50506109be60e0610de1836119b8565b9501359560608801358787611a8a565b92610dfe60408d016110c7565b90610e08816110e5565b90610e15602082016110c7565b610e40604083013591610e30610e29611146565b9586611164565b6001600160a01b03166020850152565b6040830152846060830152610e57608082016110e5565b90610e6960c0610a2260a084016110c7565b60408201528460608201528051610e7f816110db565b610e88816110db565b15610eef575b82610ec87f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb227793610a5a610ee6948a60019c9b9a9998611cf3565b60405194855260a088901b8890039081169516939081906020820190565b0390a401610d30565b9e8f6060909796959493970151610f0591611193565b9e959192939495610e8e565b610f209160808401358961187e565b3880610dd1565b15610f2e57565b60405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152606490fd5b15610f6c57565b60405162461bcd60e51b81526020600482015260166024820152750a0e4dedecce640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b9190811015610fe25760051b8101359060de198136030182121561017c570190565b610faa565b9190811015610fe25760051b0190565b9190811015610fe25760051b81013590601e198136030182121561017c5701908135916001600160401b03831161017c576020018260051b3603811361017c579190565b903590601e198136030182121561017c57018035906001600160401b03821161017c576020019161014082023603831361017c57565b9015610fe25790565b9190811015610fe257610140020190565b6003111561017c57565b634e487b7160e01b600052602160045260246000fd5b600311156110b557565b611095565b356110c48161108b565b90565b356110c481610a95565b6004111561017c57565b600411156110b557565b356110c4816110d1565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111761112057604052565b6110ef565b90601f801991011681019081106001600160401b0382111761112057604052565b60405190610ab1608083611125565b60405190610ab160e083611125565b60048210156110b55752565b5160048110156110b55790565b634e487b7160e01b600052601160045260246000fd5b919082018092116111a057565b61117d565b156111ac57565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f74616c206d73672e76616c7565000000006044820152606490fd5b6111fa906119b8565b600052600860205260406000209060005260205260ff6040600020541690565b9061125260609161122a846119b8565b600052600760205260406000208160005260205261072c60406000205494602081019061103b565b0135111590565b6001600160401b0381116111205760051b60200190565b1561127757565b60405162461bcd60e51b815260206004820152601460248201527313dc99195c88185b1c9958591e48199a5b1b195960621b6044820152606490fd5b156112ba57565b60405162461bcd60e51b815260206004820152601760248201527f4f7264657220616c72656164792063616e63656c6c65640000000000000000006044820152606490fd5b92919061130b81611259565b936113196040519586611125565b602085838152019160051b810192831161017c57905b82821061133b57505050565b813581526020918201910161132f565b1561135257565b60405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903134b21037b93232b960891b6044820152606490fd5b919082608091031261017c576040516113a181611105565b606080829480356113b1816110d1565b845260208101356113c181610a95565b6020850152604081013560408501520135910152565b9190916101408184031261017c576060610120604051926113f784611105565b61141184966114068184611389565b865260808301611389565b602085015261010081013560408501520135910152565b6110c49036906113d7565b919082039182116111a057565b1561144757565b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081cd95b1b08185b5bdd5b9d606a1b6044820152606490fd5b600260005414611493576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b156114df57565b60405162461bcd60e51b815260206004820152601360248201527229b2b73232b91034b9903737ba103a30b5b2b960691b6044820152606490fd5b1561152157565b60405162461bcd60e51b815260206004820152601260248201527113585ad95c881bdc99195c88199a5b1b195960721b6044820152606490fd5b1561156257565b60405162461bcd60e51b815260206004820152601560248201527413585ad95c881bdc99195c8818d85b98d95b1b1959605a1b6044820152606490fd5b3590610ab18261108b565b81601f8201121561017c5780356115c081611259565b926115ce6040519485611125565b818452602061014081860193028401019281841161017c57602001915b8383106115f9575050505090565b60206101409161160984866113d7565b8152019201916115eb565b6001600160401b03811161112057601f01601f191660200190565b92919261163b82611614565b916116496040519384611125565b82948184528183011161017c578281602093846000960137010152565b9080601f8301121561017c578160206110c49335910161162f565b91909160e08184031261017c57611696611155565b926116a08261159f565b845260208201356001600160401b03811161017c57816116c19184016115aa565b60208501526116d260408301610aa6565b60408501526116e360608301610aa6565b60608501526080820135608085015260a082013560a085015260c08201356001600160401b03811161017c576117199201611666565b60c0830152565b1561172757565b60405162461bcd60e51b815260206004820152601360248201527213585ad95c881bdc99195c88195e1c1a5c9959606a1b6044820152606490fd5b919061176d836123ab565b61177e8261072c602086018661103b565b9161178c602083018361103b565b15610fe257604085013561179f81610a95565b60608401356117ad81610a95565b6001600160a01b0390811691160361184057610ab1946118056117fe6117f260406105a8976109be8a6080896117eb6118369b61183b9f8401612744565b0190612744565b6001600160a01b031690565b33146114d8565b61181a6118156105a8858461121a565b61151a565b61182f61182a6105a885846111f1565b61155b565b3690611681565b6124ea565b611720565b60405162461bcd60e51b81526020600482015260166024820152752a30b5b2b91036bab9ba1036b0ba31b41036b0b5b2b960511b6044820152606490fd5b611897939261188f61069f92612502565b9336916112ff565b1561189e57565b60405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21026b2b935b63290383937b7b360611b6044820152606490fd5b906118e482611259565b6118f16040519182611125565b8281528092611902601f1991611259565b0190602036910137565b8051821015610fe25760209160051b010190565b805160209091019060005b8181106119385750505090565b825184526020938401939092019160010161192b565b92969594919693909360e08401977f06c8ffd199dde1e3c1f0d71dae647c455e0da36831ccd370e21bb7d22d370959855260038610156110b55760c0956020860152604085015260018060a01b0316606084015260018060a01b0316608083015260a08201520152565b9060208201916119d26119cb848361103b565b90506118da565b9060005b6119e0858361103b565b9050811015611a135780611a026119fd60019361072c898761103b565b612502565b611a0c828661190c565b52016119d6565b50919250604051611a3a81611a2c602082018095611920565b03601f198101835282611125565b51902090611a84611a4a826110ba565b92611a2c611a5a604085016110c7565b93611a67606082016110c7565b9060a060808201359101359160405196879560208701998a61194e565b51902090565b9290836000526007602052604060002082600052602052604060002054928115159081611b10575b5015611adc57611ac86105cf91611ad994611193565b936000526007602052604060002090565b55565b60405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a5908199a5b1b60a21b6044820152606490fd5b90508184018085116111a057111538611ab2565b15611b2b57565b60405162461bcd60e51b8152602060048201526015602482015274119959481c9958da5c1a595b9d081b9bdd081cd95d605a1b6044820152606490fd5b15611b6f57565b60405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881859d95b9d081b9bdd081cd95d60521b6044820152606490fd5b6040513d6000823e3d90fd5b6001600160a01b03918216815291811660208301529091166040820152606081019190915260800190565b818102929181159184041417156111a057565b15611bfe57565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206d73672e76616c756560501b6044820152606490fd5b3d15611c67573d90611c4d82611614565b91611c5b6040519384611125565b82523d6000602084013e565b606090565b15611c7357565b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b15611cb557565b60405162461bcd60e51b815260206004820152601660248201527513985d1a5d99481d1c985b9cd9995c8819985a5b195960521b6044820152606490fd5b600454611d0a906001600160a01b03161515611b24565b600554611d1f906001600160a01b03166117f2565b611d2a811515611b68565b8351611d35816110db565b611d3e816110db565b611dc95750506000808080936060610ab1960190611d6b611d63835160065490611be4565b612710900490565b611d83611d79828551611433565b9351341015611bf7565b80611d9a575b505af1611d94611c3c565b50611cae565b83808080611dc394611db360045460018060a01b031690565b5af1611dbd611c3c565b50611c6c565b38611d89565b60018493929351611dd9816110db565b611de2816110db565b03611f1a57506060830192611e09611e01611d63865160065490611be4565b809551611433565b9380611e95575b50600554611e3e90602090611e2f906117f2906001600160a01b031681565b9201516001600160a01b031690565b92813b1561017c5760008094611e6a6040519788968795869463368fa33960e21b865260048601611bb9565b03925af18015611e9057611e7b5750565b80611e8a6000610ab193611125565b80610227565b611bad565b600554611eac906117f2906001600160a01b031681565b60208301516001600160a01b03166004549091906001600160a01b031690803b1561017c578660008094611ef66040519788968795869463368fa33960e21b865260048601611bb9565b03925af18015611e905715611e105780611e8a6000611f1493611125565b38611e10565b600384939451611f29816110db565b611f32816110db565b03611f8f5750600554611f4f906117f2906001600160a01b031681565b60208301516040906001600160a01b031693015193813b1561017c5760008094611e6a60405197889687958694633c4fc9fb60e11b865260048601611bb9565b600283949351611f9e816110db565b611fa7816110db565b03612030576001600160a01b031660208401516001600160a01b03169260606040860151950151823b1561017c57604051633ab9e1f760e21b81526001600160a01b03958616600482015291851660248301529290931660448401526064830193909352608482015260c060a4820152600060c482018190529091829081838160e48101611e6a565b60405162461bcd60e51b8152602060048201526016602482015275556e737570706f72746564206173736574207479706560501b6044820152606490fd5b6001546001600160a01b0316330361208257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff81146120d7576110c490612582565b506040516000600254908160011c91600181169081156121a6575b60208410821461219257838552849291602084019181156121795750600114612123575b506110c492500382611125565b6002600090815291507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b84831061216257506110c493500138612116565b80548284015285935060209092019160010161214e565b60ff19168252506110c493151560051b01905038612116565b634e487b7160e01b83526022600452602483fd5b92607f16926120f2565b60ff81146121c1576110c490612582565b506040516000600354908160011c9160018116908115612262575b6020841082146121925783855284929160208401918115612179575060011461220c57506110c492500382611125565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b84831061224b57506110c493500138612116565b805482840152859350602090920191600101612237565b92607f16926121dc565b903590601e198136030182121561017c57018035906001600160401b03821161017c5760200191813603831361017c57565b156122a557565b60405162461bcd60e51b815260206004820152602a60248201527f496e76616c6964207369676e61747572652e204d616b6572206973206e6f74206044820152693a34329039b4b3b732b960b11b6064820152608490fd5b9081602091031261017c57516001600160e01b03198116810361017c5790565b91926060938192845260406020850152816040850152848401376000828201840152601f01601f1916010190565b1561235257565b60405162461bcd60e51b815260206004820152602b60248201527f636f6e7472616374206f72646572207369676e6174757265207665726966696360448201526a30ba34b7b71032b93937b960a91b6064820152608490fd5b6123b7604082016110c7565b6123d16123c661055a846119b8565b9260c081019061226c565b92823b1561246657604051630b135d3f60e11b81529360209385939092849283926123ff926004850161231d565b03916001600160a01b03165afa8015611e9057610ab191600091612437575b506001600160e01b031916630b135d3f60e11b1461234b565b612459915060203d60201161245f575b6124518183611125565b8101906122fd565b3861241e565b503d612447565b6117f29061247c61248293610ab196369161162f565b906125ea565b6001600160a01b039091161461229e565b929091906000915b84518310156124e2576124ae838661190c565b51906000828210156124d15750600052602052600160406000205b92019161249b565b6040916001938252602052206124c9565b915092501490565b60609160206124fa92015161190c565b510151421190565b61251461250f3683611389565b6127cd565b9061252561250f3660808401611389565b90610120610100820135910135906040519260208401947fe28cfd2e1bcec04840c1ddb765a2c756cf3e42aef44e48ddda10af78ed9a1c44865260408501526060840152608083015260a082015260a08152611a8460c082611125565b60ff811690601f82116125b357604080519261259e8285611125565b6020808552840191601f190136833783525290565b632cd44ac360e21b60005260046000fd5b6042906125cf612841565b906040519161190160f01b8352600283015260228201522090565b6110c491612623917f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c600020612957565b919091612999565b1561263257565b60405162461bcd60e51b8152602060048201526013602482015272082e6e6cae840e8f2e0ca40dad2e6dac2e8c6d606b1b6044820152606490fd5b1561267457565b60405162461bcd60e51b815260206004820152601960248201527f436f6e74726163742061646472657373206d69736d61746368000000000000006044820152606490fd5b156126c057565b60405162461bcd60e51b8152602060048201526011602482015270082e6e6cae840928840dad2e6dac2e8c6d607b1b6044820152606490fd5b1561270057565b606460405162461bcd60e51b815260206004820152602060248201527f4f66666572656420616d6f756e742065786365656473207265717565737465646044820152fd5b803561274f816110d1565b823561275a816110d1565b60048110156110b55760048210156110b557610ab19361277f6060939284931461262b565b6127ae61278e602086016110c7565b61279d6117f2602085016110c7565b6001600160a01b039091161461266d565b6127c160408501356040830135146126b9565b013591013510156126f9565b80519060048210156110b55760018060a01b036020820151169060606040820151910151906040519260208401947f6e4f52e5739dbefd226dcbefef0e563115bc2b92726a648e213cb8cde30b11a6865260408501526060840152608083015260a082015260a08152611a8460c082611125565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148061292e575b1561289c577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152611a8460c082611125565b507f00000000000000000000000000000000000000000000000000000000000000004614612873565b90604181511460001461298557612981916020820151906060604084015193015160001a90612ab9565b9091565b5050600090600290565b600511156110b557565b6129a28161298f565b806129aa5750565b6129b38161298f565b60018103612a005760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b612a098161298f565b60028103612a565760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80612a6260039261298f565b14612a6957565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612b2d5760209360009360ff60809460405194855216868401526040830152606082015282805260015afa15611e90576000516001600160a01b03811615612b245790600090565b50600090600190565b5050505060009060039056fea264697066735822122084985d88def2f0ccbf473a83accfde07249773dc1cff6cc855eb0ae7d683269e64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1EF1C7D2 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x24A9D853 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x2E1CBEA2 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4715399C EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x703CEBFE EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x72C27B62 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xA83FB54F EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xADA4FA18 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xBC2DB5C4 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xBF76C032 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0xCA200AD8 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0xEDED1F00 EQ PUSH2 0xF2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC30 JUMP JUMPDEST PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST PUSH2 0xAB3 JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x6A4 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH2 0x18F JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x17C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x17C JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x17C JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0xE0 SWAP2 SUB SLT PUSH2 0x17C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x1BA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x1D9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x1F9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH2 0x17C JUMPI PUSH2 0x21D PUSH2 0x225 SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xD01 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x17C JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17C JUMPI PUSH2 0x27A SWAP2 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 PUSH2 0x29A PUSH2 0x294 CALLDATASIZE PUSH2 0x250 JUMP JUMPDEST SWAP1 PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 PUSH2 0x29A PUSH2 0x309 CALLDATASIZE PUSH2 0x250 JUMP JUMPDEST SWAP1 PUSH2 0x121A JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH2 0x328 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x388 PUSH2 0x206E JUMP JUMPDEST PUSH2 0x2710 DUP2 GT PUSH2 0x396 JUMPI PUSH1 0x6 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642066656520425053 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x3F9 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x3D8 JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH2 0x4B4 PUSH2 0x44B PUSH32 0x0 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x474 PUSH32 0x0 PUSH2 0x21B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x483 DUP3 DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP2 PUSH2 0x4C2 DUP2 DUP4 ADD SWAP5 PUSH1 0x1F NOT DUP4 ADD CALLDATASIZE DUP8 CALLDATACOPY PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xF PUSH1 0xF8 SHL DUP10 MSTORE PUSH1 0xE0 DUP6 DUP11 ADD MSTORE PUSH1 0xE0 DUP10 ADD SWAP1 PUSH2 0x3CD JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x3CD JUMP JUMPDEST SWAP2 CHAINID PUSH1 0x60 DUP8 ADD MSTORE ADDRESS PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP8 ADD MSTORE DUP6 DUP4 SUB PUSH1 0xC0 DUP8 ADD MSTORE MLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4F8 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x4E9 JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH2 0x546 CALLDATASIZE PUSH2 0x250 JUMP JUMPDEST PUSH2 0x54E PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x55F PUSH2 0x55A DUP4 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x25C4 JUMP JUMPDEST SWAP2 PUSH2 0x569 DUP2 PUSH2 0x23AB JUMP JUMPDEST PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH2 0x577 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x61A JUMPI DUP2 PUSH2 0x5BB PUSH2 0x5B6 PUSH2 0x5A8 DUP4 DUP6 PUSH2 0x5B1 PUSH2 0x5AC PUSH2 0x5A8 PUSH2 0x5EB SWAP11 PUSH2 0x5DE SWAP11 PUSH2 0x121A JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1270 JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x5CF DUP5 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x42C76C81A7CBA1B9C861353909A184E20747AB960332628DABCBB5852FC5CBB5 PUSH1 0x0 DUP1 LOG2 PUSH2 0x225 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E481B585AD95C8818D85B8818D85B98D95B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x29A PUSH2 0x68C PUSH1 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST SWAP1 PUSH2 0x69F PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 CALLDATASIZE SWAP2 PUSH2 0x12FF JUMP JUMPDEST PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x6CF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH2 0x6DF PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x6FA PUSH2 0x6EB DUP3 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x6F4 DUP2 PUSH2 0x10AB JUMP JUMPDEST ISZERO PUSH2 0x134B JUMP JUMPDEST PUSH2 0x855 PUSH2 0x79A PUSH1 0x40 PUSH2 0x70B DUP5 PUSH2 0x19B8 JUMP JUMPDEST SWAP4 PUSH2 0x715 DUP2 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x787 PUSH2 0x737 PUSH2 0x732 DUP10 PUSH2 0x72C PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x103B JUMP JUMPDEST SWAP1 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x1428 JUMP JUMPDEST SWAP8 PUSH2 0x773 PUSH2 0x763 PUSH1 0x60 DUP12 MLOAD ADD MLOAD PUSH2 0x75C DUP5 PUSH2 0x5CF DUP13 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x1433 JUMP JUMPDEST DUP10 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x89C JUMPI JUMPDEST POP PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x5CF DUP8 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x792 DUP8 DUP3 SLOAD PUSH2 0x1193 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP4 PUSH2 0x84E PUSH1 0x20 PUSH2 0x7AA DUP4 MLOAD PUSH2 0x1170 JUMP JUMPDEST DUP4 MLOAD DUP3 DUP2 ADD MLOAD SWAP2 SWAP5 SWAP2 PUSH2 0x7E8 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 ADD MLOAD SWAP2 PUSH2 0x7D9 PUSH2 0x7D2 PUSH2 0x1146 JUMP JUMPDEST SWAP8 DUP9 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE DUP7 PUSH1 0x60 DUP6 ADD MSTORE ADD SWAP2 PUSH2 0x7FF DUP4 MLOAD PUSH2 0x1170 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x83C SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 ADD MLOAD SWAP2 PUSH2 0x82C PUSH2 0x825 PUSH2 0x1146 JUMP JUMPDEST SWAP7 DUP8 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE DUP6 PUSH1 0x60 DUP5 ADD MSTORE CALLER DUP8 PUSH2 0x1CF3 JUMP JUMPDEST DUP5 CALLER PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x2B2BE5BDC62AAF8DBE8A0FFAC99E7335C8D1245AA56D1D50E01FC21177FB2277 SWAP1 DUP1 PUSH1 0x20 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 PUSH2 0x225 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST SWAP1 POP DUP10 GT ISZERO CODESIZE PUSH2 0x76D JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x8D2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x8F1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x181 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17C JUMPI PUSH2 0x88F DUP5 PUSH2 0xA61 PUSH2 0x9CB PUSH1 0x40 PUSH2 0x9C4 DUP2 PUSH32 0x2B2BE5BDC62AAF8DBE8A0FFAC99E7335C8D1245AA56D1D50E01FC21177FB2277 SWAP8 PUSH2 0x949 DUP8 SWAP11 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x951 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x984 DUP14 PUSH2 0x97D PUSH2 0x977 PUSH2 0x96C DUP4 PUSH2 0x72C PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0x103B JUMP JUMPDEST SWAP13 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x103B JUMP JUMPDEST SWAP1 PUSH2 0x1071 JUMP JUMPDEST SWAP14 DUP6 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x98F DUP5 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0x998 DUP2 PUSH2 0x10AB JUMP JUMPDEST EQ PUSH2 0xA7F JUMPI JUMPDEST POP POP PUSH2 0x9BE PUSH1 0xE0 PUSH2 0x9AE DUP4 PUSH2 0x19B8 JUMP JUMPDEST SWAP12 ADD CALLDATALOAD SWAP12 PUSH1 0x60 DUP10 ADD CALLDATALOAD DUP14 DUP14 PUSH2 0x1A8A JUMP JUMPDEST ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP9 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP2 PUSH2 0xA5A PUSH2 0x9D8 DUP3 PUSH2 0x10E5 JUMP JUMPDEST SWAP2 PUSH2 0x9E5 PUSH1 0x20 DUP3 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x9F9 PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP2 PUSH2 0x82C PUSH2 0x825 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE DUP9 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xA10 PUSH1 0x80 DUP3 ADD PUSH2 0x10E5 JUMP JUMPDEST SWAP1 PUSH2 0xA48 PUSH1 0xC0 PUSH2 0xA22 PUSH1 0xA0 DUP5 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP3 ADD CALLDATALOAD SWAP2 PUSH2 0xA38 PUSH2 0xA31 PUSH2 0x1146 JUMP JUMPDEST SWAP5 DUP6 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP9 PUSH1 0x60 DUP3 ADD MSTORE DUP10 DUP6 PUSH2 0x1CF3 JUMP JUMPDEST DUP3 DUP9 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 AND SWAP4 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0xA8E SWAP2 PUSH1 0x80 DUP5 ADD CALLDATALOAD DUP11 PUSH2 0x187E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x17C JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xAB1 DUP3 PUSH2 0xA95 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xAD0 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB04 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206173736574207472616E73666572206167656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB83 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0xB8B PUSH2 0x206E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xBB7 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A5908199959481C9958DA5C1A595B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x17C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x17C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xC4D DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0xC55 PUSH2 0x206E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xCAD JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP6 SWAP1 SWAP2 SWAP4 SWAP3 SWAP6 PUSH2 0xD10 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0xD1B DUP5 DUP5 EQ PUSH2 0xF27 JUMP JUMPDEST PUSH2 0xD26 DUP3 DUP5 EQ PUSH2 0xF65 JUMP JUMPDEST PUSH1 0x0 SWAP7 PUSH1 0x20 DUP7 ADD SWAP4 DUP9 JUMPDEST DUP2 DUP2 LT PUSH2 0xD63 JUMPI POP POP POP POP POP POP POP POP POP DUP1 PUSH2 0xD51 JUMPI JUMPDEST POP PUSH2 0xAB1 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xD5D SWAP1 CALLVALUE LT ISZERO PUSH2 0x11A5 JUMP JUMPDEST CODESIZE PUSH2 0xD46 JUMP JUMPDEST DUP6 PUSH2 0xD6F DUP3 DUP5 DUP13 PUSH2 0xFC0 JUMP JUMPDEST DUP10 PUSH2 0xDF1 PUSH1 0x40 PUSH2 0xD80 DUP7 DUP14 DUP11 PUSH2 0xFE7 JUMP JUMPDEST CALLDATALOAD SWAP4 PUSH2 0xD8D DUP8 DUP13 DUP13 PUSH2 0xFF7 JUMP JUMPDEST PUSH2 0xDB7 DUP8 PUSH2 0xDB0 DUP12 PUSH2 0x72C PUSH2 0xDA9 DUP5 PUSH2 0x72C PUSH1 0x20 DUP12 ADD DUP12 PUSH2 0x103B JUMP JUMPDEST SWAP13 DUP12 PUSH2 0x103B JUMP JUMPDEST SWAP8 DUP6 PUSH2 0x1762 JUMP JUMPDEST PUSH1 0x2 PUSH2 0xDC2 DUP5 PUSH2 0x10BA JUMP JUMPDEST PUSH2 0xDCB DUP2 PUSH2 0x10AB JUMP JUMPDEST EQ PUSH2 0xF11 JUMPI JUMPDEST POP POP PUSH2 0x9BE PUSH1 0xE0 PUSH2 0xDE1 DUP4 PUSH2 0x19B8 JUMP JUMPDEST SWAP6 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP9 ADD CALLDATALOAD DUP8 DUP8 PUSH2 0x1A8A JUMP JUMPDEST SWAP3 PUSH2 0xDFE PUSH1 0x40 DUP14 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP1 PUSH2 0xE08 DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP1 PUSH2 0xE15 PUSH1 0x20 DUP3 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0xE40 PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP2 PUSH2 0xE30 PUSH2 0xE29 PUSH2 0x1146 JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xE57 PUSH1 0x80 DUP3 ADD PUSH2 0x10E5 JUMP JUMPDEST SWAP1 PUSH2 0xE69 PUSH1 0xC0 PUSH2 0xA22 PUSH1 0xA0 DUP5 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE DUP1 MLOAD PUSH2 0xE7F DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0xE88 DUP2 PUSH2 0x10DB JUMP JUMPDEST ISZERO PUSH2 0xEEF JUMPI JUMPDEST DUP3 PUSH2 0xEC8 PUSH32 0x2B2BE5BDC62AAF8DBE8A0FFAC99E7335C8D1245AA56D1D50E01FC21177FB2277 SWAP4 PUSH2 0xA5A PUSH2 0xEE6 SWAP5 DUP11 PUSH1 0x1 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0xA0 DUP9 SWAP1 SHL DUP9 SWAP1 SUB SWAP1 DUP2 AND SWAP6 AND SWAP4 SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG4 ADD PUSH2 0xD30 JUMP JUMPDEST SWAP15 DUP16 PUSH1 0x60 SWAP1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP8 ADD MLOAD PUSH2 0xF05 SWAP2 PUSH2 0x1193 JUMP JUMPDEST SWAP15 SWAP6 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH2 0xE8E JUMP JUMPDEST PUSH2 0xF20 SWAP2 PUSH1 0x80 DUP5 ADD CALLDATALOAD DUP10 PUSH2 0x187E JUMP JUMPDEST CODESIZE DUP1 PUSH2 0xDD1 JUMP JUMPDEST ISZERO PUSH2 0xF2E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x98CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xF6C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0xA0E4DEDECCE640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xDE NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x17C JUMPI ADD SWAP1 JUMP JUMPDEST PUSH2 0xFAA JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x17C JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x17C JUMPI PUSH1 0x20 ADD DUP3 PUSH1 0x5 SHL CALLDATASIZE SUB DUP2 SGT PUSH2 0x17C JUMPI SWAP2 SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x17C JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17C JUMPI PUSH1 0x20 ADD SWAP2 PUSH2 0x140 DUP3 MUL CALLDATASIZE SUB DUP4 SGT PUSH2 0x17C JUMPI JUMP JUMPDEST SWAP1 ISZERO PUSH2 0xFE2 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH2 0x140 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x17C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x10B5 JUMPI JUMP JUMPDEST PUSH2 0x1095 JUMP JUMPDEST CALLDATALOAD PUSH2 0x10C4 DUP2 PUSH2 0x108B JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH2 0x10C4 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x17C JUMPI JUMP JUMPDEST PUSH1 0x4 GT ISZERO PUSH2 0x10B5 JUMPI JUMP JUMPDEST CALLDATALOAD PUSH2 0x10C4 DUP2 PUSH2 0x10D1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1120 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1120 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xAB1 PUSH1 0x80 DUP4 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xAB1 PUSH1 0xE0 DUP4 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x10B5 JUMPI MSTORE JUMP JUMPDEST MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x10B5 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x11A0 JUMPI JUMP JUMPDEST PUSH2 0x117D JUMP JUMPDEST ISZERO PUSH2 0x11AC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F74616C206D73672E76616C756500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x11FA SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1252 PUSH1 0x60 SWAP2 PUSH2 0x122A DUP5 PUSH2 0x19B8 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x72C PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP5 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x103B JUMP JUMPDEST ADD CALLDATALOAD GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1120 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1277 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DC99195C88185B1C9958591E48199A5B1B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x12BA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7264657220616C72656164792063616E63656C6C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x130B DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP4 PUSH2 0x1319 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x20 DUP6 DUP4 DUP2 MSTORE ADD SWAP2 PUSH1 0x5 SHL DUP2 ADD SWAP3 DUP4 GT PUSH2 0x17C JUMPI SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x133B JUMPI POP POP POP JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x132F JUMP JUMPDEST ISZERO PUSH2 0x1352 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x2737BA1030903134B21037B93232B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH2 0x13A1 DUP2 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 SWAP5 DUP1 CALLDATALOAD PUSH2 0x13B1 DUP2 PUSH2 0x10D1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH2 0x13C1 DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x140 DUP2 DUP5 SUB SLT PUSH2 0x17C JUMPI PUSH1 0x60 PUSH2 0x120 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x13F7 DUP5 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x1411 DUP5 SWAP7 PUSH2 0x1406 DUP2 DUP5 PUSH2 0x1389 JUMP JUMPDEST DUP7 MSTORE PUSH1 0x80 DUP4 ADD PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE ADD CALLDATALOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH2 0x10C4 SWAP1 CALLDATASIZE SWAP1 PUSH2 0x13D7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x11A0 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1447 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081CD95B1B08185B5BDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1493 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x14DF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x29B2B73232B91034B9903737BA103A30B5B2B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1521 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13585AD95C881BDC99195C88199A5B1B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1562 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13585AD95C881BDC99195C8818D85B98D95B1B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xAB1 DUP3 PUSH2 0x108B JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x17C JUMPI DUP1 CALLDATALOAD PUSH2 0x15C0 DUP2 PUSH2 0x1259 JUMP JUMPDEST SWAP3 PUSH2 0x15CE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1125 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 PUSH2 0x140 DUP2 DUP7 ADD SWAP4 MUL DUP5 ADD ADD SWAP3 DUP2 DUP5 GT PUSH2 0x17C JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x15F9 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x140 SWAP2 PUSH2 0x1609 DUP5 DUP7 PUSH2 0x13D7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1120 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x163B DUP3 PUSH2 0x1614 JUMP JUMPDEST SWAP2 PUSH2 0x1649 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1125 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x17C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x17C JUMPI DUP2 PUSH1 0x20 PUSH2 0x10C4 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x162F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0xE0 DUP2 DUP5 SUB SLT PUSH2 0x17C JUMPI PUSH2 0x1696 PUSH2 0x1155 JUMP JUMPDEST SWAP3 PUSH2 0x16A0 DUP3 PUSH2 0x159F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI DUP2 PUSH2 0x16C1 SWAP2 DUP5 ADD PUSH2 0x15AA JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x16D2 PUSH1 0x40 DUP4 ADD PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x16E3 PUSH1 0x60 DUP4 ADD PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP3 ADD CALLDATALOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x17C JUMPI PUSH2 0x1719 SWAP3 ADD PUSH2 0x1666 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1727 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585AD95C881BDC99195C88195E1C1A5C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 PUSH2 0x176D DUP4 PUSH2 0x23AB JUMP JUMPDEST PUSH2 0x177E DUP3 PUSH2 0x72C PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x103B JUMP JUMPDEST SWAP2 PUSH2 0x178C PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x103B JUMP JUMPDEST ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x179F DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH2 0x17AD DUP2 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND SUB PUSH2 0x1840 JUMPI PUSH2 0xAB1 SWAP5 PUSH2 0x1805 PUSH2 0x17FE PUSH2 0x17F2 PUSH1 0x40 PUSH2 0x5A8 SWAP8 PUSH2 0x9BE DUP11 PUSH1 0x80 DUP10 PUSH2 0x17EB PUSH2 0x1836 SWAP12 PUSH2 0x183B SWAP16 DUP5 ADD PUSH2 0x2744 JUMP JUMPDEST ADD SWAP1 PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER EQ PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x181A PUSH2 0x1815 PUSH2 0x5A8 DUP6 DUP5 PUSH2 0x121A JUMP JUMPDEST PUSH2 0x151A JUMP JUMPDEST PUSH2 0x182F PUSH2 0x182A PUSH2 0x5A8 DUP6 DUP5 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x155B JUMP JUMPDEST CALLDATASIZE SWAP1 PUSH2 0x1681 JUMP JUMPDEST PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2A30B5B2B91036BAB9BA1036B0BA31B41036B0B5B2B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x1897 SWAP4 SWAP3 PUSH2 0x188F PUSH2 0x69F SWAP3 PUSH2 0x2502 JUMP JUMPDEST SWAP4 CALLDATASIZE SWAP2 PUSH2 0x12FF JUMP JUMPDEST ISZERO PUSH2 0x189E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x24B73B30B634B21026B2B935B63290383937B7B3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x18E4 DUP3 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x18F1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1125 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1902 PUSH1 0x1F NOT SWAP2 PUSH2 0x1259 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1938 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x192B JUMP JUMPDEST SWAP3 SWAP7 SWAP6 SWAP5 SWAP2 SWAP7 SWAP4 SWAP1 SWAP4 PUSH1 0xE0 DUP5 ADD SWAP8 PUSH32 0x6C8FFD199DDE1E3C1F0D71DAE647C455E0DA36831CCD370E21BB7D22D370959 DUP6 MSTORE PUSH1 0x3 DUP7 LT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0xC0 SWAP6 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD SWAP2 PUSH2 0x19D2 PUSH2 0x19CB DUP5 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP1 POP PUSH2 0x18DA JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH2 0x19E0 DUP6 DUP4 PUSH2 0x103B JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x1A13 JUMPI DUP1 PUSH2 0x1A02 PUSH2 0x19FD PUSH1 0x1 SWAP4 PUSH2 0x72C DUP10 DUP8 PUSH2 0x103B JUMP JUMPDEST PUSH2 0x2502 JUMP JUMPDEST PUSH2 0x1A0C DUP3 DUP7 PUSH2 0x190C JUMP JUMPDEST MSTORE ADD PUSH2 0x19D6 JUMP JUMPDEST POP SWAP2 SWAP3 POP PUSH1 0x40 MLOAD PUSH2 0x1A3A DUP2 PUSH2 0x1A2C PUSH1 0x20 DUP3 ADD DUP1 SWAP6 PUSH2 0x1920 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1125 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x1A84 PUSH2 0x1A4A DUP3 PUSH2 0x10BA JUMP JUMPDEST SWAP3 PUSH2 0x1A2C PUSH2 0x1A5A PUSH1 0x40 DUP6 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP4 PUSH2 0x1A67 PUSH1 0x60 DUP3 ADD PUSH2 0x10C7 JUMP JUMPDEST SWAP1 PUSH1 0xA0 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 PUSH1 0x20 DUP8 ADD SWAP10 DUP11 PUSH2 0x194E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP2 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1B10 JUMPI JUMPDEST POP ISZERO PUSH2 0x1ADC JUMPI PUSH2 0x1AC8 PUSH2 0x5CF SWAP2 PUSH2 0x1AD9 SWAP5 PUSH2 0x1193 JUMP JUMPDEST SWAP4 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x125B9D985B1A5908199A5B1B PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP2 DUP5 ADD DUP1 DUP6 GT PUSH2 0x11A0 JUMPI GT ISZERO CODESIZE PUSH2 0x1AB2 JUMP JUMPDEST ISZERO PUSH2 0x1B2B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x119959481C9958DA5C1A595B9D081B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B6F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881859D95B9D081B9BDD081CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x11A0 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x1BFE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74206D73672E76616C7565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1C67 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1C4D DUP3 PUSH2 0x1614 JUMP JUMPDEST SWAP2 PUSH2 0x1C5B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1125 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1C73 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1CB5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13985D1A5D99481D1C985B9CD9995C8819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1D0A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x1B24 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1D1F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17F2 JUMP JUMPDEST PUSH2 0x1D2A DUP2 ISZERO ISZERO PUSH2 0x1B68 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1D35 DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1D3E DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1DC9 JUMPI POP POP PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH1 0x60 PUSH2 0xAB1 SWAP7 ADD SWAP1 PUSH2 0x1D6B PUSH2 0x1D63 DUP4 MLOAD PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x2710 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x1D83 PUSH2 0x1D79 DUP3 DUP6 MLOAD PUSH2 0x1433 JUMP JUMPDEST SWAP4 MLOAD CALLVALUE LT ISZERO PUSH2 0x1BF7 JUMP JUMPDEST DUP1 PUSH2 0x1D9A JUMPI JUMPDEST POP GAS CALL PUSH2 0x1D94 PUSH2 0x1C3C JUMP JUMPDEST POP PUSH2 0x1CAE JUMP JUMPDEST DUP4 DUP1 DUP1 DUP1 PUSH2 0x1DC3 SWAP5 PUSH2 0x1DB3 PUSH1 0x4 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST GAS CALL PUSH2 0x1DBD PUSH2 0x1C3C JUMP JUMPDEST POP PUSH2 0x1C6C JUMP JUMPDEST CODESIZE PUSH2 0x1D89 JUMP JUMPDEST PUSH1 0x1 DUP5 SWAP4 SWAP3 SWAP4 MLOAD PUSH2 0x1DD9 DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1DE2 DUP2 PUSH2 0x10DB JUMP JUMPDEST SUB PUSH2 0x1F1A JUMPI POP PUSH1 0x60 DUP4 ADD SWAP3 PUSH2 0x1E09 PUSH2 0x1E01 PUSH2 0x1D63 DUP7 MLOAD PUSH1 0x6 SLOAD SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST DUP1 SWAP6 MLOAD PUSH2 0x1433 JUMP JUMPDEST SWAP4 DUP1 PUSH2 0x1E95 JUMPI JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1E3E SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x1E2F SWAP1 PUSH2 0x17F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST SWAP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP3 DUP2 EXTCODESIZE ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 SWAP5 PUSH2 0x1E6A PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x368FA339 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1BB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1E90 JUMPI PUSH2 0x1E7B JUMPI POP JUMP JUMPDEST DUP1 PUSH2 0x1E8A PUSH1 0x0 PUSH2 0xAB1 SWAP4 PUSH2 0x1125 JUMP JUMPDEST DUP1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1EAC SWAP1 PUSH2 0x17F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x17C JUMPI DUP7 PUSH1 0x0 DUP1 SWAP5 PUSH2 0x1EF6 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x368FA339 PUSH1 0xE2 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1BB9 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1E90 JUMPI ISZERO PUSH2 0x1E10 JUMPI DUP1 PUSH2 0x1E8A PUSH1 0x0 PUSH2 0x1F14 SWAP4 PUSH2 0x1125 JUMP JUMPDEST CODESIZE PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x3 DUP5 SWAP4 SWAP5 MLOAD PUSH2 0x1F29 DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1F32 DUP2 PUSH2 0x10DB JUMP JUMPDEST SUB PUSH2 0x1F8F JUMPI POP PUSH1 0x5 SLOAD PUSH2 0x1F4F SWAP1 PUSH2 0x17F2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 ADD MLOAD SWAP4 DUP2 EXTCODESIZE ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 SWAP5 PUSH2 0x1E6A PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x3C4FC9FB PUSH1 0xE1 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1BB9 JUMP JUMPDEST PUSH1 0x2 DUP4 SWAP5 SWAP4 MLOAD PUSH2 0x1F9E DUP2 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x1FA7 DUP2 PUSH2 0x10DB JUMP JUMPDEST SUB PUSH2 0x2030 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x60 PUSH1 0x40 DUP7 ADD MLOAD SWAP6 ADD MLOAD DUP3 EXTCODESIZE ISZERO PUSH2 0x17C JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB9E1F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP2 DUP3 SWAP1 DUP2 DUP4 DUP2 PUSH1 0xE4 DUP2 ADD PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x556E737570706F727465642061737365742074797065 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2082 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x20D7 JUMPI PUSH2 0x10C4 SWAP1 PUSH2 0x2582 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x21A6 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP3 EQ PUSH2 0x2192 JUMPI DUP4 DUP6 MSTORE DUP5 SWAP3 SWAP2 PUSH1 0x20 DUP5 ADD SWAP2 DUP2 ISZERO PUSH2 0x2179 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2123 JUMPI JUMPDEST POP PUSH2 0x10C4 SWAP3 POP SUB DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP5 DUP4 LT PUSH2 0x2162 JUMPI POP PUSH2 0x10C4 SWAP4 POP ADD CODESIZE PUSH2 0x2116 JUMP JUMPDEST DUP1 SLOAD DUP3 DUP5 ADD MSTORE DUP6 SWAP4 POP PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x214E JUMP JUMPDEST PUSH1 0xFF NOT AND DUP3 MSTORE POP PUSH2 0x10C4 SWAP4 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP CODESIZE PUSH2 0x2116 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x20F2 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x21C1 JUMPI PUSH2 0x10C4 SWAP1 PUSH2 0x2582 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2262 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP3 EQ PUSH2 0x2192 JUMPI DUP4 DUP6 MSTORE DUP5 SWAP3 SWAP2 PUSH1 0x20 DUP5 ADD SWAP2 DUP2 ISZERO PUSH2 0x2179 JUMPI POP PUSH1 0x1 EQ PUSH2 0x220C JUMPI POP PUSH2 0x10C4 SWAP3 POP SUB DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP5 DUP4 LT PUSH2 0x224B JUMPI POP PUSH2 0x10C4 SWAP4 POP ADD CODESIZE PUSH2 0x2116 JUMP JUMPDEST DUP1 SLOAD DUP3 DUP5 ADD MSTORE DUP6 SWAP4 POP PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2237 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x21DC JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x17C JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x17C JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x17C JUMPI JUMP JUMPDEST ISZERO PUSH2 0x22A5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E61747572652E204D616B6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3A34329039B4B3B732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x17C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x17C JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x60 SWAP4 DUP2 SWAP3 DUP5 MSTORE PUSH1 0x40 PUSH1 0x20 DUP6 ADD MSTORE DUP2 PUSH1 0x40 DUP6 ADD MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2352 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374206F72646572207369676E61747572652076657269666963 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x30BA34B7B71032B93937B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x23B7 PUSH1 0x40 DUP3 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x23D1 PUSH2 0x23C6 PUSH2 0x55A DUP5 PUSH2 0x19B8 JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD SWAP1 PUSH2 0x226C JUMP JUMPDEST SWAP3 DUP3 EXTCODESIZE ISZERO PUSH2 0x2466 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL DUP2 MSTORE SWAP4 PUSH1 0x20 SWAP4 DUP6 SWAP4 SWAP1 SWAP3 DUP5 SWAP3 DUP4 SWAP3 PUSH2 0x23FF SWAP3 PUSH1 0x4 DUP6 ADD PUSH2 0x231D JUMP JUMPDEST SUB SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x1E90 JUMPI PUSH2 0xAB1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2437 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xB135D3F PUSH1 0xE1 SHL EQ PUSH2 0x234B JUMP JUMPDEST PUSH2 0x2459 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x245F JUMPI JUMPDEST PUSH2 0x2451 DUP2 DUP4 PUSH2 0x1125 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x22FD JUMP JUMPDEST CODESIZE PUSH2 0x241E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x17F2 SWAP1 PUSH2 0x247C PUSH2 0x2482 SWAP4 PUSH2 0xAB1 SWAP7 CALLDATASIZE SWAP2 PUSH2 0x162F JUMP JUMPDEST SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND EQ PUSH2 0x229E JUMP JUMPDEST SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 MLOAD DUP4 LT ISZERO PUSH2 0x24E2 JUMPI PUSH2 0x24AE DUP4 DUP7 PUSH2 0x190C JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x24D1 JUMPI POP PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 JUMPDEST SWAP3 ADD SWAP2 PUSH2 0x249B JUMP JUMPDEST PUSH1 0x40 SWAP2 PUSH1 0x1 SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x24C9 JUMP JUMPDEST SWAP2 POP SWAP3 POP EQ SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH1 0x20 PUSH2 0x24FA SWAP3 ADD MLOAD PUSH2 0x190C JUMP JUMPDEST MLOAD ADD MLOAD TIMESTAMP GT SWAP1 JUMP JUMPDEST PUSH2 0x2514 PUSH2 0x250F CALLDATASIZE DUP4 PUSH2 0x1389 JUMP JUMPDEST PUSH2 0x27CD JUMP JUMPDEST SWAP1 PUSH2 0x2525 PUSH2 0x250F CALLDATASIZE PUSH1 0x80 DUP5 ADD PUSH2 0x1389 JUMP JUMPDEST SWAP1 PUSH2 0x120 PUSH2 0x100 DUP3 ADD CALLDATALOAD SWAP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0xE28CFD2E1BCEC04840C1DDB765A2C756CF3E42AEF44E48DDDA10AF78ED9A1C44 DUP7 MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1A84 PUSH1 0xC0 DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x25B3 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 PUSH2 0x259E DUP3 DUP6 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP6 MSTORE DUP5 ADD SWAP2 PUSH1 0x1F NOT ADD CALLDATASIZE DUP4 CALLDATACOPY DUP4 MSTORE MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x42 SWAP1 PUSH2 0x25CF PUSH2 0x2841 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x10C4 SWAP2 PUSH2 0x2623 SWAP2 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 PUSH2 0x2957 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x2999 JUMP JUMPDEST ISZERO PUSH2 0x2632 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x82E6E6CAE840E8F2E0CA40DAD2E6DAC2E8C6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2674 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74726163742061646472657373206D69736D6174636800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x26C0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x82E6E6CAE840928840DAD2E6DAC2E8C6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2700 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F66666572656420616D6F756E74206578636565647320726571756573746564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x274F DUP2 PUSH2 0x10D1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH2 0x275A DUP2 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x10B5 JUMPI PUSH2 0xAB1 SWAP4 PUSH2 0x277F PUSH1 0x60 SWAP4 SWAP3 DUP5 SWAP4 EQ PUSH2 0x262B JUMP JUMPDEST PUSH2 0x27AE PUSH2 0x278E PUSH1 0x20 DUP7 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x279D PUSH2 0x17F2 PUSH1 0x20 DUP6 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND EQ PUSH2 0x266D JUMP JUMPDEST PUSH2 0x27C1 PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD CALLDATALOAD EQ PUSH2 0x26B9 JUMP JUMPDEST ADD CALLDATALOAD SWAP2 ADD CALLDATALOAD LT ISZERO PUSH2 0x26F9 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND SWAP1 PUSH1 0x60 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0x6E4F52E5739DBEFD226DCBEFEF0E563115BC2B92726A648E213CB8CDE30B11A6 DUP7 MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1A84 PUSH1 0xC0 DUP3 PUSH2 0x1125 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x292E JUMPI JUMPDEST ISZERO PUSH2 0x289C JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1A84 PUSH1 0xC0 DUP3 PUSH2 0x1125 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x2873 JUMP JUMPDEST SWAP1 PUSH1 0x41 DUP2 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x2985 JUMPI PUSH2 0x2981 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 PUSH1 0x2 SWAP1 JUMP JUMPDEST PUSH1 0x5 GT ISZERO PUSH2 0x10B5 JUMPI JUMP JUMPDEST PUSH2 0x29A2 DUP2 PUSH2 0x298F JUMP JUMPDEST DUP1 PUSH2 0x29AA JUMPI POP JUMP JUMPDEST PUSH2 0x29B3 DUP2 PUSH2 0x298F JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x2A00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2A09 DUP2 PUSH2 0x298F JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x2A56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2A62 PUSH1 0x3 SWAP3 PUSH2 0x298F JUMP JUMPDEST EQ PUSH2 0x2A69 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2B2D JUMPI PUSH1 0x20 SWAP4 PUSH1 0x0 SWAP4 PUSH1 0xFF PUSH1 0x80 SWAP5 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1E90 JUMPI PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2B24 JUMPI SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x3 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SWAP9 TSTORE DUP9 0xDE CALLCODE CREATE 0xCC 0xBF SELFBALANCE GASPRICE DUP4 0xAC 0xCF 0xDE SMOD 0x24 SWAP8 PUSH20 0xDC1CFF6CC855EB0AE7D683269E64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"323:11886:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;323:11886:20;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;323:11886:20;;;;;4569:2680;323:11886;;;;;;:::i;:::-;4569:2680;;;;:::i;:::-;323:11886;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;323:11886:20;;;;;515:21;323:11886;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;476:33;323:11886;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;323:11886:20;;;;1063:62:0;;:::i;:::-;2518:6;323:11886:20;;-1:-1:-1;;;;;;323:11886:20;;;;;;;-1:-1:-1;;;;;323:11886:20;2566:40:0;323:11886:20;;2566:40:0;323:11886:20;;;;;;;-1:-1:-1;;323:11886:20;;;;;;1063:62:0;;:::i;:::-;432:5:20;2225:22;;323:11886;;2277:16;323:11886;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;-1:-1:-1;323:11886:20;;;;;;;;;-1:-1:-1;323:11886:20;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;5427:41:15;:5;:41;:::i;:::-;5482:47;:8;:47;:::i;:::-;323:11886:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5543:13:15;;323:11886:20;;;;5578:4:15;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;323:11886:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;;:::i;:::-;2227:103:3;;:::i;:::-;715:38:21;732:20;;;:::i;:::-;715:38;:::i;:::-;2502:5:20;;;;:::i;:::-;2540:11;;;323:11886;;;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;2526:10;:25;323:11886;;2609:41;2706:110;2727:40;2728:39;2609:41;;2587:109;2608:42;2609:41;2827:49;2609:41;2827:42;2609:41;;:::i;:::-;2608:42;;323:11886;2608:42;2587:109;:::i;:::-;2728:39;:::i;2727:40::-;2706:110;:::i;:::-;2827:26;;323:11886;;2827:15;323:11886;;;;;;;2827:26;323:11886;;;;;;;;;;2827:42;323:11886;;-1:-1:-1;;323:11886:20;2872:4;323:11886;;;;2827:49;2891:22;-1:-1:-1;2891:22:20;;2292:1:3;1716;2809:22;323:11886:20;2629:209:3;323:11886:20;2540:11;323:11886;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;;-1:-1:-1;;;;;323:11886:20;;;;2065:37:21;323:11886:20;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2065:37:21;:::i;323:11886:20:-;;;-1:-1:-1;;323:11886:20;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;:::i;:::-;;;;;;2227:103:3;;;:::i;:::-;7422:106:20;7443:18;;;:::i;:::-;323:11886;;;:::i;:::-;7443:44;7422:106;:::i;:::-;8654:9;8036:14;323:11886;7559:23;;;:::i;:::-;7612:8;;;;:::i;:::-;7952:42;7632:71;7673:30;:14;;323:11886;7673:14;;;;:::i;:::-;:30;;:::i;:::-;7632:71;:::i;:::-;7733:22;7834:107;7733:91;323:11886;7733:22;;:34;323:11886;7782:42;:26;;;323:11886;;7782:15;323:11886;;;;;;;7782:42;323:11886;7733:91;;:::i;:::-;7855:14;;;:41;;;;323:11886;7834:107;;:::i;:::-;7952:26;;323:11886;;7782:15;323:11886;;;;;;;7952:42;:56;323:11886;;;7952:56;:::i;:::-;323:11886;;8036:14;;:::i;:::-;8160:22;8601:9;323:11886;8160:32;:22;;:32;:::i;:::-;8206:22;;:38;;;323:11886;8206:22;;;8132:190;;323:11886;;-1:-1:-1;;;;;323:11886:20;8258:30;;323:11886;;8132:190;323:11886;;:::i;:::-;8132:190;;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;8132:190;;;323:11886;;8132:190;323:11886;8132:190;;323:11886;8132:190;323:11886;8132:190;;323:11886;8395:22;;:32;:22;;:32;:::i;:::-;8441:22;;323:11886;8441:38;;323:11886;8367:190;;323:11886;;-1:-1:-1;;;;;323:11886:20;8493:30;;323:11886;;8367:190;323:11886;;:::i;:::-;8367:190;;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;;8367:190;;323:11886;;8367:190;323:11886;8367:190;;323:11886;8367:190;323:11886;8367:190;;323:11886;8077:10;8601:9;;:::i;:::-;8077:10;;8654:9;:::i;:::-;323:11886;;;;;8077:10;;-1:-1:-1;;;;;323:11886:20;;8680:51;;323:11886;;;;8680:51;;;;2292:1:3;1716;2809:22;323:11886:20;2629:209:3;7855:41:20;7873:23;;;;;7855:41;;;323:11886;;;-1:-1:-1;;323:11886:20;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;4502:54;323:11886;4476:9;3885:16;323:11886;3843:16;323:11886;4502:54;323:11886;;;;;;;;;:::i;:::-;2227:103:3;;:::i;:::-;3364:14:20;3192:16;3301:19;:16;3192:54;:16;;323:11886;3192:16;;;;:::i;:54::-;3301:16;323:11886;3301:16;;;;:::i;:::-;:19;;:::i;:::-;3364:14;;;:::i;:::-;3417:23;3393:20;;;:::i;:::-;323:11886;;;:::i;:::-;3393:47;3389:139;;323:11886;3563:25;;3792:14;3619:36;3563:25;;;:::i;:::-;3619:36;;323:11886;3742:36;323:11886;3742:36;;323:11886;3792:14;;;:::i;:::-;3843:16;;:::i;:::-;3885;;;:::i;:::-;3974:34;4425:9;3974:34;;;:::i;:::-;4022:40;;323:11886;4022:40;;;:::i;:::-;3946:196;323:11886;4076:32;;323:11886;;3946:196;323:11886;;:::i;3946:196::-;323:11886;3946:196;;323:11886;3946:196;323:11886;3946:196;;323:11886;4215:34;323:11886;4215:24;;:34;:::i;:::-;4263:40;4187:196;4317:32;4263:40;;;;;:::i;:::-;4317:32;;323:11886;;4187:196;323:11886;;:::i;:::-;4187:196;;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;;4187:196;;323:11886;;4187:196;323:11886;4187:196;;323:11886;4187:196;323:11886;4187:196;;323:11886;4425:9;;;:::i;:::-;4476;;;:::i;:::-;323:11886;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;3389:139;3511:5;3494:15;323:11886;3494:15;;323:11886;3511:5;;:::i;:::-;3389:139;;;;323:11886;-1:-1:-1;;;;;323:11886:20;;;;;:::o;:::-;;;;;;:::i;:::-;:::o;:::-;;;;;;-1:-1:-1;;323:11886:20;;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;2033:20;;323:11886;;;;;2096:27;323:11886;;;2096:27;323:11886;-1:-1:-1;323:11886:20;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;;;432:5;323:11886;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;1845:27;;323:11886;;;;;;;;;;;-1:-1:-1;323:11886:20;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;;;;;-1:-1:-1;323:11886:20;543:70;323:11886;;;-1:-1:-1;323:11886:20;;-1:-1:-1;323:11886:20;;;;;-1:-1:-1;323:11886:20;;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;;2162:22:0;323:11886:20;;2518:6:0;323:11886:20;;-1:-1:-1;;;;;323:11886:20;;;-1:-1:-1;;;;;;323:11886:20;;;;;;;;;;2566:40:0;-1:-1:-1;;2566:40:0;323:11886:20;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;2227:103:3;;;;;;;;;;:::i;:::-;4814:107:20;4835:45;;;4814:107;:::i;:::-;4931:70;4939:35;;;4931:70;:::i;:::-;5040:1;;5334:16;5455;;;5040:1;5072:22;;;;;;7078:21;;;;;;;;;;7074:169;;5052:1970;2292:1:3;;1716;2809:22;323:11886:20;2629:209:3;7074:169:20;7115:117;7140:9;;:30;;7115:117;:::i;:::-;7074:169;;;5096:3;5152:14;;;;;;:::i;:::-;5205:19;6050:16;;5205:19;;;;;:::i;:::-;323:11886;5265:9;;;;;;:::i;:::-;5523:14;5334:16;5455:19;5334:16;5455;5334:62;:16;;;;;;;:::i;:62::-;5455:16;;;:::i;:19::-;5523:14;;;:::i;:::-;5580:23;5556:20;;;:::i;:::-;323:11886;;;:::i;:::-;5556:47;5552:147;;5096:3;5738:25;;5991:14;5798:36;5738:25;;;:::i;:::-;5798:36;;323:11886;5937:36;5798;5937;;323:11886;5991:14;;;:::i;6050:16::-;6096;;6050;6096;;;:::i;:::-;6193:34;;;;:::i;:::-;6245:40;;5334:16;6245:40;;;:::i;:::-;6161:216;6050:16;6303:32;;323:11886;;6161:216;323:11886;;:::i;:::-;6161:216;;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;5334:16;6161:216;;323:11886;;6161:216;6050:16;6161:216;;323:11886;6161:216;5798:36;6161:216;;323:11886;6458:34;5798:24;6458;;:34;:::i;:::-;6510:40;6426:216;6568:32;6510:40;;;;;:::i;6426:216::-;6050:16;6426:216;;323:11886;6426:216;5798:36;6426:216;;323:11886;;;;;;:::i;:::-;;;;:::i;:::-;6702:48;6698:129;;5096:3;6872:9;6927;6957:54;6872:9;;6957:54;6872:9;;323:11886;6872:9;;;;;;:::i;6927:::-;6050:16;323:11886;;;;;;;;;;;;;;;;;;;;;;;;;6957:54;;;;323:11886;5057:13;;6698:129;6426:216;;5798:36;6426:216;;;;;;;;323:11886;6770:42;;;:::i;:::-;6698:129;;;;;;;;;5552:147;5678:5;5661:15;5798:24;5661:15;;323:11886;5678:5;;:::i;:::-;5552:147;;;;323:11886;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;323:11886:20;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;323:11886:20;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;-1:-1:-1;323:11886:20;;;:::o;:::-;;-1:-1:-1;323:11886:20;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;;;;1547:207;1710:20;1547:207;1710:20;:::i;:::-;-1:-1:-1;323:11886:20;1694:15;323:11886;;;-1:-1:-1;323:11886:20;;-1:-1:-1;323:11886:20;;;;;-1:-1:-1;323:11886:20;;;1547:207;:::o;1255:286::-;;1485:27;:49;1255:286;1432:20;;;:::i;:::-;-1:-1:-1;323:11886:20;1416:15;323:11886;;;-1:-1:-1;323:11886:20;;-1:-1:-1;323:11886:20;;;1485:11;323:11886;-1:-1:-1;323:11886:20;;1485:11;323:11886;1485:11;;;;:::i;:27::-;:49;323:11886;-1:-1:-1;1416:118:20;1255:286;:::o;323:11886::-;-1:-1:-1;;;;;323:11886:20;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;2336:287:3;1759:1;2468:7;323:11886:20;2468:19:3;1759:1;;;2468:7;323:11886:20;2336:287:3:o;1759:1::-;323:11886:20;;-1:-1:-1;;;1759:1:3;;;;;;;;;;;323:11886:20;1759:1:3;323:11886:20;;;1759:1:3;;;;323:11886:20;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;-1:-1:-1;;323:11886:20;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;323:11886:20;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;11346:861;;;11535:10;;;:::i;:::-;2336:23:21;:16;;;;;;;:::i;:23::-;2414:16;;2336;2414;;;;:::i;:::-;323:11886:20;;;2452:16:21;;;323:11886:20;;;;:::i;:::-;2472:16:21;;;323:11886:20;;;;:::i;:::-;-1:-1:-1;;;;;323:11886:20;;;;;2452:36:21;323:11886:20;;12082:118;2636:24:21;11631:62:20;11639:30;11653:16;2452::21;12104:51:20;2636:24:21;2802;2636;;;2674;323:11886:20;2636:24:21;12103:52:20;2636:24:21;;;2674;:::i;:::-;2802;;;:::i;11653:16:20:-;-1:-1:-1;;;;;323:11886:20;;;11639:30;:10;:30;11631:62;:::i;:::-;11751:112;11772:47;11773:46;;;;:::i;11772:47::-;11751:112;:::i;:::-;11917:113;11938:45;11939:44;;;;:::i;11938:45::-;11917:113;:::i;:::-;323:11886;;;:::i;:::-;12104:51;:::i;12103:52::-;12082:118;:::i;323:11886::-;2452:16:21;323:11886:20;-1:-1:-1;;;323:11886:20;;2336:16:21;323:11886:20;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;1482:422:21;2065:37;1482:422;;1750:33;323:11886:20;1482:422:21;1750:33;:::i;:::-;323:11886:20;;;;:::i;2065:37:21:-;323:11886:20;;;1482:422:21:o;323:11886:20:-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;497:279:25;;;;;;;;;;;;;323:11886:20;497:279:25;323:11886:20;;;;;;;;497:279:25;;;;;;;;;323:11886:20;;;;;;;497:279:25;;;323:11886:20;;;;;;;497:279:25;;;323:11886:20;497:279:25;;;323:11886:20;497:279:25;323:11886:20;497:279:25:o;1599:679::-;;1721:11;;;;1707:33;1721:11;;;;:::i;:::-;1707:33;;;:::i;:::-;1755:13;1767:1;1794:3;1774:11;;;;:::i;:::-;1770:22;;;;;;;1843:11;1829:29;1843:14;323:11886:20;1843:11:25;;;;;:::i;:14::-;1829:29;:::i;:::-;1813:45;;;;:::i;:::-;323:11886:20;;1755:13:25;;1770:22;;;;;323:11886:20;;1909:28:25;;323:11886:20;1721:11:25;1909:28;;323:11886:20;;;:::i;:::-;1909:28:25;323:11886:20;;1909:28:25;;;;;;:::i;:::-;323:11886:20;1899:39:25;;2063:15;1995:262;2063:15;;;:::i;:::-;2131:11;1995:262;2131:11;323:11886:20;2131:11:25;;;:::i;:::-;2164;;;;;;:::i;:::-;2197:10;2229;2197;;;323:11886:20;2229:10:25;;323:11886:20;;;;1995:262:25;;;1721:11;1995:262;;;;;:::i;:::-;323:11886:20;1968:303:25;;1599:679;:::o;8744:422:20:-;;;323:11886;-1:-1:-1;323:11886:20;8922:15;323:11886;;;-1:-1:-1;323:11886:20;;-1:-1:-1;323:11886:20;;;;-1:-1:-1;323:11886:20;;8995:14;;;;:52;;;;8744:422;323:11886;;;;9140:19;9095:26;9140:19;9095:42;9140:19;;:::i;:::-;9095:26;323:11886;;7782:15;323:11886;;;;;;;9095:42;323:11886;8744:422::o;323:11886::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;8995:52;323:11886;;;;;;;;;;9013:34;;8995:52;;;323:11886;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;323:11886:20;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;9172:2168;9310:12;323:11886;9302:60;;-1:-1:-1;;;;;323:11886:20;9310:26;;9302:60;:::i;:::-;9380:18;323:11886;9380:32;;-1:-1:-1;;;;;323:11886:20;;;9380:32;9372:67;9380:32;;;9372:67;:::i;:::-;323:11886;;;;;:::i;:::-;;;;:::i;:::-;9453:44;;9534:17;;9334:1;9534:17;;;;;9974:39;9534:17;;323:11886;9533:36;9534:26;323:11886;;9554:6;323:11886;9534:26;;:::i;:::-;10144:5;323:11886;;;;9533:36;9651:65;9608:29;323:11886;;;9608:29;:::i;:::-;323:11886;;9659:9;:30;;9651:65;:::i;:::-;9734:13;9730:167;;9449:1885;9926:34;;;;;:::i;:::-;;9974:39;:::i;9730:167::-;323:11886;;;;9843:39;323:11886;;9310:12;323:11886;;;;;;;;;;9786:39;;;;:::i;:::-;;9843;:::i;:::-;9730:167;;;9449:1885;10053:24;323:11886;;;;;;;;:::i;:::-;;;;:::i;:::-;10034:43;10053:24;;10114:17;;;;323:11886;10188:29;10113:36;10114:26;323:11886;;10134:6;323:11886;10114:26;;:::i;10113:36::-;323:11886;;;10188:29;:::i;:::-;10235:13;;10231:257;;10030:1304;-1:-1:-1;9380:18:20;323:11886;;;10572:21;;10501:53;;:39;;-1:-1:-1;;;;;323:11886:20;10501:39;323:11886;10501:53;10572:21;;323:11886;-1:-1:-1;;;;;323:11886:20;;;;10501:180;;;;;;9334:1;323:11886;;10501:180;323:11886;;;;;;;;;;;;10501:180;;9310:12;10501:180;;;:::i;:::-;;;;;;;;;;;10030:1304;9172:2168::o;10501:180::-;;;9334:1;10501:180;;;:::i;:::-;;;:::i;:::-;;:::i;10231:257::-;9380:18;323:11886;10268:53;;:39;;-1:-1:-1;;;;;323:11886:20;10268:39;323:11886;10268:53;10343:21;;;323:11886;-1:-1:-1;;;;;323:11886:20;9310:12;323:11886;;;;-1:-1:-1;;;;;323:11886:20;10268:205;;;;;;323:11886;9334:1;323:11886;;10268:205;323:11886;;;;;;;;;;;;10268:205;;9310:12;10268:205;;;:::i;:::-;;;;;;;;;;10231:257;10268:205;;;9334:1;10268:205;;;:::i;:::-;;10231:257;;10030:1304;10721:25;323:11886;;;;;;;:::i;:::-;;;;:::i;:::-;10702:44;10721:25;;-1:-1:-1;9380:18:20;323:11886;10762:54;;:39;;-1:-1:-1;;;;;323:11886:20;10762:39;323:11886;10762:54;10834:21;;;323:11886;10915:13;;-1:-1:-1;;;;;323:11886:20;10915:13;;323:11886;10762:180;;;;;;9334:1;323:11886;;10762:180;10915:13;323:11886;;;;;;;;;;;10762:180;;9310:12;10762:180;;;:::i;10698:636::-;10982:26;323:11886;;;;;;;:::i;:::-;;;;:::i;:::-;10963:45;10982:26;;-1:-1:-1;;;;;323:11886:20;11097:21;;;323:11886;-1:-1:-1;;;;;323:11886:20;11178:13;11209:17;11178:13;;;323:11886;11209:17;;323:11886;11024:236;;;;;11178:13;323:11886;-1:-1:-1;;;11024:236:20;;-1:-1:-1;;;;;323:11886:20;;;9310:12;11024:236;;323:11886;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;323:11886:20;;;;;;;;;;;-1:-1:-1;323:11886:20;;;;11024:236;323:11886;10959:375;323:11886;;-1:-1:-1;;;11291:32:20;;323:11886;9310:12;11291:32;;323:11886;;;;;;-1:-1:-1;;;323:11886:20;;;;;;11291:32;1359:130:0;323:11886:20;;-1:-1:-1;;;;;323:11886:20;734:10:10;1422:23:0;323:11886:20;;1359:130:0:o;323:11886:20:-;;;;;;;;;;;;;;;;;;;;;;;;;3367:268:11;1371:66;3490:47;;1371:66;;3560:15;;;:::i;3486:143::-;323:11886:20;;;-1:-1:-1;5454:13:15;1371:66:11;;;;;;;;;;;;;;3486:143;1371:66;;;;;;;323:11886:20;;;;;1371:66:11;323:11886:20;;;;1371:66:11;;;;;;;;;;;;;;;;;:::i;:::-;5454:13:15;1371:66:11;;;;;-1:-1:-1;1371:66:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1371:66:11;;;;;;;;;;-1:-1:-1;;1371:66:11;;;-1:-1:-1;1371:66:11;;;;;;;;-1:-1:-1;1371:66:11;;;;-1:-1:-1;;;1371:66:11;;;;;;323:11886:20;1371:66:11;;;;;;;;3367:268;1371:66;3490:47;;1371:66;;3560:15;;;:::i;3486:143::-;323:11886:20;;;-1:-1:-1;5512:16:15;1371:66:11;;;;;;;;;;;;;;3486:143;1371:66;;;;;;;323:11886:20;;;;;1371:66:11;323:11886:20;;;;1371:66:11;;;;;;;;;;;;;;;;:::i;:::-;5512:16:15;1371:66:11;;;;;-1:-1:-1;1371:66:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1371:66:11;;;;;;;;;;;;;;;;323:11886:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:11886:20;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;323:11886:20;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:11886:20;;;;:::o;470:10:21:-;;;;:::o;:::-;323:11886:20;;-1:-1:-1;;;470:10:21;;;;;;;;;;;323:11886:20;470:10:21;323:11886:20;;;470:10:21;-1:-1:-1;;;470:10:21;;;;;;;787:689;887:11;;;;;:::i;:::-;981:15;715:38;732:20;;;:::i;715:38::-;981:15;;;;;;:::i;:::-;1010:17;;;:21;:17;;887:11;323:11886:20;-1:-1:-1;;;1072:54:21;;323:11886:20;1072:54:21;;323:11886:20;;;;;;;;1072:54:21;;;;;;:::i;:::-;;;-1:-1:-1;;;;;323:11886:20;1072:54:21;;;;;;1047:190;1072:54;1030:1;1072:54;;;1006:464;-1:-1:-1;;;;;;;323:11886:20;-1:-1:-1;;;1072:88:21;1047:190;:::i;1072:54::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;1006:464;1285:44;323:11886:20;;1368:15:21;323:11886:20;1343:116:21;323:11886:20;;;;:::i;:::-;1285:44:21;;:::i;1368:15::-;-1:-1:-1;;;;;323:11886:20;;;1368:15:21;1343:116;:::i;544:184:26:-;;;;1301:13;-1:-1:-1;1296:134:26;1334:3;323:11886:20;;1316:16:26;;;;;1410:8;;;;:::i;:::-;323:11886:20;;-1:-1:-1;490:5:23;;;;;;804:119;-1:-1:-1;804:119:23;;;323:11886:20;804:119:23;-1:-1:-1;804:119:23;490:61;1334:3:26;323:11886:20;1301:13:26;;;490:61:23;804:119;;323:11886:20;804:119:23;;;;;;490:61;;1316:16:26;;;;;688:33;544:184;:::o;2487:192:25:-;2641:31;2487:192;2641:11;:27;2487:192;2641:11;;:27;:::i;:::-;;:31;323:11886:20;2623:15:25;:49;2487:192;:::o;1189:404::-;1412:29;255:185;;;;:::i;:::-;1412:29;:::i;:::-;255:185;1463:29;255:185;;1477:14;;;255:185;:::i;1463:29::-;1514:10;1546:8;1514:10;;;323:11886:20;1546:8:25;;323:11886:20;;;;1339:233:25;;;;323:11886:20;255:185:25;323:11886:20;;;255:185:25;;323:11886:20;255:185:25;;;323:11886:20;1477:14:25;255:185;;323:11886:20;255:185:25;;;323:11886:20;255:185:25;1339:233;;;;;;:::i;2059:405:11:-;2669:4;2633:40;;2687:11;2696:2;2687:11;;2683:69;;323:11886:20;;;;;;;;:::i;:::-;2292:2:11;323:11886:20;;;;;;-1:-1:-1;;323:11886:20;;;;2348:90:11;;;2059:405;:::o;2683:69::-;2721:20;;;-1:-1:-1;2721:20:11;;-1:-1:-1;2721:20:11;4768:165:15;8496:231:14;4768:165:15;4893:20;;:::i;:::-;8496:231:14;;;;-1:-1:-1;;;8496:231:14;;;;;;;;;;;4768:165:15;:::o;2284:197:25:-;3849:5:14;2284:197:25;3800:27:14;2284:197:25;7353:157:14;-1:-1:-1;7353:157:14;;;;-1:-1:-1;7353:157:14;3800:27;:::i;:::-;3849:5;;;;:::i;323:11886:20:-;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;857:669:24;323:11886:20;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;1386:133:24;1017:50;996:116;1407:24;1017:50;;;;;996:116;:::i;:::-;1122:134;1143:30;;;;;:::i;:::-;:62;1177:28;1143:30;1177:28;;;:::i;1143:62::-;-1:-1:-1;;;;;323:11886:20;;;1143:62:24;1122:134;:::i;:::-;1266:110;1287:22;;;323:11886:20;1287:22:24;1313:20;;323:11886:20;1287:46:24;1266:110;:::i;:::-;1407:24;323:11886:20;1435:26:24;;323:11886:20;-1:-1:-1;1407:54:24;1386:133;:::i;489:362::-;323:11886:20;;;;;;;;;;;;;;717:21:24;;;323:11886:20;;760:13:24;795:17;760:13;;;323:11886:20;795:17:24;;323:11886:20;;760:13:24;323:11886:20;611:219:24;717:21;611:219;;323:11886:20;223:117:24;323:11886:20;;760:13:24;223:117;;;795:17;223:117;;323:11886:20;223:117:24;;;323:11886:20;223:117:24;;;323:11886:20;223:117:24;611:219;;;;;;:::i;3695:262:15:-;3779:4;3788:11;-1:-1:-1;;;;;323:11886:20;3771:28:15;;:63;;3695:262;3767:184;;;3857:22;3850:29;:::o;3767:184::-;323:11886:20;;4054:81:15;;;323:11886:20;1929:95:15;323:11886:20;;4077:11:15;323:11886:20;1929:95:15;;323:11886:20;4090:14:15;1929:95;;;323:11886:20;4106:13:15;1929:95;;;323:11886:20;3779:4:15;1929:95;;;323:11886:20;1929:95:15;4054:81;;;;;;:::i;3771:63::-;3820:14;;3803:13;:31;3771:63;;2145:730:14;;2283:2;323:11886:20;;2263:22:14;2259:610;2283:2;;;2746:25;2546:180;;;;;;;;;;;;;;-1:-1:-1;2546:180:14;2746:25;;:::i;:::-;2739:32;;:::o;2259:610::-;2802:56;;2818:1;2802:56;2822:35;2802:56;:::o;323:11886:20:-;;-1:-1:-1;323:11886:20;;;:::o;570:511:14:-;323:11886:20;;;:::i;:::-;638:29:14;;;683:7;:::o;634:441::-;323:11886:20;;;:::i;:::-;743:29:14;734:38;;743:29;;323:11886:20;;-1:-1:-1;;;788:34:14;;323:11886:20;788:34:14;;;323:11886:20;;;;;;;;;;;;;11291:32;730:345:14;323:11886:20;;;:::i;:::-;852:35:14;843:44;;852:35;;323:11886:20;;-1:-1:-1;;;903:41:14;;323:11886:20;903:41:14;;;323:11886:20;;;;;;;;;;;;;11291:32;839:236:14;323:11886:20;;974:30:14;323:11886:20;;:::i;:::-;965:39:14;961:114;;570:511::o;961:114::-;323:11886:20;;-1:-1:-1;;;1020:44:14;;323:11886:20;1020:44:14;;;323:11886:20;;;;;;;;;;;-1:-1:-1;;;323:11886:20;;;;;;11291:32;5009:1456:14;6021:66;6008:79;;6004:161;;323:11886:20;;-1:-1:-1;323:11886:20;;;;;;;;;;;;;;;;;;;;;;6276:24:14;;;;;;;;;-1:-1:-1;6276:24:14;-1:-1:-1;;;;;323:11886:20;;6314:20:14;6310:101;;6421:37;-1:-1:-1;5009:1456:14;:::o;6310:101::-;6350:50;-1:-1:-1;6350:50:14;6276:24;6350:50;:::o;6004:161::-;6103:51;;;;6119:1;6103:51;6123:30;6103:51;:::o"},"methodIdentifiers":{"MAX_FEE_BPS()":"d55be8c6","acceptBid((uint8,((uint8,address,uint256,uint256),(uint8,address,uint256,uint256),uint256,uint256)[],address,address,bytes32,uint256,bytes),uint256,uint256)":"bc2db5c4","assetTransferAgent()":"4715399c","batchMatchOrders((uint8,((uint8,address,uint256,uint256),(uint8,address,uint256,uint256),uint256,uint256)[],address,address,bytes32,uint256,bytes)[],(uint8,((uint8,address,uint256,uint256),(uint8,address,uint256,uint256),uint256,uint256)[],address,address,bytes32,uint256,bytes),uint256[],bytes32[][])":"1ef1c7d2","cancelOrder((uint8,((uint8,address,uint256,uint256),(uint8,address,uint256,uint256),uint256,uint256)[],address,address,bytes32,uint256,bytes),uint256)":"a83fb54f","eip712Domain()":"84b0196e","feeBps()":"24a9d853","feeRecipient()":"46904840","isOrderCancelled((uint8,((uint8,address,uint256,uint256),(uint8,address,uint256,uint256),uint256,uint256)[],address,address,bytes32,uint256,bytes),uint256)":"2e1cbea2","isOrderFullyFilled((uint8,((uint8,address,uint256,uint256),(uint8,address,uint256,uint256),uint256,uint256)[],address,address,bytes32,uint256,bytes),uint256)":"703cebfe","matchOrders((uint8,((uint8,address,uint256,uint256),(uint8,address,uint256,uint256),uint256,uint256)[],address,address,bytes32,uint256,bytes),(uint8,((uint8,address,uint256,uint256),(uint8,address,uint256,uint256),uint256,uint256)[],address,address,bytes32,uint256,bytes),uint256,bytes32[])":"bf76c032","orderFillAmount(bytes32,uint256)":"eded1f00","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAssetTransferAgent(address)":"ca200ad8","setFeeBps(uint256)":"72c27b62","setFeeRecipient(address)":"e74b981b","transferOwnership(address)":"f2fde38b","verifyMerkleProof(bytes32[],bytes32,bytes32)":"ada4fa18"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_assetTransferAgent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeBps\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"CancelOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillAmount\",\"type\":\"uint256\"}],\"name\":\"OrderMatched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum LibOrder.OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"makeAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"takeAsset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderItem[]\",\"name\":\"items\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"bidOrder\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"orderItemIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"}],\"name\":\"acceptBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetTransferAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum LibOrder.OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"makeAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"takeAsset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderItem[]\",\"name\":\"items\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"makerOrders\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum LibOrder.OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"makeAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"takeAsset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderItem[]\",\"name\":\"items\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"takerOrder\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"orderItemIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"proofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchMatchOrders\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum LibOrder.OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"makeAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"takeAsset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderItem[]\",\"name\":\"items\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"orderItemIndex\",\"type\":\"uint256\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum LibOrder.OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"makeAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"takeAsset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderItem[]\",\"name\":\"items\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"orderItemIndex\",\"type\":\"uint256\"}],\"name\":\"isOrderCancelled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum LibOrder.OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"makeAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"takeAsset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderItem[]\",\"name\":\"items\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"orderItemIndex\",\"type\":\"uint256\"}],\"name\":\"isOrderFullyFilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum LibOrder.OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"makeAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"takeAsset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderItem[]\",\"name\":\"items\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"makerOrder\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibOrder.OrderType\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"components\":[{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"makeAsset\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum LibAsset.AssetType\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct LibAsset.Asset\",\"name\":\"takeAsset\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"internalType\":\"struct LibOrder.OrderItem[]\",\"name\":\"items\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order\",\"name\":\"takerOrder\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"orderItemIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"matchOrders\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderFillAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"setAssetTransferAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeBps\",\"type\":\"uint256\"}],\"name\":\"setFeeBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"verifyMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/Marketplace.sol\":{\"keccak256\":\"0x30b6b4edb939fe265cb41edd00cbf7f0868a4665b142eb254495711b5a72bf5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baff425ae1b82929ff001ae321f5457ff8aaba3ada7655eb1f8eb35de0ee8f9b\",\"dweb:/ipfs/QmcR96SVEEDY4fqzvbmJAzWgkgsk18qwg3srHvynKQHUii\"]},\"contracts/OrderValidator.sol\":{\"keccak256\":\"0x48fc3339d3e4450853768362b3f1900d0e4270706b6619eebd925ca8abee0915\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5960a0c24154af7b9236db57cb382b92cf2751e881279a6d2a35ad7f709abf78\",\"dweb:/ipfs/QmPaNtgceYgBhPPJkCwN22D5RLnxBog3sY4PVEcYEPAPmP\"]},\"contracts/interfaces/IAssetTransferAgent.sol\":{\"keccak256\":\"0x8d74c832e52b948a8d8030ace68402859353aa8e37b605b33ef2a5ade4e99653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be85f1361767c08947d3cbb03bfab57097e2a023b7f1a76d9088e72e95d7b66\",\"dweb:/ipfs/QmNsUtrUfXmnhc8wFm7JqZqfVRKzvPnCFXjDtAFBdga3ND\"]},\"contracts/libraries/Hashes.sol\":{\"keccak256\":\"0x5fc16aceddfdf41b39c8a569a343e1e1b5e11951cb6f3c92d8a6ebab76b53103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d726b88fc37fc22754ee4139de728e7ea8736458fcd731f039175df57b04fd9c\",\"dweb:/ipfs/QmPahn1EDQerRoydo6AMPEr498HJnc615q6erieKwr5LVV\"]},\"contracts/libraries/LibAsset.sol\":{\"keccak256\":\"0x9dce1e46f41fb6eed87cf9d8ea173a128f3d26bf37da4000cd640eb84537e9c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e025fc7fd865f9b07f19a21a2cafec88ec686ab21cb5f15c58a2aa59061979f9\",\"dweb:/ipfs/QmVTDoLFm3k8657JZYztixfKtXpCNWdsPHkBsC59EAHbEE\"]},\"contracts/libraries/LibOrder.sol\":{\"keccak256\":\"0x6fcd0b7c1de2f893aabc7676d5b87637c1a9477d54bd316d923a734d8119983e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10da755388c9a457584acfb58d22e51e046fd68e2cd0ead6c97f7e5cfbf5978\",\"dweb:/ipfs/QmNUJUpUAL4nUp63Goo4DSLbGKNVGSuUpW9n51BSffo3de\"]},\"contracts/libraries/MerkleProof.sol\":{\"keccak256\":\"0x552443bf3b7046aa3c49c480d7bdaa94991e2cababd4e7d2edde3c41205cd099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e83c5233d342db7a811c20c15e342bb54761aa12a970d51b90da1a30d835bd3d\",\"dweb:/ipfs/QmQLDqBaiHik9EauVWAaP6WEP6AnBtLPUMGKAzM7XrkT6J\"]}},\"version\":1}"}},"contracts/OrderValidator.sol":{"OrderValidator":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32","name":"leaf","type":"bytes32"}],"name":"verifyMerkleProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e","verifyMerkleProof(bytes32[],bytes32,bytes32)":"ada4fa18"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"verifyMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderValidator.sol\":\"OrderValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/OrderValidator.sol\":{\"keccak256\":\"0x48fc3339d3e4450853768362b3f1900d0e4270706b6619eebd925ca8abee0915\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5960a0c24154af7b9236db57cb382b92cf2751e881279a6d2a35ad7f709abf78\",\"dweb:/ipfs/QmPaNtgceYgBhPPJkCwN22D5RLnxBog3sY4PVEcYEPAPmP\"]},\"contracts/libraries/Hashes.sol\":{\"keccak256\":\"0x5fc16aceddfdf41b39c8a569a343e1e1b5e11951cb6f3c92d8a6ebab76b53103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d726b88fc37fc22754ee4139de728e7ea8736458fcd731f039175df57b04fd9c\",\"dweb:/ipfs/QmPahn1EDQerRoydo6AMPEr498HJnc615q6erieKwr5LVV\"]},\"contracts/libraries/LibAsset.sol\":{\"keccak256\":\"0x9dce1e46f41fb6eed87cf9d8ea173a128f3d26bf37da4000cd640eb84537e9c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e025fc7fd865f9b07f19a21a2cafec88ec686ab21cb5f15c58a2aa59061979f9\",\"dweb:/ipfs/QmVTDoLFm3k8657JZYztixfKtXpCNWdsPHkBsC59EAHbEE\"]},\"contracts/libraries/LibOrder.sol\":{\"keccak256\":\"0x6fcd0b7c1de2f893aabc7676d5b87637c1a9477d54bd316d923a734d8119983e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10da755388c9a457584acfb58d22e51e046fd68e2cd0ead6c97f7e5cfbf5978\",\"dweb:/ipfs/QmNUJUpUAL4nUp63Goo4DSLbGKNVGSuUpW9n51BSffo3de\"]},\"contracts/libraries/MerkleProof.sol\":{\"keccak256\":\"0x552443bf3b7046aa3c49c480d7bdaa94991e2cababd4e7d2edde3c41205cd099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e83c5233d342db7a811c20c15e342bb54761aa12a970d51b90da1a30d835bd3d\",\"dweb:/ipfs/QmQLDqBaiHik9EauVWAaP6WEP6AnBtLPUMGKAzM7XrkT6J\"]}},\"version\":1}"}},"contracts/interfaces/IAssetTransferAgent.sol":{"IAssetTransferAgent":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"ERC1155BatchTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC1155Transferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ERC20Transferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721Transferred","type":"event"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferERC1155","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferERC721","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"transferERC1155(address,address,address,uint256,uint256,bytes)":"eae787dc","transferERC20(address,address,address,uint256)":"da3e8ce4","transferERC721(address,address,address,uint256)":"789f93f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"ERC1155BatchTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC1155Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Transferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721Transferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAssetTransferAgent.sol\":\"IAssetTransferAgent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAssetTransferAgent.sol\":{\"keccak256\":\"0x8d74c832e52b948a8d8030ace68402859353aa8e37b605b33ef2a5ade4e99653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8be85f1361767c08947d3cbb03bfab57097e2a023b7f1a76d9088e72e95d7b66\",\"dweb:/ipfs/QmNsUtrUfXmnhc8wFm7JqZqfVRKzvPnCFXjDtAFBdga3ND\"]}},\"version\":1}"}},"contracts/libraries/Hashes.sol":{"Hashes":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220aaad40551451b844f464aed1cccb87932914c56be4160f510ebd20faeb2c755464736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xAD BLOCKHASH SSTORE EQ MLOAD 0xB8 PREVRANDAO DELEGATECALL PUSH5 0xAED1CCCB87 SWAP4 0x29 EQ 0xC5 PUSH12 0xE4160F510EBD20FAEB2C7554 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"78:853:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220aaad40551451b844f464aed1cccb87932914c56be4160f510ebd20faeb2c755464736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA 0xAD BLOCKHASH SSTORE EQ MLOAD 0xB8 PREVRANDAO DELEGATECALL PUSH5 0xAED1CCCB87 SWAP4 0x29 EQ 0xC5 PUSH12 0xE4160F510EBD20FAEB2C7554 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"78:853:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Hashes.sol\":\"Hashes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/Hashes.sol\":{\"keccak256\":\"0x5fc16aceddfdf41b39c8a569a343e1e1b5e11951cb6f3c92d8a6ebab76b53103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d726b88fc37fc22754ee4139de728e7ea8736458fcd731f039175df57b04fd9c\",\"dweb:/ipfs/QmPahn1EDQerRoydo6AMPEr498HJnc615q6erieKwr5LVV\"]}},\"version\":1}"}},"contracts/libraries/LibAsset.sol":{"LibAsset":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201db4489ae4d0d92bd52ad660ea26aef9515f5335b20eff07a1185f99618ae3ed64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xB4 BASEFEE SWAP11 0xE4 0xD0 0xD9 0x2B 0xD5 0x2A 0xD6 PUSH1 0xEA 0x26 0xAE 0xF9 MLOAD PUSH0 MSTORE8 CALLDATALOAD 0xB2 0xE SELFDESTRUCT SMOD LOG1 XOR PUSH0 SWAP10 PUSH2 0x8AE3 0xED PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"58:1470:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201db4489ae4d0d92bd52ad660ea26aef9515f5335b20eff07a1185f99618ae3ed64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xB4 BASEFEE SWAP11 0xE4 0xD0 0xD9 0x2B 0xD5 0x2A 0xD6 PUSH1 0xEA 0x26 0xAE 0xF9 MLOAD PUSH0 MSTORE8 CALLDATALOAD 0xB2 0xE SELFDESTRUCT SMOD LOG1 XOR PUSH0 SWAP10 PUSH2 0x8AE3 0xED PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"58:1470:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibAsset.sol\":\"LibAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/LibAsset.sol\":{\"keccak256\":\"0x9dce1e46f41fb6eed87cf9d8ea173a128f3d26bf37da4000cd640eb84537e9c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e025fc7fd865f9b07f19a21a2cafec88ec686ab21cb5f15c58a2aa59061979f9\",\"dweb:/ipfs/QmVTDoLFm3k8657JZYztixfKtXpCNWdsPHkBsC59EAHbEE\"]}},\"version\":1}"}},"contracts/libraries/LibOrder.sol":{"LibOrder":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212205d33c7e36b5d22645e012f5d57c3bcfd9ede25c27e2dc9a6d2d4f34408ea1e9264736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE CALLER 0xC7 0xE3 PUSH12 0x5D22645E012F5D57C3BCFD9E 0xDE 0x25 0xC2 PUSH31 0x2DC9A6D2D4F34408EA1E9264736F6C634300081C0033000000000000000000 ","sourceMap":"147:2534:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212205d33c7e36b5d22645e012f5d57c3bcfd9ede25c27e2dc9a6d2d4f34408ea1e9264736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE CALLER 0xC7 0xE3 PUSH12 0x5D22645E012F5D57C3BCFD9E 0xDE 0x25 0xC2 PUSH31 0x2DC9A6D2D4F34408EA1E9264736F6C634300081C0033000000000000000000 ","sourceMap":"147:2534:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibOrder.sol\":\"LibOrder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/libraries/LibAsset.sol\":{\"keccak256\":\"0x9dce1e46f41fb6eed87cf9d8ea173a128f3d26bf37da4000cd640eb84537e9c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e025fc7fd865f9b07f19a21a2cafec88ec686ab21cb5f15c58a2aa59061979f9\",\"dweb:/ipfs/QmVTDoLFm3k8657JZYztixfKtXpCNWdsPHkBsC59EAHbEE\"]},\"contracts/libraries/LibOrder.sol\":{\"keccak256\":\"0x6fcd0b7c1de2f893aabc7676d5b87637c1a9477d54bd316d923a734d8119983e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10da755388c9a457584acfb58d22e51e046fd68e2cd0ead6c97f7e5cfbf5978\",\"dweb:/ipfs/QmNUJUpUAL4nUp63Goo4DSLbGKNVGSuUpW9n51BSffo3de\"]}},\"version\":1}"}},"contracts/libraries/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220906dcf7afff557c08698d498a5b7d080ba4794f38a2e1e450efe7c33bb5e845e64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 PUSH14 0xCF7AFFF557C08698D498A5B7D080 0xBA SELFBALANCE SWAP5 RETURN DUP11 0x2E 0x1E GASLIMIT 0xE INVALID PUSH29 0x33BB5E845E64736F6C634300081C003300000000000000000000000000 ","sourceMap":"103:5668:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220906dcf7afff557c08698d498a5b7d080ba4794f38a2e1e450efe7c33bb5e845e64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 PUSH14 0xCF7AFFF557C08698D498A5B7D080 0xBA SELFBALANCE SWAP5 RETURN DUP11 0x2E 0x1E GASLIMIT 0xE INVALID PUSH29 0x33BB5E845E64736F6C634300081C003300000000000000000000000000 ","sourceMap":"103:5668:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/libraries/Hashes.sol\":{\"keccak256\":\"0x5fc16aceddfdf41b39c8a569a343e1e1b5e11951cb6f3c92d8a6ebab76b53103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d726b88fc37fc22754ee4139de728e7ea8736458fcd731f039175df57b04fd9c\",\"dweb:/ipfs/QmPahn1EDQerRoydo6AMPEr498HJnc615q6erieKwr5LVV\"]},\"contracts/libraries/MerkleProof.sol\":{\"keccak256\":\"0x552443bf3b7046aa3c49c480d7bdaa94991e2cababd4e7d2edde3c41205cd099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e83c5233d342db7a811c20c15e342bb54761aa12a970d51b90da1a30d835bd3d\",\"dweb:/ipfs/QmQLDqBaiHik9EauVWAaP6WEP6AnBtLPUMGKAzM7XrkT6J\"]}},\"version\":1}"}}}}}