/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_assetTransferAgent",
        type: "address",
      },
      {
        internalType: "address",
        name: "_auctionVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeBps",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAgent",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAgent",
        type: "address",
      },
    ],
    name: "AssetTransferAgentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "auctionHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AuctionBidSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "auctionHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AuctionFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldAuctionVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAuctionVault",
        type: "address",
      },
    ],
    name: "AuctionVaultUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderItemIndex",
        type: "uint256",
      },
    ],
    name: "CancelOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFeeBps",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFeeBps",
        type: "uint256",
      },
    ],
    name: "FeeBpsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRecipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "MarketplacePaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "MarketplaceUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fillAmount",
        type: "uint256",
      },
    ],
    name: "OrderMatched",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_AUCTION_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE_BPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_AUCTION_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BID_INCREMENT_BPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum LibOrder.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "makeAsset",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "takeAsset",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct LibOrder.OrderItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "bidOrder",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "orderItemIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellAmount",
        type: "uint256",
      },
    ],
    name: "acceptBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "bidder",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum LibAsset.AssetType",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "contractAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "assetAmount",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAssetPerItem",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "collectionAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibCollectionBid.CollectionBid",
        name: "bid",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "acceptCollectionBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetTransferAgent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "auctionFinalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum LibOrder.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "makeAsset",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "takeAsset",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct LibOrder.OrderItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order[]",
        name: "makerOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "enum LibOrder.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "makeAsset",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "takeAsset",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct LibOrder.OrderItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "takerOrder",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "orderItemIndices",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[][]",
        name: "proofs",
        type: "bytes32[][]",
      },
    ],
    name: "batchMatchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum LibOrder.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "makeAsset",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "takeAsset",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct LibOrder.OrderItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "orderItemIndex",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "collectionBidFillAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum LibAsset.AssetType",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "contractAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "assetAmount",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyNowPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibAuction.Auction",
        name: "auction",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "finalizeAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "highestBids",
    outputs: [
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum LibOrder.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "makeAsset",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "takeAsset",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct LibOrder.OrderItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "orderItemIndex",
        type: "uint256",
      },
    ],
    name: "isOrderCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum LibOrder.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "makeAsset",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "takeAsset",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct LibOrder.OrderItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "orderItemIndex",
        type: "uint256",
      },
    ],
    name: "isOrderFullyFilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum LibOrder.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "makeAsset",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "takeAsset",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct LibOrder.OrderItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "makerOrder",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibOrder.OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "makeAsset",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "enum LibAsset.AssetType",
                    name: "assetType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "assetId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "assetAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct LibAsset.Asset",
                name: "takeAsset",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "start",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "end",
                type: "uint256",
              },
            ],
            internalType: "struct LibOrder.OrderItem[]",
            name: "items",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "takerOrder",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "orderItemIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orderFillAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_agent",
        type: "address",
      },
    ],
    name: "setAssetTransferAgent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_auctionVault",
        type: "address",
      },
    ],
    name: "setAuctionVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeBps",
        type: "uint256",
      },
    ],
    name: "setFeeBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum LibAsset.AssetType",
                name: "assetType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "contractAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "assetAmount",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "asset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyNowPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LibAuction.Auction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "submitAuctionBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "verifyMerkleProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101608060405234610338576080816154b68038038091610020828561033d565b8339810103126103385761003381610376565b61003f60208301610376565b91606061004e60408301610376565b9101519160405161006060408261033d565b601181526020810190704c61796572474d61726b6574506c61636560781b82526040519161008f60408461033d565b600183526020830191603160f81b835260016000556001543360018060a01b0382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b0319163360ff60a01b1916176001556100f58161038a565b610120526101028461054e565b61014052519020918260e05251902080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815261016b60c08261033d565b5190206080523060c0526001600160a01b03169283156102f3576001600160a01b03169081156102ae576001600160a01b03169283156102695761271083116102325760018060a01b0319600454161760045560018060a01b0319600554161760055560075560018060a01b03196006541617600655604051614dc990816106ed823960805181614ad4015260a05181614b8b015260c05181614a9e015260e05181614b2301526101005181614b49015261012051816108dd015261014051816109060152f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206665652042505360881b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c69642061756374696f6e207661756c7400000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206173736574207472616e73666572206167656e74000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c69642066656520726563697069656e7400000000000000000000006044820152606490fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761036057604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361033857565b90815160208110600014610422575090601f8151116103c65760208151910151602082106103b6571790565b6000198260200360031b1b161790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b83811061040a5750508160006044809484010152601f80199101168101030190fd5b602082820181015160448784010152859350016103e8565b6001600160401b03811161036057600254600181811c91168015610544575b602082101461052e57601f81116104f8575b50602092601f82116001146104935792819293600092610488575b50508160011b916000199060031b1c19161760025560ff90565b01519050388061046e565b601f198216936002600052806000209160005b8681106104e057508360019596106104c7575b505050811b0160025560ff90565b015160001960f88460031b161c191690553880806104b9565b919260206001819286850151815501940192016104a6565b6002600052601f6020600020910160051c810190601f830160051c015b8181106105225750610453565b60008155600101610515565b634e487b7160e01b600052602260045260246000fd5b90607f1690610441565b908151602081106000146105d6575090601f81511161057a5760208151910151602082106103b6571790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b8381106105be5750508160006044809484010152601f80199101168101030190fd5b6020828201810151604487840101528593500161059c565b6001600160401b03811161036057600354600181811c911680156106e2575b602082101461052e57601f81116106ac575b50602092601f8211600114610647579281929360009261063c575b50508160011b916000199060031b1c19161760035560ff90565b015190503880610622565b601f198216936003600052806000209160005b868110610694575083600195961061067b575b505050811b0160035560ff90565b015160001960f88460031b161c1916905538808061066d565b9192602060018192868501518155019401920161065a565b6003600052601f6020600020910160051c810190601f830160051c015b8181106106d65750610607565b600081556001016106c9565b90607f16906105f556fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806314414cc01461023b5780631ef1c7d21461023657806324a9d853146102315780632e1cbea21461022c57806336bacfd5146102275780633a9fae7c146102225780633f4ba83a1461021d5780633fb351781461021857806346904840146102135780634715399c1461020e57806348a220a4146102095780635c975abb146102045780635d704aea146101ff5780636199d280146101fa578063703cebfe146101f5578063715018a6146101f057806372c27b62146101eb5780638456cb59146101e657806384b0196e146101e1578063892987b5146101dc5780638da5cb5b146101d7578063a83fb54f146101d2578063ada4fa18146101cd578063bc2db5c4146101c8578063bf76c032146101c3578063c2f50a7a146101be578063ca200ad8146101b9578063d418fc42146101b4578063d55be8c6146101af578063db2e21bc146101aa578063e74b981b146101a5578063ecf66145146101a0578063eded1f001461019b5763f2fde38b0361000e5761190a565b6118ce565b6116f6565b611641565b61157a565b61155d565b61115b565b61109e565b611081565b610e1c565b610bf7565b610baa565b610a39565b610a10565b6109c5565b6108c4565b6107fb565b610762565b610705565b6106ec565b610672565b610637565b610611565b6105e8565b6105bf565b610596565b610578565b6104b6565b610485565b6103d0565b61038f565b610340565b6102aa565b610250565b600091031261024b57565b600080fd5b3461024b57600036600319011261024b57602060405160648152f35b9181601f8401121561024b578235916001600160401b03831161024b576020808501948460051b01011161024b57565b908160e091031261024b5790565b608036600319011261024b576004356001600160401b03811161024b576102d590369060040161026c565b6024356001600160401b03811161024b576102f490369060040161029c565b916044356001600160401b03811161024b5761031490369060040161026c565b90606435946001600160401b03861161024b5761033861001996369060040161026c565b9590946119db565b3461024b57600036600319011261024b576020600754604051908152f35b604060031982011261024b57600435906001600160401b03821161024b576103889160040161029c565b9060243590565b3461024b5760206103a86103a23661035e565b906121a6565b6040519015158152f35b6001600160a01b0381160361024b57565b35906103ce826103b2565b565b3461024b57602036600319011261024b576004356103ed816103b2565b6103f56139ec565b6001600160a01b0316801561044857600680546001600160a01b0319811683179091556001600160a01b03167ffff6ec843c076928bdba3d6b453f492a57d829b973c56036b5f7d30955d7b01b600080a3005b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908185d58dd1a5bdb881d985d5b1d605a1b6044820152606490fd5b3461024b57602036600319011261024b57600435600052600b602052602060ff604060002054166040519015158152f35b3461024b57600036600319011261024b576104cf6139ec565b60015460ff8160a01c161561053c5760ff60a01b19166001556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a1337f385a28cf4754bd62fde01bcce82b673bd45cb357f835cf679a756de5d8e93bcd600080a2005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b3461024b57600036600319011261024b57602060405162278d008152f35b3461024b57600036600319011261024b576004546040516001600160a01b039091168152602090f35b3461024b57600036600319011261024b576005546040516001600160a01b039091168152602090f35b3461024b57600036600319011261024b576006546040516001600160a01b039091168152602090f35b3461024b57600036600319011261024b57602060ff60015460a01c166040519015158152f35b3461024b57602036600319011261024b57600435600052600c6020526020604060002054604051908152f35b908161016091031261024b5790565b3461024b57604036600319011261024b576004356001600160401b03811161024b576106a2903690600401610663565b602435906001600160401b03821161024b573660238301121561024b578160040135906001600160401b03821161024b57366024838501011161024b5760246100199301906121cf565b3461024b5760206103a86106ff3661035e565b906125b2565b3461024b57600036600319011261024b5761071e6139ec565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461024b57602036600319011261024b5760043561077e6139ec565b61271081116107c45760078054908290556040805191825260208201929092527f5ec5620e288c4be955ccb6cfb3d55431a8fed5c4c96ffacc4b9506360695f64e9190a1005b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206665652042505360881b6044820152606490fd5b3461024b57600036600319011261024b576108146139ec565b61081c612ed5565b6001805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602090a1337f720419d686e04979382078792dce127b7417b1f1b934573e9ae7a7d40eb86e87600080a2005b919082519283825260005b8481106108af575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161088e565b3461024b57600036600319011261024b5761096a6109017f00000000000000000000000000000000000000000000000000000000000000006141d2565b61092a7f00000000000000000000000000000000000000000000000000000000000000006142bc565b60206040516109398282612034565b600081528161097881830194601f198301368737604051978897600f60f81b895260e0858a015260e0890190610883565b908782036040890152610883565b91466060870152306080870152600060a087015285830360c0870152519182815201929160005b8281106109ae57505050500390f35b83518552869550938101939281019260010161099f565b3461024b57602036600319011261024b57600435600052600a6020526060604060002060018060a01b0381541690600260018201549101549060405192835260208301526040820152f35b3461024b57600036600319011261024b576001546040516001600160a01b039091168152602090f35b3461024b57610a473661035e565b90610a50612e7f565b610a58612ed5565b610a89610a648261338f565b610a6c614a9b565b6042916040519161190160f01b8352600283015260228201522090565b90610a938161446e565b60408101908135610aa3816103b2565b6001600160a01b03163303610b6d577f86fb430316545beabd846d7b2eb3e7238960c028d31125164851a3f2305f7c9b91610b05610b00610af28785610afb610af6610af284610b609a6125b2565b1590565b612608565b6121a6565b61264b565b610b3c610b2f86610b20876000526009602052604060002090565b90600052602052604060002090565b805460ff19166001179055565b6001600160a01b0390610b4e90611e69565b60405195865216939081906020820190565b0390a36100196001600055565b60405162461bcd60e51b815260206004820152601560248201527413db9b1e481b585ad95c8818d85b8818d85b98d95b605a1b6044820152606490fd5b3461024b57606036600319011261024b576004356001600160401b03811161024b576103a8610bdf602092369060040161026c565b90610bf260243591604435933691612697565b614556565b3461024b57606036600319011261024b576004356001600160401b03811161024b57610c2790369060040161029c565b60243560443591610c36612e7f565b610c3e612ed5565b610c59610c4a82611e06565b610c5381611df7565b156126e3565b610dd4610cf96040610c6a8461338f565b93610c748161446e565b610ce6610c96610c9188610c8b6020860186611ec7565b90611f8b565b612772565b96610cd2610cc260608a510151610cbb84610b208c6000526008602052604060002090565b5490612112565b8a15159081610e11575b5061277d565b610b20876000526008602052604060002090565b610cf18882546120b9565b905501611e69565b6001600160a01b0381169390610d108515156127bf565b610d1b331515612804565b610dce6020610d2a845161209e565b845182810151919591610d68906040906001600160a01b031692015191610d59610d52612055565b9889612092565b6001600160a01b031687850152565b60408601528860608601520192610d7f845161209e565b93516020810151610dbc906040906001600160a01b031692015191610dac610da5612055565b9788612092565b6001600160a01b03166020870152565b604085015287606085015233836136aa565b336136aa565b60405192835233927f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb22779080602081015b0390a46100196001600055565b90508a111538610ccc565b608036600319011261024b576004356001600160401b03811161024b57610e4790369060040161029c565b6024356001600160401b03811161024b57610e6690369060040161029c565b906044356064356001600160401b03811161024b57610e8990369060040161026c565b9190610e93612e7f565b610e9b612ed5565b610eb7610ea785611e06565b610eb081611df7565b1515611e13565b610ec882610c8b6020870187611ec7565b90610edf610ed96020880188611ec7565b90611f82565b93610eeb848888613139565b6002610ef687611e06565b610eff81611df7565b1461106b575b5050610f108461338f565b9260e00135938460e083013590610f2691611fcd565b92610f379060608401358787613453565b604001610f4390611e69565b94604001610f5090611e69565b610f5982611ff4565b92610f6660208401611e69565b604084013590610f74612055565b95610f7f9087612092565b6001600160a01b03166020860152604085015285606085015260808301610fa590611ff4565b92610fb260a08201611e69565b9060c0013590610fc0612055565b94610fcb9086612092565b6001600160a01b0316602085015260408401528060608401528251610fef81611fea565b610ff881611fea565b1593611034610e049461103b937f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb227797611059575b5089856136aa565b82886136aa565b6040519485526001600160a01b039081169516939081906020820190565b61106590341015612849565b3861102c565b61107a91608087013584613249565b3880610f05565b3461024b57600036600319011261024b576020604051610e108152f35b3461024b57602036600319011261024b576004356110bb816103b2565b6110c36139ec565b6001600160a01b0316801561111657600580546001600160a01b0319811683179091556001600160a01b03167f6488517f0ed01887d76eb198684456f20dab9ab4dad305bd0c0247c7eaafdcf7600080a3005b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c6964206173736574207472616e73666572206167656e74000000006044820152606490fd5b602036600319011261024b576004356001600160401b03811161024b57611186903690600401610663565b61118e612e7f565b611196612ed5565b604051631344d6d960e11b8152602081806111b48560048301612941565b038173__$9bf758efd8785ea888de3f7a696bc2dc09$__5af49081156114895760009161152e575b506111f96001600160a01b036111f184611e69565b1615156123b6565b6112043315156127bf565b61122761121f61121384611e69565b6001600160a01b031690565b3314156129d6565b61128162278d0061127a60e085013561124281421015612a22565b610100860135611253814210612a64565b61125e828211612aa0565b611275610e1061126e8484612112565b1015612aec565b612112565b1115612b2c565b6112aa6112a5610af261129e84600052600b602052604060002090565b5460ff1690565b612b6b565b6112b38261460f565b6112c360a0830135341015612bb7565b6112e26112cf83611e69565b6112dc36602086016124bc565b90613c63565b6112f681600052600a602052604060002090565b61131760018201549182151592836114ff575b50546001600160a01b031690565b9061148e575b5060065461133590611213906001600160a01b031681565b61133e83611e69565b90803b1561024b5760405163397ae56160e21b8152600481018490526001600160a01b03929092166024830152336044830152346064830181905260009183916084918391905af180156114895761146e575b506113f561139d612064565b3381523460208201524260408201526113c083600052600a602052604060002090565b815181546001600160a01b0319166001600160a01b039190911617815560208201516001820155604090910151600290910155565b60408051348152426020820152339183917fa9d1969315752a4d63387f7972393f147be8c4662b0a2af2db8a4b0f0a953c659190a360c08201358015159081611463575b50611449575b6100196001600055565b61145761145c923690612525565b613f0e565b388061143f565b905034101538611439565b8061147d600061148393612034565b80610240565b38611391565b6129ca565b6006546114a590611213906001600160a01b031681565b803b1561024b5760405163116d00cb60e21b8152600481018490526001600160a01b039290921660248301526000908290604490829084905af18015611489571561131d578061147d60006114f993612034565b3861131d565b6115208161151a61151261152894611fb2565b612710900490565b906120b9565b341015612bfb565b38611309565b611550915060203d602011611556575b6115488183612034565b81019061288e565b386111dc565b503d61153e565b3461024b57600036600319011261024b5760206040516127108152f35b3461024b57600036600319011261024b576115936139ec565b478015611605576115ca6000808080856115ba61121361121360015460018060a01b031690565b5af16115c461213a565b50612c47565b6001546040519182526001600160a01b0316907f23d6711a1d031134a36921253c75aa59e967d38e369ac625992824315e204f2090602090a2005b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b3461024b57602036600319011261024b5760043561165e816103b2565b6116666139ec565b6001600160a01b031680156116b957600480546001600160a01b0319811683179091556001600160a01b03167faaebcf1bfa00580e41d966056b48521fa9f202645c86d4ddf28113e617c1b1d3600080a3005b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908199959481c9958da5c1a595b9d605a1b6044820152606490fd5b3461024b57604036600319011261024b576004356001600160401b03811161024b57611726903690600401610663565b60243590611732612e7f565b61176d610dd461174183611e69565b9360a0840194610dce61175387611e69565b95611772611765610140830183612c93565b9790986146b5565b612cc5565b61179361178e610af26117853685612d11565b60a00151421190565b612d9e565b6001600160a01b0383169661181e90611801906117fb906117b6338c1415612dd8565b6117c76117c28661482b565b6147c8565b996117f46117e86117e28d600052600c602052604060002090565b546120ab565b60c08801351015612e24565b369161233f565b886147d4565b61180d61121384611e69565b6001600160a01b0390911614612376565b61182c608082013598611e69565b93611842611838612055565b6003815295610dac565b60408501526001606085015261185a60208201611ff4565b90611892606061186c60408401611e69565b9201359161188261187b612055565b9485612092565b6001600160a01b03166020840152565b60408201528760608201526118a78433613c63565b6118bb86600052600c602052604060002090565b6118c58154612e70565b905533836136aa565b3461024b57604036600319011261024b576004356024359060005260086020526040600020906000526020526020604060002054604051908152f35b3461024b57602036600319011261024b57600435611927816103b2565b61192f6139ec565b6001600160a01b0381161561198757600180546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b959192949093946119ea612e7f565b6119f2612ed5565b6119fd868614611cd6565b611a08838614611d14565b611a13851515611d59565b600096875b868110611a7457505050505050505080611a38575b506103ce6001600055565b80611a48611a4e923410156120c6565b34612112565b8015611a2d576000808080611a6e94335af1611a6861213a565b5061216a565b38611a2d565b611a8a610ea7611a85838a86611db0565b611e06565b611aad611aa66112136040611aa0858c88611db0565b01611e69565b1515611e73565b611add611abb828a86611eb7565b35611ad4611aca848b87611db0565b6020810190611ec7565b91905010611efd565b611ae8818884611db0565b611af3828a86611eb7565b3590611b00838888611f3e565b90611b1284610c8b6020860186611ec7565b90611b2486610c8b60208e018e611ec7565b92611b30868d87613139565b6002611b3b86611e06565b611b4481611df7565b14611cc0575b5050611b7e604060e0611b5c8661338f565b94013594611aa0611b718760e0870135611fcd565b9760608601358888613453565b93611b8b60408c01611e69565b91611b9581611ff4565b91611ba260208301611e69565b611bcd604084013591611bbd611bb6612055565b9687612092565b6001600160a01b03166020860152565b6040840152856060840152611be460808301611ff4565b91611c1c60c0611bf660a08401611e69565b92013591611c0c611c05612055565b9586612092565b6001600160a01b03166020850152565b60408301528060608301528151611c3281611fea565b611c3b81611fea565b15611ca3575b5082611c7c7f2b2be5bdc62aaf8dbe8a0ffac99e7335c8d1245aa56d1d50e01fc21177fb227793611034611c9a948a60019c9b9a99986136aa565b60405194855260a088901b8890039081169516939081906020820190565b0390a401611a18565b611cb3919f9796959493976120b9565b9d38969293949596611c41565b611ccf91608086013584613249565b3880611b4a565b15611cdd57565b60405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152606490fd5b15611d1b57565b60405162461bcd60e51b81526020600482015260166024820152750a0e4dedecce640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b15611d6057565b60405162461bcd60e51b8152602060048201526012602482015271456d707479206f726465727320617272617960701b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b9190811015611dd25760051b8101359060de198136030182121561024b570190565b611d9a565b6003111561024b57565b634e487b7160e01b600052602160045260246000fd5b60031115611e0157565b611de1565b35611e1081611dd7565b90565b15611e1a57565b60405162461bcd60e51b815260206004820152602160248201527f6d617463684f7264657273206e6f7420737570706f7274656420666f722042496044820152601160fa1b6064820152608490fd5b35611e10816103b2565b15611e7a57565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206d616b6572206164647265737360581b6044820152606490fd5b9190811015611dd25760051b0190565b903590601e198136030182121561024b57018035906001600160401b03821161024b576020019161014082023603831361024b57565b15611f0457565b60405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840d2e8cada40d2dcc8caf60731b6044820152606490fd5b9190811015611dd25760051b81013590601e198136030182121561024b5701908135916001600160401b03831161024b576020018260051b3603811361024b579190565b9015611dd25790565b9190811015611dd257610140020190565b634e487b7160e01b600052601160045260246000fd5b90606482029180830460641490151715611fc857565b611f9c565b81810292918115918404141715611fc857565b6004111561024b57565b60041115611e0157565b35611e1081611fe0565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111761202f57604052565b611ffe565b90601f801991011681019081106001600160401b0382111761202f57604052565b604051906103ce608083612034565b604051906103ce606083612034565b604051906103ce61010083612034565b604051906103ce60e083612034565b6004821015611e015752565b516004811015611e015790565b9060018201809211611fc857565b91908201809211611fc857565b156120cd57565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f74616c206d73672e76616c7565000000006044820152606490fd5b91908203918211611fc857565b6001600160401b03811161202f57601f01601f191660200190565b3d15612165573d9061214b8261211f565b916121596040519384612034565b82523d6000602084013e565b606090565b1561217157565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b6121af9061338f565b600052600960205260406000209060005260205260ff6040600020541690565b6114579061223961223461222e6122b596956121e9612e7f565b6121f1612ed5565b6121fa85613a44565b9661221d612218610af261129e8b600052600b602052604060002090565b6122bf565b6117f46101008701354210156122ff565b83613ab7565b612376565b61224d6001600160a01b036111f183611e69565b61229561228e61121361227261226d87600052600a602052604060002090565b6123fa565b6122816020820151151561243a565b516001600160a01b031690565b1515612477565b6122ae6122a182611e69565b6112dc36602085016124bc565b3690612525565b6103ce6001600055565b156122c657565b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48199a5b985b1a5e9959607a1b6044820152606490fd5b1561230657565b60405162461bcd60e51b8152602060048201526011602482015270105d58dd1a5bdb881b9bdd08195b991959607a1b6044820152606490fd5b92919261234b8261211f565b916123596040519384612034565b82948184528183011161024b578281602093846000960137010152565b1561237d57565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b156123bd57565b60405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21030bab1ba34b7b71036b0b5b2b960591b6044820152606490fd5b90604051606081018181106001600160401b0382111761202f5760405260406002829460018060a01b038154168452600181015460208501520154910152565b1561244157565b60405162461bcd60e51b815260206004820152600e60248201526d139bc8189a591cc81c1b1858d95960921b6044820152606490fd5b1561247e57565b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4b73734b733903134b23232b960511b6044820152606490fd5b919082608091031261024b576040516124d481612014565b606080829480356124e481611fe0565b845260208101356124f4816103b2565b6020850152604081013560408501520135910152565b9080601f8301121561024b57816020611e109335910161233f565b9190916101608184031261024b5761253b612073565b92612545826103c3565b845261255481602084016124bc565b602085015260a0820135604085015260c0820135606085015260e0820135608085015261010082013560a085015261012082013560c08501526101408201356001600160401b03811161024b576125ab920161250a565b60e0830152565b906125ea6060916125c28461338f565b6000526008602052604060002081600052602052610c8b604060002054946020810190611ec7565b0135111590565b6001600160401b03811161202f5760051b60200190565b1561260f57565b60405162461bcd60e51b815260206004820152601460248201527313dc99195c88185b1c9958591e48199a5b1b195960621b6044820152606490fd5b1561265257565b60405162461bcd60e51b815260206004820152601760248201527f4f7264657220616c72656164792063616e63656c6c65640000000000000000006044820152606490fd5b9291906126a3816125f1565b936126b16040519586612034565b602085838152019160051b810192831161024b57905b8282106126d357505050565b81358152602091820191016126c7565b156126ea57565b60405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903134b21037b93232b960891b6044820152606490fd5b9190916101408184031261024b5760606101206040519261274184612014565b61275b849661275081846124bc565b8652608083016124bc565b602085015261010081013560408501520135910152565b611e10903690612721565b1561278457565b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081cd95b1b08185b5bdd5b9d606a1b6044820152606490fd5b156127c657565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c696420626964646572206164647265737360501b6044820152606490fd5b1561280b57565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073656c6c6572206164647265737360501b6044820152606490fd5b1561285057565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206d73672e76616c756560501b6044820152606490fd5b9081602091031261024b575190565b906004821015611e015752565b606080916128c28482356128bd81611fe0565b61289d565b60208101356128d0816103b2565b6001600160a01b03166020850152604081810135908501520135910152565b9035601e198236030181121561024b5701602081359101916001600160401b03821161024b57813603831361024b57565b908060209392818452848401376000828201840152601f01601f1916010190565b6101806129b9611e109360208452803561295a816103b2565b60018060a01b0316602085015261297760408501602083016128aa565b60a081013560c085015260c081013560e085015260e08101356101008501526101008101356101208501526101208101356101408501526101408101906128ef565b919092610160808201520191612920565b6040513d6000823e3d90fd5b156129dd57565b60405162461bcd60e51b815260206004820152601f60248201527f4d616b65722063616e6e6f7420626964206f6e206f776e2061756374696f6e006044820152606490fd5b15612a2957565b60405162461bcd60e51b8152602060048201526013602482015272105d58dd1a5bdb881b9bdd081cdd185c9d1959606a1b6044820152606490fd5b15612a6b57565b60405162461bcd60e51b815260206004820152600d60248201526c105d58dd1a5bdb88195b991959609a1b6044820152606490fd5b15612aa757565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c69642061756374696f6e206475726174696f6e00000000000000006044820152606490fd5b15612af357565b60405162461bcd60e51b8152602060048201526011602482015270105d58dd1a5bdb881d1bdbc81cda1bdc9d607a1b6044820152606490fd5b15612b3357565b60405162461bcd60e51b815260206004820152601060248201526f41756374696f6e20746f6f206c6f6e6760801b6044820152606490fd5b15612b7257565b60405162461bcd60e51b815260206004820152601960248201527f41756374696f6e20616c72656164792066696e616c697a6564000000000000006044820152606490fd5b15612bbe57565b60405162461bcd60e51b81526020600482015260156024820152744269642062656c6f7720737461727420707269636560581b6044820152606490fd5b15612c0257565b60405162461bcd60e51b815260206004820152601760248201527f42696420696e6372656d656e7420746f6f20736d616c6c0000000000000000006044820152606490fd5b15612c4e57565b60405162461bcd60e51b815260206004820152601b60248201527f456d657267656e6379207769746864726177616c206661696c656400000000006044820152606490fd5b903590601e198136030182121561024b57018035906001600160401b03821161024b5760200191813603831361024b57565b15612ccc57565b60405162461bcd60e51b815260206004820152601c60248201527f42696420636f6c6c656374696f6e206973206e6f7420455243373231000000006044820152606490fd5b9190916101608184031261024b57612d27612073565b92612d31826103c3565b8452612d4081602084016124bc565b6020850152612d5160a083016103c3565b604085015260c0820135606085015260e0820135608085015261010082013560a085015261012082013560c08501526101408201356001600160401b03811161024b576125ab920161250a565b15612da557565b60405162461bcd60e51b815260206004820152600b60248201526a109a5908195e1c1a5c995960aa1b6044820152606490fd5b15612ddf57565b60405162461bcd60e51b815260206004820152601c60248201527f4269646465722063616e6e6f7420616363657074206f776e20626964000000006044820152606490fd5b15612e2b57565b60405162461bcd60e51b815260206004820152601960248201527f426964206d6178207175616e74697479206578636565646564000000000000006044820152606490fd5b6000198114611fc85760010190565b600260005414612e90576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60ff60015460a01c16612ee457565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b15612f2357565b60405162461bcd60e51b815260206004820152601360248201527229b2b73232b91034b9903737ba103a30b5b2b960691b6044820152606490fd5b15612f6557565b60405162461bcd60e51b815260206004820152601260248201527113585ad95c881bdc99195c88199a5b1b195960721b6044820152606490fd5b15612fa657565b60405162461bcd60e51b815260206004820152601560248201527413585ad95c881bdc99195c8818d85b98d95b1b1959605a1b6044820152606490fd5b35906103ce82611dd7565b81601f8201121561024b578035613004816125f1565b926130126040519485612034565b818452602061014081860193028401019281841161024b57602001915b83831061303d575050505090565b60206101409161304d8486612721565b81520192019161302f565b91909160e08184031261024b5761306d612083565b9261307782612fe3565b845260208201356001600160401b03811161024b5781613098918401612fee565b60208501526130a9604083016103c3565b60408501526130ba606083016103c3565b60608501526080820135608085015260a082013560a085015260c08201356001600160401b03811161024b576130f0920161250a565b60c0830152565b156130fe57565b60405162461bcd60e51b815260206004820152601360248201527213585ad95c881bdc99195c88195e1c1a5c9959606a1b6044820152606490fd5b91906131448361446e565b61315582610c8b6020860186611ec7565b916131636020830183611ec7565b15611dd2576040850135613176816103b2565b6060840135613184816103b2565b6001600160a01b0390811691160361320b576103ce946131d06131c96112136040610af297611aa08a6080896131c26132019b6132069f8401614968565b0190614968565b3314612f1c565b6131e56131e0610af285846125b2565b612f5e565b6131fa6131f5610af285846121a6565b612f9f565b3690613058565b61473d565b6130f7565b60405162461bcd60e51b81526020600482015260166024820152752a30b5b2b91036bab9ba1036b0ba31b41036b0b5b2b960511b6044820152606490fd5b613262939261325a610bf292614755565b933691612697565b1561326957565b60405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21026b2b935b63290383937b7b360611b6044820152606490fd5b906132af826125f1565b6132bc6040519182612034565b82815280926132cd601f19916125f1565b0190602036910137565b8051821015611dd25760209160051b010190565b602060408183019282815284518094520192019060005b81811061330f5750505090565b8251845260209384019390920191600101613302565b92969594919693909360e08401977f06c8ffd199dde1e3c1f0d71dae647c455e0da36831ccd370e21bb7d22d37095985526003861015611e015760c0956020860152604085015260018060a01b0316606084015260018060a01b0316608083015260a08201520152565b602081019061339e8282611ec7565b90506133a9816132a5565b9260005b828110613429575050506134236133c382611e06565b926040516133e7816133d96020820194856132eb565b03601f198101835282612034565b5190206133d96133f960408501611e69565b9361340660608201611e69565b9060a060808201359101359160405196879560208701998a613325565b51902090565b8061344261343d600193610c8b8689611ec7565b614755565b61344c82886132d7565b52016133ad565b92908360005260086020526040600020826000526020526040600020549281151590816134d9575b50156134a557613491610b20916134a2946120b9565b936000526008602052604060002090565b55565b60405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a5908199a5b1b60a21b6044820152606490fd5b9050818401808511611fc85711153861347b565b156134f457565b60405162461bcd60e51b8152602060048201526015602482015274119959481c9958da5c1a595b9d081b9bdd081cd95d605a1b6044820152606490fd5b1561353857565b60405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881859d95b9d081b9bdd081cd95d60521b6044820152606490fd5b1561357d57565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606490fd5b6001600160a01b039182168152918116602083015290911660408201526060810191909152608081019190915260c060a0820181905260009082015260e00190565b6001600160a01b03918216815291811660208301529091166040820152606081019190915260800190565b1561362a57565b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b1561366c57565b60405162461bcd60e51b815260206004820152601660248201527513985d1a5d99481d1c985b9cd9995c8819985a5b195960521b6044820152606490fd5b600454919290916136c5906001600160a01b031615156134ed565b6005546136da906001600160a01b0316611213565b926136e6841515613531565b6001600160a01b038116926136fc841515613576565b6060830191613712611512845160075490611fcd565b9361371e858551612112565b96815161372a81611fea565b61373381611fea565b61379f575050505060006103ce9481948294613753849551341015612849565b8061376a575b505af161376461213a565b50613665565b838080806137999461378961121361121360045460018060a01b031690565b5af161379361213a565b50613623565b38613759565b90939194929550600184516137b381611fea565b6137bc81611fea565b036138c857505080613843575b506005546137f7906020906137e890611213906001600160a01b031681565b9201516001600160a01b031690565b92813b1561024b57600080946138236040519788968795869463368fa33960e21b8652600486016135f8565b03925af18015611489576138345750565b8061147d60006103ce93612034565b60055461385a90611213906001600160a01b031681565b60208301516001600160a01b03166004549091906001600160a01b031690803b1561024b5786600080946138a46040519788968795869463368fa33960e21b8652600486016135f8565b03925af1801561148957156137c9578061147d60006138c293612034565b386137c9565b915091939450600384516138db81611fea565b6138e481611fea565b0361394257505060055461390290611213906001600160a01b031681565b60208301516040906001600160a01b031693015193813b1561024b576000809461382360405197889687958694633c4fc9fb60e11b8652600486016135f8565b6002849592955161395281611fea565b61395b81611fea565b036139ae576001600160a01b031660208401519091906040906001600160a01b03169401519451823b1561024b57600094613823869260405198899788968795633ab9e1f760e21b8752600487016135b6565b60405162461bcd60e51b8152602060048201526016602482015275556e737570706f72746564206173736574207479706560501b6044820152606490fd5b6001546001600160a01b03163303613a0057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6020613a649160405180938192631344d6d960e11b835260048301612941565b038173__$9bf758efd8785ea888de3f7a696bc2dc09$";

type MarketplaceConstructorParams =
  | [linkLibraryAddresses: MarketplaceLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Marketplace__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MarketplaceLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$9bf758efd8785ea888de3f7a696bc2dc09\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/LibAuction.sol:LibAuction"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _feeRecipient: AddressLike,
    _assetTransferAgent: AddressLike,
    _auctionVault: AddressLike,
    _feeBps: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _feeRecipient,
      _assetTransferAgent,
      _auctionVault,
      _feeBps,
      overrides || {}
    );
  }
  override deploy(
    _feeRecipient: AddressLike,
    _assetTransferAgent: AddressLike,
    _auctionVault: AddressLike,
    _feeBps: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _feeRecipient,
      _assetTransferAgent,
      _auctionVault,
      _feeBps,
      overrides || {}
    ) as Promise<
      Marketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Marketplace__factory {
    return super.connect(runner) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new Interface(_abi) as MarketplaceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Marketplace {
    return new Contract(address, _abi, runner) as unknown as Marketplace;
  }
}

export interface MarketplaceLibraryAddresses {
  ["contracts/libraries/LibAuction.sol:LibAuction"]: string;
}
