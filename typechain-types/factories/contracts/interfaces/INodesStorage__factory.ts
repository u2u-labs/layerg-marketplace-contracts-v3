/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  INodesStorage,
  INodesStorageInterface,
} from "../../../contracts/interfaces/INodesStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_nodeAddresses",
        type: "address[]",
      },
    ],
    name: "addNodes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalValidNodes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidNodes",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "isValidNode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "removeNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class INodesStorage__factory {
  static readonly abi = _abi;
  static createInterface(): INodesStorageInterface {
    return new Interface(_abi) as INodesStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): INodesStorage {
    return new Contract(address, _abi, runner) as unknown as INodesStorage;
  }
}
