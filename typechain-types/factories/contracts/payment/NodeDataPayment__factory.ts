/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NodeDataPayment,
  NodeDataPaymentInterface,
} from "../../../contracts/payment/NodeDataPayment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nodesStorageAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "SessionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "SessionStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "usedDataAmount",
        type: "uint256",
      },
    ],
    name: "endSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "client",
        type: "address",
      },
    ],
    name: "getSession",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "node",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "unitPrice",
                type: "uint256",
              },
            ],
            internalType: "struct LibPayment.Payment",
            name: "payment",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibSession.Session",
        name: "session",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nodesStorage",
    outputs: [
      {
        internalType: "contract INodesStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nodesStorage",
        type: "address",
      },
    ],
    name: "setNodeStorage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "node",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "unitPrice",
                type: "uint256",
              },
            ],
            internalType: "struct LibPayment.Payment",
            name: "payment",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "startTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
        ],
        internalType: "struct LibSession.Session",
        name: "session",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "nodeSig",
        type: "bytes",
      },
    ],
    name: "startSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016060405234801561001157600080fd5b50604051611c9a380380611c9a8339810160408190526100309161024a565b604080518082018252600f81526e139bd91951185d1854185e5b595b9d608a1b602080830191909152825180840190935260018352603160f81b9083015290818161007c826000610162565b6101205261008b816001610162565b61014052815160208084019190912060e052815190820120610100524660a05261011860e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525050600160025561013133610195565b600480546001600160a01b039384166001600160a01b0319918216179091556005805492909316911617905561044c565b600060208351101561017e57610177836101e7565b905061018f565b81610189848261031c565b5060ff90505b92915050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080829050601f8151111561021b578260405163305a27a960e01b815260040161021291906103da565b60405180910390fd5b805161022682610428565b179392505050565b80516001600160a01b038116811461024557600080fd5b919050565b6000806040838503121561025d57600080fd5b6102668361022e565b91506102746020840161022e565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102a757607f821691505b6020821081036102c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561031757806000526020600020601f840160051c810160208510156102f45750805b601f840160051c820191505b818110156103145760008155600101610300565b50505b505050565b81516001600160401b038111156103355761033561027d565b610349816103438454610293565b846102cd565b6020601f82116001811461037d57600083156103655750848201515b600019600385901b1c1916600184901b178455610314565b600084815260208120601f198516915b828110156103ad578785015182556020948501946001909201910161038d565b50848210156103cb5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b8181101561040857602081860181015160408684010152016103eb565b506000604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156102c75760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516117f46104a6600039600061056e0152600061054401526000611118015260006110f00152600061104b015260006110750152600061109f01526117f46000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610157578063d4ea6f331461017c578063e244c4ff1461018f578063e65a5d3f146101a2578063f2fde38b146101b5578063fbfa77cf146101c857600080fd5b80633b09c301146100b95780636817031b146100ce578063715018a6146100e15780637ecebe00146100e957806384b0196e1461011c5780638c8e13b914610137575b600080fd5b6100cc6100c73660046112ae565b6101db565b005b6100cc6100dc366004611350565b6104aa565b6100cc610522565b6101096100f7366004611350565b60076020526000908152604090205481565b6040519081526020015b60405180910390f35b610124610536565b60405161011397969594939291906113ba565b61014a610145366004611350565b6105be565b604051610113919061148a565b6003546001600160a01b03165b6040516001600160a01b039091168152602001610113565b6100cc61018a3660046114e8565b610673565b600454610164906001600160a01b031681565b6100cc6101b0366004611350565b6109a5565b6100cc6101c3366004611350565b610a25565b600554610164906001600160a01b031681565b60006101ea6020850185611350565b60048054604051639ebd11ef60e01b81526001600160a01b03808516938201939093529293501690639ebd11ef90602401602060405180830381865afa158015610238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025c9190611514565b6102a35760405162461bcd60e51b8152602060048201526013602482015272139bd919481b9bdd081c9959da5cdd195c9959606a1b60448201526064015b60405180910390fd5b336000908152600660205260409020546001600160a01b0316156103095760405162461bcd60e51b815260206004820152601760248201527f53657373696f6e20616c72656164792073746172746564000000000000000000604482015260640161029a565b3360009081526007602052604090205460a0850135146103635760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642073657373696f6e206e6f6e636560581b604482015260640161029a565b600061037c610377368790038701876115ab565b610a9e565b905060006103c08286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ab792505050565b9050826001600160a01b0316816001600160a01b0316146104185760405162461bcd60e51b81526020600482015260126024820152710a6d2cedcc2e8eae4ca40dad2e6dac2e8c6d60731b604482015260640161029a565b3360009081526006602052604090208690610433828261164d565b505033600090815260076020526040812080549161045083611712565b9091555050604080516080880135815260a0880135602082015233916001600160a01b038616917f806e8a38a8fe29ed146beba19b14f498a9a581b47371e06841d07febf839adb4910160405180910390a3505050505050565b6104b2610adb565b6001600160a01b0381166105005760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964207661756c74206164647265737360581b604482015260640161029a565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b61052a610adb565b6105346000610b35565b565b6000606080828080836105697f000000000000000000000000000000000000000000000000000000000000000083610b87565b6105947f00000000000000000000000000000000000000000000000000000000000000006001610b87565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6105c661125a565b6001600160a01b0380831660009081526006602090815260409182902082516080810184528154909416845282516060810190935260018082018054929493860193929091839160ff169081111561062057610620611452565b600181111561063157610631611452565b8152815461010090046001600160a01b031660208083019190915260019092015460409182015291835260038401549083015260049092015491015292915050565b61067b610c32565b60048054604051639ebd11ef60e01b815233928101929092526001600160a01b031690639ebd11ef90602401602060405180830381865afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190611514565b6107435760405162461bcd60e51b815260206004820152602660248201527f43616c6c6572206973206e6f742061206e6f6465206f72206e6f7420726567696044820152651cdd195c995960d21b606482015260840161029a565b6001600160a01b038083166000908152600660205260409020805490911633146107a15760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21039b2b9b9b4b7b760891b604482015260640161029a565b80600301544210156107f55760405162461bcd60e51b815260206004820152601c60248201527f53746172742074696d657374616d7020697320696e2066757475726500000000604482015260640161029a565b6000816003015442610807919061172b565b90506201518081101561086c5760405162461bcd60e51b815260206004820152602760248201527f53657373696f6e206475726174696f6e206d757374206265206174206c6561736044820152667420312064617960c81b606482015260840161029a565b600282015460009061087f90859061173e565b83546040805160608101909152600180870180549495506108f6948a946001600160a01b03169392839160ff16908111156108bc576108bc611452565b60018111156108cd576108cd611452565b8152815461010090046001600160a01b0316602082015260019091015460409091015284610c89565b825460048401546040516001600160a01b038089169316917f1f477cd758cdd08ee05c131bb6c29444915f350710c005e80376bc79be0fe1679161094291428252602082015260400190565b60405180910390a35050506001600160a01b038216600090815260066020526040812080546001600160a01b03191681556001810180546001600160a81b03191690556002810182905560038101829055600401556109a16001600255565b5050565b6109ad610adb565b6001600160a01b038116610a035760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964206e6f6465732073746f726167652061646472657373000000604482015260640161029a565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610a2d610adb565b6001600160a01b038116610a925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029a565b610a9b81610b35565b50565b6000610ab1610aac83610d6f565b610dfe565b92915050565b6000806000610ac68585610e2b565b91509150610ad381610e70565b509392505050565b6003546001600160a01b031633146105345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029a565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060ff8314610ba157610b9a83610fba565b9050610ab1565b818054610bad90611755565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd990611755565b8015610c265780601f10610bfb57610100808354040283529160200191610c26565b820191906000526020600020905b815481529060010190602001808311610c0957829003601f168201915b50505050509050610ab1565b6002805403610c835760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161029a565b60028055565b6005546020830151604051633c6340f360e21b81526001600160a01b0387811660048301528681166024830152918216604482015260648101849052600092919091169063f18d03cc906084016020604051808303816000875af1158015610cf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d199190611514565b905080610d685760405162461bcd60e51b815260206004820152601760248201527f5061796d656e74207472616e73666572206661696c6564000000000000000000604482015260640161029a565b5050505050565b60007f1799f15e4095744da5fe2a74fb2b6db1087f9fce877c939295d43158cfb172768260000151610da48460200151610ff9565b604080860151606080880151835160208101979097526001600160a01b039095169286019290925290840191909152608083015260a082015260c0015b604051602081830303815290604052805190602001209050919050565b6000610ab1610e0b61103e565b8360405161190160f01b8152600281019290925260228201526042902090565b6000808251604103610e615760208301516040840151606085015160001a610e558782858561116e565b94509450505050610e69565b506000905060025b9250929050565b6000816004811115610e8457610e84611452565b03610e8c5750565b6001816004811115610ea057610ea0611452565b03610eed5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161029a565b6002816004811115610f0157610f01611452565b03610f4e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161029a565b6003816004811115610f6257610f62611452565b03610a9b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161029a565b60606000610fc783611232565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b60007fccc62986cb8a981dd71a3802f5a7bc8b6422514d7c1c405a256d228acb9a9693826000015183602001518460400151604051602001610de1949392919061178f565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561109757507f000000000000000000000000000000000000000000000000000000000000000046145b156110c157507f000000000000000000000000000000000000000000000000000000000000000090565b611169604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156111a55750600090506003611229565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111f9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661122257600060019250925050611229565b9150600090505b94509492505050565b600060ff8216601f811115610ab157604051632cd44ac360e21b815260040160405180910390fd5b604051806080016040528060006001600160a01b0316815260200161129a6040805160608101909152806000815260006020820181905260409091015290565b815260200160008152602001600081525090565b600080600083850360e08112156112c457600080fd5b60c08112156112d257600080fd5b5083925060c084013567ffffffffffffffff8111156112f057600080fd5b8401601f8101861361130157600080fd5b803567ffffffffffffffff81111561131857600080fd5b86602082840101111561132a57600080fd5b939660209190910195509293505050565b6001600160a01b0381168114610a9b57600080fd5b60006020828403121561136257600080fd5b813561136d8161133b565b9392505050565b6000815180845260005b8181101561139a5760208185018101518683018201520161137e565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b8816815260e0602082015260006113d960e0830189611374565b82810360408401526113eb8189611374565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015611441578351835260209384019390920191600101611423565b50909b9a5050505050505050505050565b634e487b7160e01b600052602160045260246000fd5b6002811061148657634e487b7160e01b600052602160045260246000fd5b9052565b81516001600160a01b03168152602080830151805160c08401926114b19190850190611468565b60018060a01b036020820151166040840152604081015160608401525060408301516080830152606083015160a083015292915050565b600080604083850312156114fb57600080fd5b82356115068161133b565b946020939093013593505050565b60006020828403121561152657600080fd5b8151801515811461136d57600080fd5b6040516080810167ffffffffffffffff8111828210171561156757634e487b7160e01b600052604160045260246000fd5b60405290565b6040516060810167ffffffffffffffff8111828210171561156757634e487b7160e01b600052604160045260246000fd5b60028110610a9b57600080fd5b600081830360c0811280156115bf57600080fd5b5060006115ca611536565b84356115d58161133b565b81526060601f19840112156115e8578182fd5b6115f061156d565b925060208501356116008161159e565b835260408501356116108161133b565b6020848101919091526060868101356040808701919091529183019490945260808601359082015260a09094013591840191909152509092915050565b81356116588161133b565b81546001600160a01b0319166001600160a01b03919091161781556001810160208301356116858161159e565b600281106116a357634e487b7160e01b600052602160045260246000fd5b815460408501356116b38161133b565b610100600160a81b0360089190911b1660ff929092166001600160a81b03199190911617179055606082013560028201556080820135600382015560a090910135600490910155565b634e487b7160e01b600052601160045260246000fd5b600060018201611724576117246116fc565b5060010190565b81810381811115610ab157610ab16116fc565b8082028115828204841417610ab157610ab16116fc565b600181811c9082168061176957607f821691505b60208210810361178957634e487b7160e01b600052602260045260246000fd5b50919050565b848152608081016117a36020830186611468565b6001600160a01b03939093166040820152606001529291505056fea26469706673582212201eba24631092e82d78db7a314ce090d4b168c1fd945cc9e1da8f3ae5676d857964736f6c634300081c0033";

type NodeDataPaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NodeDataPaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NodeDataPayment__factory extends ContractFactory {
  constructor(...args: NodeDataPaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    nodesStorageAddress: AddressLike,
    vaultAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      nodesStorageAddress,
      vaultAddress,
      overrides || {}
    );
  }
  override deploy(
    nodesStorageAddress: AddressLike,
    vaultAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      nodesStorageAddress,
      vaultAddress,
      overrides || {}
    ) as Promise<
      NodeDataPayment & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NodeDataPayment__factory {
    return super.connect(runner) as NodeDataPayment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NodeDataPaymentInterface {
    return new Interface(_abi) as NodeDataPaymentInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NodeDataPayment {
    return new Contract(address, _abi, runner) as unknown as NodeDataPayment;
  }
}
